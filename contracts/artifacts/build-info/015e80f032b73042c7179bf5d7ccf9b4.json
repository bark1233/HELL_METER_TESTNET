{
	"id": "015e80f032b73042c7179bf5d7ccf9b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ChainlinkRandoms.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"../node_modules/@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"../node_modules/@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\";\nimport \"./interfaces/IRandoms.sol\";\n\nstruct SeedState {\n    bytes32 requestId;\n    uint256 seed;\n    bool isAvailable;\n}\n\ncontract ChainlinkRandoms is IRandoms, Pausable, AccessControl, VRFConsumerBase {\n    using SafeERC20 for IERC20;\n\n    uint256 constant VRF_MAGIC_SEED = uint256(keccak256(\"WTHell\"));\n\n    bytes32 public constant RANDOMNESS_REQUESTER = keccak256(\"RANDOMNESS_REQUESTER\");\n\n    bytes32 private keyHash;\n    uint256 private fee;\n\n    uint256 private seed;\n\n    // BSC testnet details:\n    // LINK token: 0x84b9B910527Ad5C03A9Ca831909E21e236EA7b06\n    // VRF Coordinator: 0xa555fC018435bef5A13C6c6870a9d4C11DEC329C\n    // Key Hash: 0xcaf3c3727e033261d383b315559476f48034c13b18f8cafed4d871abe5049186\n    // Fee: 0.1 * 10 ** 18 // 0.1 LINK\n\n    constructor(address _vrfCoordinator, address _link, bytes32 _keyHash, uint256 _fee)\n        VRFConsumerBase(\n            _vrfCoordinator, // VRF Coordinator\n            _link  // LINK Token\n        ) public\n    {\n        keyHash = _keyHash;\n        fee = _fee;\n\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    // Views\n    function getRandomSeed(address user) external override view returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(user, seed, blockhash(block.number - 1))));\n    }\n\n    // Mutative\n\n    /**\n     * Requests randomness from a user-provided seed\n     */\n    function requestRandomNumber() external whenNotPaused {\n        require(hasRole(RANDOMNESS_REQUESTER, msg.sender), \"Sender cannot request seed\");\n        require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK\");\n\n        // the user-provided seed is not necessary, as per the docs\n        // hence we set it to an arbitrary constant\n        requestRandomness(keyHash, VRF_MAGIC_SEED);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * Callback function used by VRF Coordinator\n     */\n    function fulfillRandomness(bytes32 /* requestId */, uint256 randomness) internal override {\n        seed = randomness;\n    }\n\n    function withdrawLink(uint256 tokenAmount) external onlyOwner {\n        // very awkward - but should be safe given that the LINK token is ERC20-compatible\n        IERC20(address(LINK)).safeTransfer(msg.sender, tokenAmount);\n    }\n\n    // Modifiers\n    modifier onlyOwner() {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Not admin\");\n        _;\n    }\n}\n"
			},
			"contracts/interfaces/IRandoms.sol": {
				"content": "pragma solidity ^0.6.5;\n\ninterface IRandoms {\n    // Views\n    function getRandomSeed(address user) external view returns (uint256 seed);\n}\n"
			},
			"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./vendor/SafeMathChainlink.sol\";\n\nimport \"./interfaces/LinkTokenInterface.sol\";\n\nimport \"./VRFRequestIDBase.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constuctor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash), and have told you the minimum LINK\n * @dev price for VRF service. Make sure your contract has sufficient LINK, and\n * @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n * @dev want to generate randomness from.\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomness method.\n *\n * @dev The randomness argument to fulfillRandomness is the actual random value\n * @dev generated from your seed.\n *\n * @dev The requestId argument is generated from the keyHash and the seed by\n * @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n * @dev requests open, you can use the requestId to track which seed is\n * @dev associated with which randomness. See VRFRequestIDBase.sol for more\n * @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.)\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ. (Which is critical to making unpredictable randomness! See the\n * @dev next section.)\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the ultimate input to the VRF is mixed with the block hash of the\n * @dev block in which the request is made, user-provided seeds have no impact\n * @dev on its economic security properties. They are only included for API\n * @dev compatability with previous versions of this contract.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request.\n */\nabstract contract VRFConsumerBase is VRFRequestIDBase {\n\n  using SafeMathChainlink for uint256;\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBase expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomness the VRF output\n   */\n  function fulfillRandomness(bytes32 requestId, uint256 randomness)\n    internal virtual;\n\n  /**\n   * @dev In order to keep backwards compatibility we have kept the user\n   * seed field around. We remove the use of it because given that the blockhash\n   * enters later, it overrides whatever randomness the used seed provides.\n   * Given that it adds no security, and can easily lead to misunderstandings,\n   * we have removed it from usage and can now provide a simpler API.\n   */\n  uint256 constant private USER_SEED_PLACEHOLDER = 0;\n\n  /**\n   * @notice requestRandomness initiates a request for VRF output given _seed\n   *\n   * @dev The fulfillRandomness method receives the output, once it's provided\n   * @dev by the Oracle, and verified by the vrfCoordinator.\n   *\n   * @dev The _keyHash must already be registered with the VRFCoordinator, and\n   * @dev the _fee must exceed the fee specified during registration of the\n   * @dev _keyHash.\n   *\n   * @dev The _seed parameter is vestigial, and is kept only for API\n   * @dev compatibility with older versions. It can't *hurt* to mix in some of\n   * @dev your own randomness, here, but it's not necessary because the VRF\n   * @dev oracle will mix the hash of the block containing your request into the\n   * @dev VRF seed it ultimately uses.\n   *\n   * @param _keyHash ID of public key against which randomness is generated\n   * @param _fee The amount of LINK to send with the request\n   *\n   * @return requestId unique ID for this request\n   *\n   * @dev The returned requestId can be used to distinguish responses to\n   * @dev concurrent requests. It is passed as the first argument to\n   * @dev fulfillRandomness.\n   */\n  function requestRandomness(bytes32 _keyHash, uint256 _fee)\n    internal returns (bytes32 requestId)\n  {\n    LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, USER_SEED_PLACEHOLDER));\n    // This is the seed passed to VRFCoordinator. The oracle will mix this with\n    // the hash of the block containing this request to obtain the seed/input\n    // which is finally passed to the VRF cryptographic machinery.\n    uint256 vRFSeed  = makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]);\n    // nonces[_keyHash] must stay in sync with\n    // VRFCoordinator.nonces[_keyHash][this], which was incremented by the above\n    // successful LINK.transferAndCall (in VRFCoordinator.randomnessRequest).\n    // This provides protection against the user repeating their input seed,\n    // which would result in a predictable/duplicate output, if multiple such\n    // requests appeared in the same block.\n    nonces[_keyHash] = nonces[_keyHash].add(1);\n    return makeRequestId(_keyHash, vRFSeed);\n  }\n\n  LinkTokenInterface immutable internal LINK;\n  address immutable private vrfCoordinator;\n\n  // Nonces for each VRF key from which randomness has been requested.\n  //\n  // Must stay in sync with VRFCoordinator[_keyHash][this]\n  mapping(bytes32 /* keyHash */ => uint256 /* nonce */) private nonces;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   * @param _link address of LINK token contract\n   *\n   * @dev https://docs.chain.link/docs/link-token-contracts\n   */\n  constructor(address _vrfCoordinator, address _link) public {\n    vrfCoordinator = _vrfCoordinator;\n    LINK = LinkTokenInterface(_link);\n  }\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {\n    require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\");\n    fulfillRandomness(requestId, randomness);\n  }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"
			},
			"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract VRFRequestIDBase {\n\n  /**\n   * @notice returns the seed which is actually input to the VRF coordinator\n   *\n   * @dev To prevent repetition of VRF output due to repetition of the\n   * @dev user-supplied seed, that seed is combined in a hash with the\n   * @dev user-specific nonce, and the address of the consuming contract. The\n   * @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n   * @dev the final seed, but the nonce does protect against repetition in\n   * @dev requests which are included in a single block.\n   *\n   * @param _userSeed VRF seed input provided by user\n   * @param _requester Address of the requesting contract\n   * @param _nonce User-specific nonce at the time of the request\n   */\n  function makeVRFInputSeed(bytes32 _keyHash, uint256 _userSeed,\n    address _requester, uint256 _nonce)\n    internal pure returns (uint256)\n  {\n    return  uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)));\n  }\n\n  /**\n   * @notice Returns the id for this request\n   * @param _keyHash The serviceAgreement ID to be used for this request\n   * @param _vRFInputSeed The seed to be passed directly to the VRF\n   * @return The id for this request\n   *\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\n   * @dev contract, but the one generated by makeVRFInputSeed\n   */\n  function makeRequestId(\n    bytes32 _keyHash, uint256 _vRFInputSeed) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed));\n  }\n}\n"
			},
			"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string memory tokenName);\n  function symbol() external view returns (string memory tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"
			},
			"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ChainlinkRandoms.sol": {
				"ChainlinkRandoms": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_link",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RANDOMNESS_REQUESTER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRandomSeed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "randomness",
									"type": "uint256"
								}
							],
							"name": "rawFulfillRandomness",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestRandomNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawLink",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ChainlinkRandoms.sol\":516:2864  contract ChainlinkRandoms is IRandoms, Pausable, AccessControl, VRFConsumerBase {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ChainlinkRandoms.sol\":1154:1473  constructor(address _vrfCoordinator, address _link, bytes32 _keyHash, uint256 _fee)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/ChainlinkRandoms.sol\":1275:1290  _vrfCoordinator */\n  dup4\n    /* \"contracts/ChainlinkRandoms.sol\":1323:1328  _link */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":945:950  false */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":935:942  _paused */\n  dup1\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":935:950  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9422:9437  _vrfCoordinator */\n  dup2\n    /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9405:9437  vrfCoordinator = _vrfCoordinator */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9469:9474  _link */\n  dup1\n    /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9443:9475  LINK = LinkTokenInterface(_link) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9340:9480  constructor(address _vrfCoordinator, address _link) public {... */\n  pop\n  pop\n    /* \"contracts/ChainlinkRandoms.sol\":1385:1393  _keyHash */\n  dup2\n    /* \"contracts/ChainlinkRandoms.sol\":1375:1382  keyHash */\n  0x03\n    /* \"contracts/ChainlinkRandoms.sol\":1375:1393  keyHash = _keyHash */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ChainlinkRandoms.sol\":1409:1413  _fee */\n  dup1\n    /* \"contracts/ChainlinkRandoms.sol\":1403:1406  fee */\n  0x04\n    /* \"contracts/ChainlinkRandoms.sol\":1403:1413  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ChainlinkRandoms.sol\":1424:1466  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_9\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n  0x00\n    /* \"contracts/ChainlinkRandoms.sol\":1435:1453  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/ChainlinkRandoms.sol\":1455:1465  msg.sender */\n  caller\n    /* \"contracts/ChainlinkRandoms.sol\":1424:1434  _setupRole */\n  shl(0x20, tag_10)\n    /* \"contracts/ChainlinkRandoms.sol\":1424:1466  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/ChainlinkRandoms.sol\":1154:1473  constructor(address _vrfCoordinator, address _link, bytes32 _keyHash, uint256 _fee)... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ChainlinkRandoms.sol\":516:2864  contract ChainlinkRandoms is IRandoms, Pausable, AccessControl, VRFConsumerBase {... */\n  jump(tag_11)\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_10:\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  tag_13\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6677:6681  role */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6683:6690  account */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6666:6676  _grantRole */\n  shl(0x20, tag_14)\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\ntag_14:\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  tag_16\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7123:7130  account */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7104  _roles */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7105:7109  role */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7118  _roles[role].members */\n  0x00\n  add\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n  or(tag_0_64, shl(0x20, tag_17))\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n  iszero\n  tag_18\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n  tag_19\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7179:7189  _msgSender */\n  shl(0x20, tag_20)\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7170:7177  account */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7164:7168  role */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\ntag_18:\n    /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_17:\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_22\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6537  set._inner */\n  0x00\n  add\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6563:6568  value */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6539:6571  bytes32(uint256(uint160(value))) */\n  0x00\n  shl\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n  shl(0x20, tag_23)\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_20:\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_23:\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  tag_26\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n  shl(0x20, tag_27)\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n  tag_28\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1764  set */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n  0x00\n  add\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1778:1783  value */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1944  set */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1952  set._values */\n  0x00\n  add\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1922  set */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n  0x01\n  add\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1932:1937  value */\n  dup5\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1980:1984  true */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n  swap1\n  pop\n  jump(tag_25)\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\ntag_28:\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_25:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_27:\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3924:3925  0 */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3904  set */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n  0x01\n  add\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3914:3919  value */\n  dup5\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n  eq\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3894:3925  return set._indexes[value] != 0 */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ChainlinkRandoms.sol\":516:2864  contract ChainlinkRandoms is IRandoms, Pausable, AccessControl, VRFConsumerBase {... */\ntag_11:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n  assignImmutable(\"0x74b0a73c8e019485c6bf7a8191beea41ecaf2ae440157a94156a991a62e7d3a5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ChainlinkRandoms.sol\":516:2864  contract ChainlinkRandoms is IRandoms, Pausable, AccessControl, VRFConsumerBase {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x94985ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x94985ddd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8456cb59\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8678a7b2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x790273dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7a8042bd\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3883d854\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/ChainlinkRandoms.sol\":1492:1671  function getRandomSeed(address user) external override view returns (uint256) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChainlinkRandoms.sol\":2234:2299  function unpause() external onlyOwner {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChainlinkRandoms.sol\":704:784  bytes32 public constant RANDOMNESS_REQUESTER = keccak256(\"RANDOMNESS_REQUESTER\") */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChainlinkRandoms.sol\":2500:2729  function withdrawLink(uint256 tokenAmount) external onlyOwner {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/ChainlinkRandoms.sol\":2167:2228  function pause() external onlyOwner {... */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/ChainlinkRandoms.sol\":1763:2161  function requestRandomNumber() external whenNotPaused {... */\n    tag_12:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_13:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_14:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9675:9882  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {... */\n    tag_15:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_17:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_18:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_24:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4339:4346  bytes32 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4365:4371  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4365:4377  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4372:4376  role */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4365:4377  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4365:4387  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4358:4387  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_67\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4735:4741  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4735:4747  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4742:4746  role */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4735:4747  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4735:4757  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4759:4771  _msgSender() */\n      tag_68\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4759:4769  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4759:4771  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4727:4734  hasRole */\n      tag_52\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_67:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4719:4824  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4846:4850  role */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4852:4859  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4835:4845  _grantRole */\n      tag_72\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      jump\t// in\n    tag_71:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_30:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5915:5927  _msgSender() */\n      tag_74\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5915:5925  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5915:5927  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5904:5911  account */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5896:5979  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      tag_76\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6002:6006  role */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":6008:6015  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5990:6001  _revokeRole */\n      tag_77\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      jump\t// in\n    tag_76:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":1492:1671  function getRandomSeed(address user) external override view returns (uint256) {... */\n    tag_33:\n        /* \"contracts/ChainlinkRandoms.sol\":1561:1568  uint256 */\n      0x00\n        /* \"contracts/ChainlinkRandoms.sol\":1622:1626  user */\n      dup2\n        /* \"contracts/ChainlinkRandoms.sol\":1628:1632  seed */\n      sload(0x05)\n        /* \"contracts/ChainlinkRandoms.sol\":1659:1660  1 */\n      0x01\n        /* \"contracts/ChainlinkRandoms.sol\":1644:1656  block.number */\n      number\n        /* \"contracts/ChainlinkRandoms.sol\":1644:1660  block.number - 1 */\n      sub\n        /* \"contracts/ChainlinkRandoms.sol\":1634:1661  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/ChainlinkRandoms.sol\":1605:1662  abi.encodePacked(user, seed, blockhash(block.number - 1)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ChainlinkRandoms.sol\":1595:1663  keccak256(abi.encodePacked(user, seed, blockhash(block.number - 1))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ChainlinkRandoms.sol\":1587:1664  uint256(keccak256(abi.encodePacked(user, seed, blockhash(block.number - 1)))) */\n      0x00\n      shr\n        /* \"contracts/ChainlinkRandoms.sol\":1580:1664  return uint256(keccak256(abi.encodePacked(user, seed, blockhash(block.number - 1)))) */\n      swap1\n      pop\n        /* \"contracts/ChainlinkRandoms.sol\":1492:1671  function getRandomSeed(address user) external override view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":2234:2299  function unpause() external onlyOwner {... */\n    tag_35:\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2830  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_80\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"contracts/ChainlinkRandoms.sol\":2799:2817  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/ChainlinkRandoms.sol\":2819:2829  msg.sender */\n      caller\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2798  hasRole */\n      tag_52\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2830  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/ChainlinkRandoms.sol\":2783:2844  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Not admin\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f742061646d696e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/ChainlinkRandoms.sol\":2282:2292  _unpause() */\n      tag_83\n        /* \"contracts/ChainlinkRandoms.sol\":2282:2290  _unpause */\n      tag_84\n        /* \"contracts/ChainlinkRandoms.sol\":2282:2292  _unpause() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/ChainlinkRandoms.sol\":2234:2299  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1099:1103  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1122:1129  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1115:1129  return _paused */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":704:784  bytes32 public constant RANDOMNESS_REQUESTER = keccak256(\"RANDOMNESS_REQUESTER\") */\n    tag_39:\n        /* \"contracts/ChainlinkRandoms.sol\":751:784  keccak256(\"RANDOMNESS_REQUESTER\") */\n      0xb833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa0\n        /* \"contracts/ChainlinkRandoms.sol\":704:784  bytes32 public constant RANDOMNESS_REQUESTER = keccak256(\"RANDOMNESS_REQUESTER\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":2500:2729  function withdrawLink(uint256 tokenAmount) external onlyOwner {... */\n    tag_42:\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2830  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_87\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"contracts/ChainlinkRandoms.sol\":2799:2817  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/ChainlinkRandoms.sol\":2819:2829  msg.sender */\n      caller\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2798  hasRole */\n      tag_52\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2830  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/ChainlinkRandoms.sol\":2783:2844  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Not admin\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f742061646d696e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/ChainlinkRandoms.sol\":2663:2722  IERC20(address(LINK)).safeTransfer(msg.sender, tokenAmount) */\n      tag_90\n        /* \"contracts/ChainlinkRandoms.sol\":2698:2708  msg.sender */\n      caller\n        /* \"contracts/ChainlinkRandoms.sol\":2710:2721  tokenAmount */\n      dup3\n        /* \"contracts/ChainlinkRandoms.sol\":2678:2682  LINK */\n      immutable(\"0x74b0a73c8e019485c6bf7a8191beea41ecaf2ae440157a94156a991a62e7d3a5\")\n        /* \"contracts/ChainlinkRandoms.sol\":2663:2697  IERC20(address(LINK)).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_91\n      swap1\n        /* \"contracts/ChainlinkRandoms.sol\":2663:2722  IERC20(address(LINK)).safeTransfer(msg.sender, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/ChainlinkRandoms.sol\":2500:2729  function withdrawLink(uint256 tokenAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":2167:2228  function pause() external onlyOwner {... */\n    tag_44:\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2830  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_93\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"contracts/ChainlinkRandoms.sol\":2799:2817  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/ChainlinkRandoms.sol\":2819:2829  msg.sender */\n      caller\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2798  hasRole */\n      tag_52\n        /* \"contracts/ChainlinkRandoms.sol\":2791:2830  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/ChainlinkRandoms.sol\":2783:2844  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Not admin\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f742061646d696e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/ChainlinkRandoms.sol\":2213:2221  _pause() */\n      tag_96\n        /* \"contracts/ChainlinkRandoms.sol\":2213:2219  _pause */\n      tag_97\n        /* \"contracts/ChainlinkRandoms.sol\":2213:2221  _pause() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ChainlinkRandoms.sol\":2167:2228  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":1763:2161  function requestRandomNumber() external whenNotPaused {... */\n    tag_46:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_99\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_37\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/ChainlinkRandoms.sol\":1835:1876  hasRole(RANDOMNESS_REQUESTER, msg.sender) */\n      tag_102\n        /* \"contracts/ChainlinkRandoms.sol\":751:784  keccak256(\"RANDOMNESS_REQUESTER\") */\n      0xb833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa0\n        /* \"contracts/ChainlinkRandoms.sol\":1865:1875  msg.sender */\n      caller\n        /* \"contracts/ChainlinkRandoms.sol\":1835:1842  hasRole */\n      tag_52\n        /* \"contracts/ChainlinkRandoms.sol\":1835:1876  hasRole(RANDOMNESS_REQUESTER, msg.sender) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/ChainlinkRandoms.sol\":1827:1907  require(hasRole(RANDOMNESS_REQUESTER, msg.sender), \"Sender cannot request seed\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x53656e6465722063616e6e6f7420726571756573742073656564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/ChainlinkRandoms.sol\":1958:1961  fee */\n      sload(0x04)\n        /* \"contracts/ChainlinkRandoms.sol\":1925:1929  LINK */\n      immutable(\"0x74b0a73c8e019485c6bf7a8191beea41ecaf2ae440157a94156a991a62e7d3a5\")\n        /* \"contracts/ChainlinkRandoms.sol\":1925:1939  LINK.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/ChainlinkRandoms.sol\":1948:1952  this */\n      address\n        /* \"contracts/ChainlinkRandoms.sol\":1925:1954  LINK.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ChainlinkRandoms.sol\":1925:1961  LINK.balanceOf(address(this)) >= fee */\n      lt\n      iszero\n        /* \"contracts/ChainlinkRandoms.sol\":1917:1981  require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420656e6f756768204c494e4b0000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/ChainlinkRandoms.sol\":2112:2154  requestRandomness(keyHash, VRF_MAGIC_SEED) */\n      tag_109\n        /* \"contracts/ChainlinkRandoms.sol\":2130:2137  keyHash */\n      sload(0x03)\n        /* \"contracts/ChainlinkRandoms.sol\":677:696  keccak256(\"WTHell\") */\n      0xcfb082b8962ec709cffb27055d8a31d70d842951be20f80c34853c0659eddd91\n        /* \"contracts/ChainlinkRandoms.sol\":669:697  uint256(keccak256(\"WTHell\")) */\n      0x00\n      shr\n        /* \"contracts/ChainlinkRandoms.sol\":2112:2129  requestRandomness */\n      tag_110\n        /* \"contracts/ChainlinkRandoms.sol\":2112:2154  requestRandomness(keyHash, VRF_MAGIC_SEED) */\n      jump\t// in\n    tag_109:\n      pop\n        /* \"contracts/ChainlinkRandoms.sol\":1763:2161  function requestRandomNumber() external whenNotPaused {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_49:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4038:4045  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      tag_112\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4088:4093  index */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4070  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4076  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4071:4075  role */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4076  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4084  _roles[role].members */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4087  _roles[role].members.at */\n      tag_113\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":4057:4094  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_52:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3019:3023  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3072:3079  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3048  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3054  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3049:3053  role */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3054  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3062  _roles[role].members */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3071  _roles[role].members.contains */\n      tag_116\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3035:3080  return _roles[role].members.contains(account) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9675:9882  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {... */\n    tag_55:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9781:9795  vrfCoordinator */\n      immutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9767:9795  msg.sender == vrfCoordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9767:9777  msg.sender */\n      caller\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9767:9795  msg.sender == vrfCoordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9759:9831  require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9837:9877  fulfillRandomness(requestId, randomness) */\n      tag_119\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9855:9864  requestId */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9866:9876  randomness */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9837:9854  fulfillRandomness */\n      tag_120\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9837:9877  fulfillRandomness(requestId, randomness) */\n      jump\t// in\n    tag_119:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":9675:9882  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_57:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3318:3325  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      tag_122\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3350  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3356  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3351:3355  role */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3356  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3364  _roles[role].members */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3371  _roles[role].members.length */\n      tag_123\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      jump\t// in\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3337:3373  return _roles[role].members.length() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_63:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_125\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5193:5199  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5193:5205  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5200:5204  role */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5193:5205  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5193:5215  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5217:5229  _msgSender() */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5217:5227  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5217:5229  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5185:5192  hasRole */\n      tag_52\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_125:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5177:5283  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5294:5320  _revokeRole(role, account) */\n      tag_128\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5306:5310  role */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5312:5319  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5294:5305  _revokeRole */\n      tag_77\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5294:5320  _revokeRole(role, account) */\n      jump\t// in\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_64:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_130\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6537  set._inner */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6563:6568  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6539:6571  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n      tag_131\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_130:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_69:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n    tag_72:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7123:7130  account */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7104  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7105:7109  role */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7118  _roles[role].members */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n      tag_64\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n      tag_136\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7179:7189  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7170:7177  account */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7164:7168  role */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n    tag_77:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      tag_138\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7317:7324  account */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7295  _roles */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7301  _roles[role] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7296:7300  role */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7301  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7309  _roles[role].members */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7316  _roles[role].members.remove */\n      tag_139\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7373:7385  _msgSender() */\n      tag_141\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7373:7383  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7373:7385  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7364:7371  account */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7358:7362  role */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n    tag_140:\n        /* \"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n    tag_84:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      tag_143\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1631:1637  paused */\n      tag_37\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1623:1664  require(paused(), \"Pausable: not paused\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2132:2137  false */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2122:2129  _paused */\n      dup1\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2122:2137  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      tag_146\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2161:2171  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_148\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":861:863  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":865:870  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_148:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n    tag_97:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_151\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_37\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1886:1890  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1876:1883  _paused */\n      0x00\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1876:1890  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      tag_154\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1912:1922  _msgSender */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7818:8848  function requestRandomness(bytes32 _keyHash, uint256 _fee)... */\n    tag_110:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7899:7916  bytes32 requestId */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7926:7930  LINK */\n      immutable(\"0x74b0a73c8e019485c6bf7a8191beea41ecaf2ae440157a94156a991a62e7d3a5\")\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7926:7946  LINK.transferAndCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4000aea0\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7947:7961  vrfCoordinator */\n      immutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7963:7967  _fee */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7980:7988  _keyHash */\n      dup7\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":6675:6676  0 */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7969:8012  abi.encode(_keyHash, USER_SEED_PLACEHOLDER) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7926:8013  LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, USER_SEED_PLACEHOLDER)) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_156:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_156)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_159\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_159:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8244:8259  uint256 vRFSeed */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8263:8345  makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]) */\n      tag_164\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8280:8288  _keyHash */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":6675:6676  0 */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8321:8325  this */\n      address\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8328:8334  nonces */\n      0x02\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8328:8344  nonces[_keyHash] */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8335:8343  _keyHash */\n      dup10\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8328:8344  nonces[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8263:8279  makeVRFInputSeed */\n      tag_165\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8263:8345  makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]) */\n      jump\t// in\n    tag_164:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8244:8345  uint256 vRFSeed  = makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]) */\n      swap1\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8775:8798  nonces[_keyHash].add(1) */\n      tag_166\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8796:8797  1 */\n      0x01\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8775:8781  nonces */\n      0x02\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8775:8791  nonces[_keyHash] */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8782:8790  _keyHash */\n      dup8\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8775:8791  nonces[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8775:8795  nonces[_keyHash].add */\n      tag_167\n      swap1\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8775:8798  nonces[_keyHash].add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8756:8762  nonces */\n      0x02\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8756:8772  nonces[_keyHash] */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8763:8771  _keyHash */\n      dup7\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8756:8772  nonces[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8756:8798  nonces[_keyHash] = nonces[_keyHash].add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8811:8843  makeRequestId(_keyHash, vRFSeed) */\n      tag_168\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8825:8833  _keyHash */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8835:8842  vRFSeed */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8811:8824  makeRequestId */\n      tag_169\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8811:8843  makeRequestId(_keyHash, vRFSeed) */\n      jump\t// in\n    tag_168:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":8804:8843  return makeRequestId(_keyHash, vRFSeed) */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":7818:8848  function requestRandomness(bytes32 _keyHash, uint256 _fee)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_113:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7751:7758  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      tag_171\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7805:7808  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7805:7815  set._inner */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7817:7822  index */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7804  _at */\n      tag_172\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      jump\t// in\n    tag_171:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7793:7824  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7770:7826  return address(uint160(uint256(_at(set._inner, index)))) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_116:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7064:7068  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_174\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7097:7100  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7097:7107  set._inner */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7133:7138  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7117:7140  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7109:7141  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7096  _contains */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_174:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7080:7142  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChainlinkRandoms.sol\":2370:2494  function fulfillRandomness(bytes32 /* requestId */, uint256 randomness) internal override {... */\n    tag_120:\n        /* \"contracts/ChainlinkRandoms.sol\":2477:2487  randomness */\n      dup1\n        /* \"contracts/ChainlinkRandoms.sol\":2470:2474  seed */\n      0x05\n        /* \"contracts/ChainlinkRandoms.sol\":2470:2487  seed = randomness */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ChainlinkRandoms.sol\":2370:2494  function fulfillRandomness(bytes32 /* requestId */, uint256 randomness) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_123:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7293:7300  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      tag_178\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7327:7330  set */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7327:7337  set._inner */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7326  _length */\n      tag_179\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      jump\t// in\n    tag_178:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7312:7338  return _length(set._inner) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_131:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      tag_181\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      jump\t// in\n    tag_181:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n      tag_182\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1764  set */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1778:1783  value */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1944  set */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1952  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1922  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n      0x01\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1932:1937  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1980:1984  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n      swap1\n      pop\n      jump(tag_180)\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n    tag_182:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_180:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6820:6824  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6851:6854  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6851:6861  set._inner */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6887:6892  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6871:6894  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6863:6895  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6850  _remove */\n      tag_187\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6836:6896  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_149:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_189\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_190\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3515:3516  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3505  returndata */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_191\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n    tag_191:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":797:1028  function makeVRFInputSeed(bytes32 _keyHash, uint256 _userSeed,... */\n    tag_165:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":927:934  uint256 */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":981:989  _keyHash */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":991:1000  _userSeed */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1002:1012  _requester */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1014:1020  _nonce */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":970:1021  abi.encode(_keyHash, _userSeed, _requester, _nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":960:1022  keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":952:1023  uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce))) */\n      0x00\n      shr\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":944:1023  return  uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce))) */\n      swap1\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":797:1028  function makeVRFInputSeed(bytes32 _keyHash, uint256 _userSeed,... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":863:1025  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":921:928  uint256 */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":936:945  uint256 c */\n      dup1\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":952:953  b */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":948:949  a */\n      dup5\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":948:953  a + b */\n      add\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":936:953  uint256 c = a + b */\n      swap1\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":972:973  a */\n      dup4\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":967:968  c */\n      dup2\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":967:973  c >= a */\n      lt\n      iszero\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":959:1005  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":1019:1020  c */\n      dup1\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":1012:1020  return c */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":863:1025  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1408:1579  function makeRequestId(... */\n    tag_169:\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1500:1507  bytes32 */\n      0x00\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1549:1557  _keyHash */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1559:1572  _vRFInputSeed */\n      dup3\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1532:1573  abi.encodePacked(_keyHash, _vRFInputSeed) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1522:1574  keccak256(abi.encodePacked(_keyHash, _vRFInputSeed)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1515:1574  return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed)) */\n      swap1\n      pop\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":1408:1579  function makeRequestId(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4519:4526  bytes32 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4567:4572  index */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4549  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4557  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4564  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4572  set._values.length > index */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4538:4611  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4631  set */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4639  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4640:4645  index */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4646  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      invalid\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4621:4646  return set._values[index] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_175:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3924:3925  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3904  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n      0x01\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3914:3919  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3894:3925  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n    tag_179:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4069:4076  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4098  set */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4106  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4113  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4088:4113  return set._values.length */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_187:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2278:2282  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2394:2412  uint256 valueIndex */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2418  set */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2427  set._indexes */\n      0x01\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2428:2433  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2394:2434  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2463:2464  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2449:2459  valueIndex */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2449:2464  valueIndex != 0 */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_205\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2806:2827  uint256 toDeleteIndex */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2843:2844  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2830:2840  valueIndex */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2830:2844  valueIndex - 1 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2806:2844  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2858:2875  uint256 lastIndex */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2899:2900  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2881  set */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2889  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2896  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2900  set._values.length - 1 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2858:2900  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3140:3157  bytes32 lastvalue */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3163  set */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3171  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3172:3181  lastIndex */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3182  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      invalid\n    tag_206:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3140:3182  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3303:3312  lastvalue */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3277  set */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3285  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3286:3299  toDeleteIndex */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3300  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_208\n      jumpi\n      invalid\n    tag_208:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3312  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3420:3421  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3404:3417  toDeleteIndex */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3404:3421  toDeleteIndex + 1 */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3381  set */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3390  set._indexes */\n      0x01\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3391:3400  lastvalue */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3421  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3530  set */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3538  set._values */\n      0x00\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3544  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_210\n      jumpi\n      invalid\n    tag_210:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3622  set */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3631  set._indexes */\n      0x01\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3632:3637  value */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3612:3638  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3660:3664  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3653:3664  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_204)\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_205:\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3702:3707  false */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":3695:3707  return false */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_204:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_190:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_214\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_215\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_214:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_215:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_218\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_219\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_218:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_221:\n      0x20\n      dup4\n      lt\n      tag_223\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_221)\n    tag_223:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_226:\n      0x60\n      swap2\n      pop\n    tag_225:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_227\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_228\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_227:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_228:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_230)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_231:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_233:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_235:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_237\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_235)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_238\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_238:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_230:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n\n    auxdata: 0xa26469706673582212206405fe33dece58dd6681585d6cf22aff25c90da69bf184dc24424ebd1eebf64b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b5060405162001dee38038062001dee833981810160405260808110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050838360008060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050508160038190555080600481905550620001156000801b336200011f60201b60201c565b50505050620002b6565b6200013182826200013560201b60201c565b5050565b620001648160016000858152602001908152602001600020600001620001d960201b62000c9c1790919060201c565b15620001d5576200017a6200021160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000209836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200021960201b60201c565b905092915050565b600033905090565b60006200022d83836200029360201b60201c565b620002885782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200028d565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b60805160601c60a05160601c611aff620002ef60003980610b1752806110b352508061075f528061094b52806110775250611aff6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb591161009757806394985ddd1161006657806394985ddd1461038b578063a217fddf146103c3578063ca15c873146103e1578063d547741f1461042357610100565b80638456cb59146102b15780638678a7b2146102bb5780639010d07c146102c557806391d148541461032757610100565b80633f4ba83a116100d35780633f4ba83a1461023b5780635c975abb14610245578063790273dd146102655780637a8042bd1461028357610100565b8063248a9ca3146101055780632f2ff15d1461014757806336568abe146101955780633883d854146101e3575b600080fd5b6101316004803603602081101561011b57600080fd5b8101908080359060200190929190505050610471565b6040518082815260200191505060405180910390f35b6101936004803603604081101561015d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610491565b005b6101e1600480360360408110156101ab57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061051b565b005b610225600480360360208110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b4565b6040518082815260200191505060405180910390f35b610243610616565b005b61024d61069f565b60405180821515815260200191505060405180910390f35b61026d6106b5565b6040518082815260200191505060405180910390f35b6102af6004803603602081101561029957600080fd5b81019080803590602001909291905050506106d9565b005b6102b96107a6565b005b6102c361082f565b005b6102fb600480360360408110156102db57600080fd5b810190808035906020019092919080359060200190929190505050610ab1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ae3565b60405180821515815260200191505060405180910390f35b6103c1600480360360408110156103a157600080fd5b810190808035906020019092919080359060200190929190505050610b15565b005b6103cb610be4565b6040518082815260200191505060405180910390f35b61040d600480360360208110156103f757600080fd5b8101908080359060200190929190505050610beb565b6040518082815260200191505060405180910390f35b61046f6004803603604081101561043957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c12565b005b600060016000838152602001908152602001600020600201549050919050565b6104b860016000848152602001908152602001600020600201546104b3610ccc565b610ae3565b61050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806119ec602f913960400191505060405180910390fd5b6105178282610cd4565b5050565b610523610ccc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611a9b602f913960400191505060405180910390fd5b6105b08282610d68565b5050565b6000816005546001430340604051602001808473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200193505050506040516020818303038152906040528051906020012060001c9050919050565b6106236000801b33610ae3565b610695576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f742061646d696e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61069d610dfc565b565b60008060009054906101000a900460ff16905090565b7fb833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa081565b6106e66000801b33610ae3565b610758576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f742061646d696e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6107a333827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ee69092919063ffffffff16565b50565b6107b36000801b33610ae3565b610825576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f742061646d696e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61082d610f88565b565b61083761069f565b156108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6108d47fb833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa033610ae3565b610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e6465722063616e6e6f742072657175657374207365656400000000000081525060200191505060405180910390fd5b6004547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109d057600080fd5b505afa1580156109e4573d6000803e3d6000fd5b505050506040513d60208110156109fa57600080fd5b81019080805190602001909291905050501015610a7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420656e6f756768204c494e4b000000000000000000000000000000000081525060200191505060405180910390fd5b610aae6003547fcfb082b8962ec709cffb27055d8a31d70d842951be20f80c34853c0659eddd9160001c611073565b50565b6000610adb826001600086815260200190815260200160002060000161126c90919063ffffffff16565b905092915050565b6000610b0d826001600086815260200190815260200160002060000161128690919063ffffffff16565b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0081525060200191505060405180910390fd5b610be082826112b6565b5050565b6000801b81565b6000610c0b600160008481526020019081526020016000206000016112c1565b9050919050565b610c396001600084815260200190815260200160002060020154610c34610ccc565b610ae3565b610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611a416030913960400191505060405180910390fd5b610c988282610d68565b5050565b6000610cc4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6112d6565b905092915050565b600033905090565b610cfc8160016000858152602001908152602001600020600001610c9c90919063ffffffff16565b15610d6457610d09610ccc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610d90816001600085815260200190815260200160002060000161134690919063ffffffff16565b15610df857610d9d610ccc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610e0461069f565b610e76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610eb9610ccc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b610f838363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611376565b505050565b610f9061069f565b15611003576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611046610ccc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561116d578082015181840152602081019050611152565b50505050905090810190601f16801561119a5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b505050506040513d60208110156111e557600080fd5b8101908080519060200190929190505050506000611219846000306002600089815260200190815260200160002054611465565b9050611242600160026000878152602001908152602001600020546114c990919063ffffffff16565b60026000868152602001908152602001600020819055506112638482611551565b91505092915050565b600061127b836000018361158a565b60001c905092915050565b60006112ae836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61160d565b905092915050565b806005819055505050565b60006112cf82600001611630565b9050919050565b60006112e2838361160d565b61133b578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611340565b600090505b92915050565b600061136e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611641565b905092915050565b60606113d8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117299092919063ffffffff16565b9050600081511115611460578080602001905160208110156113f957600080fd5b810190808051906020019092919050505061145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611a71602a913960400191505060405180910390fd5b5b505050565b600084848484604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019450505050506040516020818303038152906040528051906020012060001c9050949350505050565b600080828401905083811015611547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008282604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905092915050565b6000818360000180549050116115eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806119ca6022913960400191505060405180910390fd5b8260000182815481106115fa57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000808360010160008481526020019081526020016000205490506000811461171d576000600182039050600060018660000180549050039050600086600001828154811061168c57fe5b90600052602060002001549050808760000184815481106116a957fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806116e157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611723565b60009150505b92915050565b60606117388484600085611741565b90509392505050565b60608247101561179c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611a1b6026913960400191505060405180910390fd5b6117a5856118ea565b611817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106118675780518252602082019150602081019050602083039250611844565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146118c9576040519150601f19603f3d011682016040523d82523d6000602084013e6118ce565b606091505b50915091506118de8282866118fd565b92505050949350505050565b600080823b905060008111915050919050565b6060831561190d578290506119c2565b6000835111156119205782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561198757808201518184015260208101905061196c565b50505050905090810190601f1680156119b45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212206405fe33dece58dd6681585d6cf22aff25c90da69bf184dc24424ebd1eebf64b64736f6c634300060c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DEE CODESIZE SUB DUP1 PUSH3 0x1DEE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 DUP4 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x115 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x11F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x2B6 JUMP JUMPDEST PUSH3 0x131 DUP3 DUP3 PUSH3 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x164 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH3 0x1D9 PUSH1 0x20 SHL PUSH3 0xC9C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x1D5 JUMPI PUSH3 0x17A PUSH3 0x211 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x209 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x219 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D DUP4 DUP4 PUSH3 0x293 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x288 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x28D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x1AFF PUSH3 0x2EF PUSH1 0x0 CODECOPY DUP1 PUSH2 0xB17 MSTORE DUP1 PUSH2 0x10B3 MSTORE POP DUP1 PUSH2 0x75F MSTORE DUP1 PUSH2 0x94B MSTORE DUP1 PUSH2 0x1077 MSTORE POP PUSH2 0x1AFF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x94985DDD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x423 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x8678A7B2 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x327 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x790273DD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x7A8042BD EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x3883D854 EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x51B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH2 0x82F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC12 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x4B3 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19EC PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x517 DUP3 DUP3 PUSH2 0xCD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x523 PUSH2 0xCCC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A9B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH2 0xD68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 SLOAD PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x623 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69D PUSH2 0xDFC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB833753ADF767F5EA59FFA8FE88B66C1FDFF464A3D915CA68D34535A159ECFA0 DUP2 JUMP JUMPDEST PUSH2 0x6E6 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A3 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B3 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82D PUSH2 0xF88 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x837 PUSH2 0x69F JUMP JUMPDEST ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D4 PUSH32 0xB833753ADF767F5EA59FFA8FE88B66C1FDFF464A3D915CA68D34535A159ECFA0 CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x53656E6465722063616E6E6F7420726571756573742073656564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F756768204C494E4B0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAE PUSH1 0x3 SLOAD PUSH32 0xCFB082B8962EC709CFFB27055D8A31D70D842951BE20F80C34853C0659EDDD91 PUSH1 0x0 SHR PUSH2 0x1073 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADB DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x126C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1286 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE0 DUP3 DUP3 PUSH2 0x12B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0B PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC39 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xC34 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A41 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC98 DUP3 DUP3 PUSH2 0xD68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xD64 JUMPI PUSH2 0xD09 PUSH2 0xCCC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD90 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1346 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xDF8 JUMPI PUSH2 0xD9D PUSH2 0xCCC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x69F JUMP JUMPDEST PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xEB9 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xF83 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1376 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x69F JUMP JUMPDEST ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1046 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1152 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x119A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 PUSH2 0x1219 DUP5 PUSH1 0x0 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP PUSH2 0x1242 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1263 DUP5 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127B DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x160D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CF DUP3 PUSH1 0x0 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E2 DUP4 DUP4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x133B JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136E DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13D8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1729 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1460 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A71 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19CA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15FA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x171D JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x168C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x16A9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x16E1 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1738 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1741 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x179C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A1B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 DUP6 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1867 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18DE DUP3 DUP3 DUP7 PUSH2 0x18FD JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x190D JUMPI DUP3 SWAP1 POP PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1920 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1987 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416464 PUSH19 0x6573733A20696E73756666696369656E742062 PUSH2 0x6C61 PUSH15 0x636520666F722063616C6C41636365 PUSH20 0x73436F6E74726F6C3A2073656E646572206D7573 PUSH21 0x20626520616E2061646D696E20746F207265766F6B PUSH6 0x536166654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564416363657373436F6E74726F6C3A KECCAK256 PUSH4 0x616E206F PUSH15 0x6C792072656E6F756E636520726F6C PUSH6 0x7320666F7220 PUSH20 0x656C66A26469706673582212206405FE33DECE58 0xDD PUSH7 0x81585D6CF22AFF 0x25 0xC9 0xD 0xA6 SWAP12 CALL DUP5 0xDC 0x24 TIMESTAMP 0x4E 0xBD 0x1E 0xEB 0xF6 0x4B PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "516:2348:0:-:0;;;1154:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1275:15;1323:5;945::13;935:7;;:15;;;;;;;;;;;;;;;;;;9422::2;9405:32;;;;;;;;;;;;9469:5;9443:32;;;;;;;;;;;;9340:140;;1385:8:0::1;1375:7;:18;;;;1409:4;1403:3;:10;;;;1424:42;1772:4:6;1435:18:0::0;::::1;1455:10;1424;;;:42;;:::i;:::-;1154:319:::0;;;;516:2348;;6588:110:6;6666:25;6677:4;6683:7;6666:10;;;:25;;:::i;:::-;6588:110;;:::o;7025:184::-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;;;:12;;:::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;6429:150:12:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;;;:50;;:::i;:::-;6515:57;;6429:150;;;;:::o;598:104:11:-;651:15;685:10;678:17;;598:104;:::o;1640:404:12:-;1703:4;1724:21;1734:3;1739:5;1724:9;;;:21;;:::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;516:2348:0:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"288": [
									{
										"length": 32,
										"start": 1887
									},
									{
										"length": 32,
										"start": 2379
									},
									{
										"length": 32,
										"start": 4215
									}
								],
								"290": [
									{
										"length": 32,
										"start": 2839
									},
									{
										"length": 32,
										"start": 4275
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb591161009757806394985ddd1161006657806394985ddd1461038b578063a217fddf146103c3578063ca15c873146103e1578063d547741f1461042357610100565b80638456cb59146102b15780638678a7b2146102bb5780639010d07c146102c557806391d148541461032757610100565b80633f4ba83a116100d35780633f4ba83a1461023b5780635c975abb14610245578063790273dd146102655780637a8042bd1461028357610100565b8063248a9ca3146101055780632f2ff15d1461014757806336568abe146101955780633883d854146101e3575b600080fd5b6101316004803603602081101561011b57600080fd5b8101908080359060200190929190505050610471565b6040518082815260200191505060405180910390f35b6101936004803603604081101561015d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610491565b005b6101e1600480360360408110156101ab57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061051b565b005b610225600480360360208110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b4565b6040518082815260200191505060405180910390f35b610243610616565b005b61024d61069f565b60405180821515815260200191505060405180910390f35b61026d6106b5565b6040518082815260200191505060405180910390f35b6102af6004803603602081101561029957600080fd5b81019080803590602001909291905050506106d9565b005b6102b96107a6565b005b6102c361082f565b005b6102fb600480360360408110156102db57600080fd5b810190808035906020019092919080359060200190929190505050610ab1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ae3565b60405180821515815260200191505060405180910390f35b6103c1600480360360408110156103a157600080fd5b810190808035906020019092919080359060200190929190505050610b15565b005b6103cb610be4565b6040518082815260200191505060405180910390f35b61040d600480360360208110156103f757600080fd5b8101908080359060200190929190505050610beb565b6040518082815260200191505060405180910390f35b61046f6004803603604081101561043957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c12565b005b600060016000838152602001908152602001600020600201549050919050565b6104b860016000848152602001908152602001600020600201546104b3610ccc565b610ae3565b61050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806119ec602f913960400191505060405180910390fd5b6105178282610cd4565b5050565b610523610ccc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611a9b602f913960400191505060405180910390fd5b6105b08282610d68565b5050565b6000816005546001430340604051602001808473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200193505050506040516020818303038152906040528051906020012060001c9050919050565b6106236000801b33610ae3565b610695576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f742061646d696e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61069d610dfc565b565b60008060009054906101000a900460ff16905090565b7fb833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa081565b6106e66000801b33610ae3565b610758576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f742061646d696e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6107a333827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ee69092919063ffffffff16565b50565b6107b36000801b33610ae3565b610825576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f742061646d696e000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61082d610f88565b565b61083761069f565b156108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6108d47fb833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa033610ae3565b610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e6465722063616e6e6f742072657175657374207365656400000000000081525060200191505060405180910390fd5b6004547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109d057600080fd5b505afa1580156109e4573d6000803e3d6000fd5b505050506040513d60208110156109fa57600080fd5b81019080805190602001909291905050501015610a7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420656e6f756768204c494e4b000000000000000000000000000000000081525060200191505060405180910390fd5b610aae6003547fcfb082b8962ec709cffb27055d8a31d70d842951be20f80c34853c0659eddd9160001c611073565b50565b6000610adb826001600086815260200190815260200160002060000161126c90919063ffffffff16565b905092915050565b6000610b0d826001600086815260200190815260200160002060000161128690919063ffffffff16565b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0081525060200191505060405180910390fd5b610be082826112b6565b5050565b6000801b81565b6000610c0b600160008481526020019081526020016000206000016112c1565b9050919050565b610c396001600084815260200190815260200160002060020154610c34610ccc565b610ae3565b610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611a416030913960400191505060405180910390fd5b610c988282610d68565b5050565b6000610cc4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6112d6565b905092915050565b600033905090565b610cfc8160016000858152602001908152602001600020600001610c9c90919063ffffffff16565b15610d6457610d09610ccc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610d90816001600085815260200190815260200160002060000161134690919063ffffffff16565b15610df857610d9d610ccc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610e0461069f565b610e76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610eb9610ccc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b610f838363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611376565b505050565b610f9061069f565b15611003576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611046610ccc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561116d578082015181840152602081019050611152565b50505050905090810190601f16801561119a5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b505050506040513d60208110156111e557600080fd5b8101908080519060200190929190505050506000611219846000306002600089815260200190815260200160002054611465565b9050611242600160026000878152602001908152602001600020546114c990919063ffffffff16565b60026000868152602001908152602001600020819055506112638482611551565b91505092915050565b600061127b836000018361158a565b60001c905092915050565b60006112ae836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61160d565b905092915050565b806005819055505050565b60006112cf82600001611630565b9050919050565b60006112e2838361160d565b61133b578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611340565b600090505b92915050565b600061136e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611641565b905092915050565b60606113d8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117299092919063ffffffff16565b9050600081511115611460578080602001905160208110156113f957600080fd5b810190808051906020019092919050505061145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611a71602a913960400191505060405180910390fd5b5b505050565b600084848484604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019450505050506040516020818303038152906040528051906020012060001c9050949350505050565b600080828401905083811015611547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008282604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905092915050565b6000818360000180549050116115eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806119ca6022913960400191505060405180910390fd5b8260000182815481106115fa57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000808360010160008481526020019081526020016000205490506000811461171d576000600182039050600060018660000180549050039050600086600001828154811061168c57fe5b90600052602060002001549050808760000184815481106116a957fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806116e157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611723565b60009150505b92915050565b60606117388484600085611741565b90509392505050565b60608247101561179c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611a1b6026913960400191505060405180910390fd5b6117a5856118ea565b611817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106118675780518252602082019150602081019050602083039250611844565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146118c9576040519150601f19603f3d011682016040523d82523d6000602084013e6118ce565b606091505b50915091506118de8282866118fd565b92505050949350505050565b600080823b905060008111915050919050565b6060831561190d578290506119c2565b6000835111156119205782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561198757808201518184015260208101905061196c565b50505050905090810190601f1680156119b45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212206405fe33dece58dd6681585d6cf22aff25c90da69bf184dc24424ebd1eebf64b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x94985DDD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x423 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x8678A7B2 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x327 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x790273DD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x7A8042BD EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x3883D854 EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x51B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH2 0x82F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC12 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x4B3 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19EC PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x517 DUP3 DUP3 PUSH2 0xCD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x523 PUSH2 0xCCC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A9B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH2 0xD68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 SLOAD PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x623 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69D PUSH2 0xDFC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB833753ADF767F5EA59FFA8FE88B66C1FDFF464A3D915CA68D34535A159ECFA0 DUP2 JUMP JUMPDEST PUSH2 0x6E6 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A3 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B3 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F742061646D696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82D PUSH2 0xF88 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x837 PUSH2 0x69F JUMP JUMPDEST ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D4 PUSH32 0xB833753ADF767F5EA59FFA8FE88B66C1FDFF464A3D915CA68D34535A159ECFA0 CALLER PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x53656E6465722063616E6E6F7420726571756573742073656564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F756768204C494E4B0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAE PUSH1 0x3 SLOAD PUSH32 0xCFB082B8962EC709CFFB27055D8A31D70D842951BE20F80C34853C0659EDDD91 PUSH1 0x0 SHR PUSH2 0x1073 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADB DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x126C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1286 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE0 DUP3 DUP3 PUSH2 0x12B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0B PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC39 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xC34 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A41 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC98 DUP3 DUP3 PUSH2 0xD68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xD64 JUMPI PUSH2 0xD09 PUSH2 0xCCC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD90 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1346 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xDF8 JUMPI PUSH2 0xD9D PUSH2 0xCCC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x69F JUMP JUMPDEST PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xEB9 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xF83 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1376 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x69F JUMP JUMPDEST ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1046 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1152 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x119A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 PUSH2 0x1219 DUP5 PUSH1 0x0 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP PUSH2 0x1242 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1263 DUP5 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127B DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x160D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CF DUP3 PUSH1 0x0 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E2 DUP4 DUP4 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x133B JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136E DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13D8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1729 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1460 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A71 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19CA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15FA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x171D JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x168C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x16A9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x16E1 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1738 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1741 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x179C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A1B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 DUP6 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1867 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18DE DUP3 DUP3 DUP7 PUSH2 0x18FD JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x190D JUMPI DUP3 SWAP1 POP PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1920 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1987 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416464 PUSH19 0x6573733A20696E73756666696369656E742062 PUSH2 0x6C61 PUSH15 0x636520666F722063616C6C41636365 PUSH20 0x73436F6E74726F6C3A2073656E646572206D7573 PUSH21 0x20626520616E2061646D696E20746F207265766F6B PUSH6 0x536166654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564416363657373436F6E74726F6C3A KECCAK256 PUSH4 0x616E206F PUSH15 0x6C792072656E6F756E636520726F6C PUSH6 0x7320666F7220 PUSH20 0x656C66A26469706673582212206405FE33DECE58 0xDD PUSH7 0x81585D6CF22AFF 0x25 0xC9 0xD 0xA6 SWAP12 CALL DUP5 0xDC 0x24 TIMESTAMP 0x4E 0xBD 0x1E 0xEB 0xF6 0x4B PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "516:2348:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:112:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4644:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5818:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1492:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2234:65;;;:::i;:::-;;1052:84:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;704:80:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2500:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2167:61;;;:::i;:::-;;1763:398;;;:::i;:::-;;3965:136:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2950:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9675:207:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1727:49:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3255:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5101:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4282:112;4339:7;4365:6;:12;4372:4;4365:12;;;;;;;;;;;:22;;;4358:29;;4282:112;;;:::o;4644:223::-;4727:45;4735:6;:12;4742:4;4735:12;;;;;;;;;;;:22;;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;5818:205::-;5915:12;:10;:12::i;:::-;5904:23;;:7;:23;;;5896:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;:::-;5818:205;;:::o;1492:179:0:-;1561:7;1622:4;1628;;1659:1;1644:12;:16;1634:27;1605:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:68;;;;;;1587:77;;1580:84;;1492:179;;;:::o;2234:65::-;2791:39;1772:4:6;2799:18:0;;2819:10;2791:7;:39::i;:::-;2783:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2282:10:::1;:8;:10::i;:::-;2234:65::o:0;1052:84:13:-;1099:4;1122:7;;;;;;;;;;;1115:14;;1052:84;:::o;704:80:0:-;751:33;704:80;:::o;2500:229::-;2791:39;1772:4:6;2799:18:0;;2819:10;2791:7;:39::i;:::-;2783:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:59:::1;2698:10;2710:11;2678:4;2663:34;;;;:59;;;;;:::i;:::-;2500:229:::0;:::o;2167:61::-;2791:39;1772:4:6;2799:18:0;;2819:10;2791:7;:39::i;:::-;2783:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:8:::1;:6;:8::i;:::-;2167:61::o:0;1763:398::-;1366:8:13;:6;:8::i;:::-;1365:9;1357:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:41:0::1;751:33;1865:10;1835:7;:41::i;:::-;1827:80;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1958:3;;1925:4;:14;;;1948:4;1925:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;:36;;1917:64;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2112:42;2130:7;;677:19;669:28;;2112:17;:42::i;:::-;;1763:398::o:0;3965:136:6:-;4038:7;4064:30;4088:5;4064:6;:12;4071:4;4064:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4057:37;;3965:136;;;;:::o;2950:137::-;3019:4;3042:38;3072:7;3042:6;:12;3049:4;3042:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3035:45;;2950:137;;;;:::o;9675:207:2:-;9781:14;9767:28;;:10;:28;;;9759:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9837:40;9855:9;9866:10;9837:17;:40::i;:::-;9675:207;;:::o;1727:49:6:-;1772:4;1727:49;;;:::o;3255:125::-;3318:7;3344:29;:6;:12;3351:4;3344:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3337:36;;3255:125;;;:::o;5101:226::-;5185:45;5193:6;:12;5200:4;5193:12;;;;;;;;;;;:22;;;5217:12;:10;:12::i;:::-;5185:7;:45::i;:::-;5177:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:26;5306:4;5312:7;5294:11;:26::i;:::-;5101:226;;:::o;6429:150:12:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;:::o;598:104:11:-;651:15;685:10;678:17;;598:104;:::o;7025:184:6:-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;7215:188::-;7289:36;7317:7;7289:6;:12;7296:4;7289:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;7346:40;;7364:7;7346:40;;7358:4;7346:40;;;;;;;;;;7285:112;7215:188;;:::o;2064:117:13:-;1631:8;:6;:8::i;:::-;1623:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2132:5:::1;2122:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2152:22;2161:12;:10;:12::i;:::-;2152:22;;;;;;;;;;;;;;;;;;;;2064:117::o:0;704:175:9:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;1817:115:13:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:4:::1;1876:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;1905:20;1912:12;:10;:12::i;:::-;1905:20;;;;;;;;;;;;;;;;;;;;1817:115::o:0;7818:1030:2:-;7899:17;7926:4;:20;;;7947:14;7963:4;7980:8;6675:1;7969:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8244:15;8263:82;8280:8;6675:1;8321:4;8328:6;:16;8335:8;8328:16;;;;;;;;;;;;8263;:82::i;:::-;8244:101;;8775:23;8796:1;8775:6;:16;8782:8;8775:16;;;;;;;;;;;;:20;;:23;;;;:::i;:::-;8756:6;:16;8763:8;8756:16;;;;;;;;;;;:42;;;;8811:32;8825:8;8835:7;8811:13;:32::i;:::-;8804:39;;;7818:1030;;;;:::o;7677:156:12:-;7751:7;7801:22;7805:3;:10;;7817:5;7801:3;:22::i;:::-;7793:31;;7770:56;;7677:156;;;;:::o;6984:165::-;7064:4;7087:55;7097:3;:10;;7133:5;7117:23;;7109:32;;7087:9;:55::i;:::-;7080:62;;6984:165;;;;:::o;2370:124:0:-;2477:10;2470:4;:17;;;;2370:124;;:::o;7230:115:12:-;7293:7;7319:19;7327:3;:10;;7319:7;:19::i;:::-;7312:26;;7230:115;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;6747:156::-;6820:4;6843:53;6851:3;:10;;6887:5;6871:23;;6863:32;;6843:7;:53::i;:::-;6836:60;;6747:156;;;;:::o;2967:751:9:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;797:231:3:-;927:7;981:8;991:9;1002:10;1014:6;970:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:62;;;;;;952:71;;944:79;;797:231;;;;;;:::o;863:162:5:-;921:7;936:9;952:1;948;:5;936:17;;972:1;967;:6;;959:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:1;1012:8;;;863:162;;;;:::o;1408:171:3:-;1500:7;1549:8;1559:13;1532:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1522:52;;;;;;1515:59;;1408:171;;;;:::o;4452:201:12:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4013:107::-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;2212:1512::-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;3581:193:10:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1382200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "255",
								"RANDOMNESS_REQUESTER()": "272",
								"getRandomSeed(address)": "1427",
								"getRoleAdmin(bytes32)": "1208",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1356",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"pause()": "infinite",
								"paused()": "1100",
								"rawFulfillRandomness(bytes32,uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"requestRandomNumber()": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"unpause()": "infinite",
								"withdrawLink(uint256)": "infinite"
							},
							"internal": {
								"fulfillRandomness(bytes32,uint256)": "20027"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1275,
									"end": 1290,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1323,
									"end": 1328,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 945,
									"end": 950,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 942,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 935,
									"end": 942,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 935,
									"end": 950,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9422,
									"end": 9437,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9405,
									"end": 9437,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9469,
									"end": 9474,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9443,
									"end": 9475,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9340,
									"end": 9480,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9340,
									"end": 9480,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1382,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1409,
									"end": 1413,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1406,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1772,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1435,
									"end": 1453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1435,
									"end": 1453,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1455,
									"end": 1465,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 1434,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 1434,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 1434,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 1466,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 1466,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 1466,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 1466,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1424,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1154,
									"end": 1473,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6683,
									"end": 6690,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 7123,
									"end": 7130,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7104,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7105,
									"end": 7109,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7118,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18446744073709551680"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7170,
									"end": 7177,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 6,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "LOG4",
									"source": 6
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6499,
									"end": 6503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 6527,
									"end": 6530,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6527,
									"end": 6537,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6527,
									"end": 6537,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6563,
									"end": 6568,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6539,
									"end": 6571,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6539,
									"end": 6571,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1734,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1739,
									"end": 1744,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1764,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1944,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1922,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1932,
									"end": 1937,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1984,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2027,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 3882,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3924,
									"end": 3925,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3904,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3914,
									"end": 3919,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3894,
									"end": 3925,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3894,
									"end": 3925,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "290"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "288"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 2864,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206405fe33dece58dd6681585d6cf22aff25c90da69bf184dc24424ebd1eebf64b64736f6c634300060c0033",
									".code": [
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "94985DDD"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "94985DDD"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "8678A7B2"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "790273DD"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "7A8042BD"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "3883D854"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 2864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 704,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4746,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4759,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH data",
											"source": 6,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4852,
											"end": 4859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5915,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH data",
											"source": 6,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1632,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1628,
											"end": 1632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1644,
											"end": 1656,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1664,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F742061646D696E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2299,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "B833753ADF767F5EA59FFA8FE88B66C1FDFF464A3D915CA68D34535A159ECFA0"
										},
										{
											"begin": 704,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 784,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F742061646D696E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2698,
											"end": 2708,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 2682,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2663,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2791,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F742061646D696E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2783,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2213,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2213,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1835,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "B833753ADF767F5EA59FFA8FE88B66C1FDFF464A3D915CA68D34535A159ECFA0"
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1835,
											"end": 1876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1835,
											"end": 1876,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1835,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "53656E6465722063616E6E6F7420726571756573742073656564000000000000"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1827,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1958,
											"end": 1961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1961,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7420656E6F756768204C494E4B0000000000000000000000000000000000"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1917,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2130,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2130,
											"end": 2137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 677,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "CFB082B8962EC709CFFB27055D8A31D70D842951BE20F80C34853C0659EDDD91"
										},
										{
											"begin": 669,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 697,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 2161,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3053,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9781,
											"end": 9795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 9767,
											"end": 9795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9767,
											"end": 9795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9777,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9767,
											"end": 9795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 9759,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9837,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 9855,
											"end": 9864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9866,
											"end": 9876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9837,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9837,
											"end": 9877,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9837,
											"end": 9877,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 9837,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3355,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5204,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH data",
											"source": 6,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6537,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6563,
											"end": 6568,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6539,
											"end": 6571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6571,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7123,
											"end": 7130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7109,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7179,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7317,
											"end": 7324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7373,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7362,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2161,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 861,
											"end": 863,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1912,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7916,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "PUSH",
											"source": 2,
											"value": "4000AEA0"
										},
										{
											"begin": 7947,
											"end": 7961,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 7963,
											"end": 7967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7980,
											"end": 7988,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7969,
											"end": 8012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 8013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8280,
											"end": 8288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8343,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8263,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8263,
											"end": 8345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8345,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8263,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8775,
											"end": 8781,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8790,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8775,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8762,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8771,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8798,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8825,
											"end": 8833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8811,
											"end": 8843,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8811,
											"end": 8843,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8811,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8804,
											"end": 8843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8804,
											"end": 8843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8804,
											"end": 8843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8848,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7751,
											"end": 7758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 7805,
											"end": 7808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7805,
											"end": 7815,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7817,
											"end": 7822,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7138,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7109,
											"end": 7141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7141,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2494,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2370,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2494,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7312,
											"end": 7338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 6892,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6863,
											"end": 6895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6895,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 9,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 927,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1014,
											"end": 1020,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1023,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 797,
											"end": 1028,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 921,
											"end": 928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 948,
											"end": 953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 936,
											"end": 953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 967,
											"end": 973,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 967,
											"end": 973,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 959,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 863,
											"end": 1025,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1574,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1574,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1574,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1574,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1515,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1515,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1579,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4572,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH data",
											"source": 12,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3904,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3919,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2464,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2830,
											"end": 2840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3163,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3622,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 10,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									],
									".data": {
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"RANDOMNESS_REQUESTER()": "790273dd",
							"getRandomSeed(address)": "3883d854",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"rawFulfillRandomness(bytes32,uint256)": "94985ddd",
							"renounceRole(bytes32,address)": "36568abe",
							"requestRandomNumber()": "8678a7b2",
							"revokeRole(bytes32,address)": "d547741f",
							"unpause()": "3f4ba83a",
							"withdrawLink(uint256)": "7a8042bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RANDOMNESS_REQUESTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRandomSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRandomNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"requestRandomNumber()\":{\"notice\":\"Requests randomness from a user-provided seed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkRandoms.sol\":\"ChainlinkRandoms\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ChainlinkRandoms.sol\":{\"keccak256\":\"0x4823d071d8a84b58997f1c8eb8e63d00a64fcdc74d6bcb498b802c9dcea6b531\",\"urls\":[\"bzz-raw://c64ffa820d6731b96c0b2eb35ec14455e94f88dea8ef8d395ecf73e926f0eb47\",\"dweb:/ipfs/QmXu4D5T4hTBDafSZtWHwwKYWpoQ6pP2txv9wN2oiJiRvB\"]},\"contracts/interfaces/IRandoms.sol\":{\"keccak256\":\"0xf295ff46e88aecda61ba393f4618a38d969484edd3566fea2f45f0fa938aa5f6\",\"urls\":[\"bzz-raw://d4f452557461c86da893e9fd1b7f3ebc7a421fb2c3c7fe4f2f13f3d4dfe52d39\",\"dweb:/ipfs/QmNbX2R7UVYNMNfKNgXEt1rt6fw4C3fbLFqseDSQDZF9Z9\"]},\"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":{\"keccak256\":\"0x0631170c6f92cfe43a3305379788214a60175d2aa9b4c6716f0c66515e878129\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86f11fdc9eaa2819cc2405d8137fd6c3338526c8ebc4cb140775b2d4e5500160\",\"dweb:/ipfs/QmUerSsz6Rfiw83SnJbxerEZsL6C8cv3krfcAxnverKtfk\"]},\"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":{\"keccak256\":\"0x0c3bd40c63dac8398a979b1228c8ecb1c269c157dd16f2dce2086d2270b65b22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed9db87be9dfb0f763a556d8d80356b08282b8ea48484838cdf470a5c3cd15d5\",\"dweb:/ipfs/QmPLhwDAS3TPDiEQmTyqXnWBqwEMBSbXtjEiQDSGejoiPt\"]},\"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xe245a7be950c94d87bb775ae9ee9fbd693fbe2987778e6ce0b04605ea44b7b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2c3165d949fc66fe407b96eb3dc2092c7e800f4c073b411bf7b96de3e156c9\",\"dweb:/ipfs/QmcfJhR1Np4GsLWnww2Duqks2wEzYk8VDTvCAYy7MisG1r\"]},\"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2377,
								"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 642,
								"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)638_storage)"
							},
							{
								"astId": 294,
								"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
								"label": "nonces",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_uint256)"
							},
							{
								"astId": 40,
								"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
								"label": "keyHash",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
								"label": "fee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 44,
								"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
								"label": "seed",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)638_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)638_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)2143_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2142,
										"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1878_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)638_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 635,
										"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)2143_storage"
									},
									{
										"astId": 637,
										"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1878_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1873,
										"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1877,
										"contract": "contracts/ChainlinkRandoms.sol:ChainlinkRandoms",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"requestRandomNumber()": {
								"notice": "Requests randomness from a user-provided seed"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IRandoms.sol": {
				"IRandoms": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRandomSeed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "seed",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRandomSeed(address)": "3883d854"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRandomSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRandoms.sol\":\"IRandoms\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRandoms.sol\":{\"keccak256\":\"0xf295ff46e88aecda61ba393f4618a38d969484edd3566fea2f45f0fa938aa5f6\",\"urls\":[\"bzz-raw://d4f452557461c86da893e9fd1b7f3ebc7a421fb2c3c7fe4f2f13f3d4dfe52d39\",\"dweb:/ipfs/QmNbX2R7UVYNMNfKNgXEt1rt6fw4C3fbLFqseDSQDZF9Z9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol": {
				"VRFConsumerBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_link",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "randomness",
									"type": "uint256"
								}
							],
							"name": "rawFulfillRandomness",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constuctor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.)Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "https://docs.chain.link/docs/link-token-contracts",
								"params": {
									"_link": "address of LINK token contract",
									"_vrfCoordinator": "address of VRFCoordinator contract"
								}
							}
						},
						"stateVariables": {
							"USER_SEED_PLACEHOLDER": {
								"details": "In order to keep backwards compatibility we have kept the user seed field around. We remove the use of it because given that the blockhash enters later, it overrides whatever randomness the used seed provides. Given that it adds no security, and can easily lead to misunderstandings, we have removed it from usage and can now provide a simpler API."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomness(bytes32,uint256)": "94985ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constuctor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails. (See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.)Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"https://docs.chain.link/docs/link-token-contracts\",\"params\":{\"_link\":\"address of LINK token contract\",\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"stateVariables\":{\"USER_SEED_PLACEHOLDER\":{\"details\":\"In order to keep backwards compatibility we have kept the user seed field around. We remove the use of it because given that the blockhash enters later, it overrides whatever randomness the used seed provides. Given that it adds no security, and can easily lead to misunderstandings, we have removed it from usage and can now provide a simpler API.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":\"VRFConsumerBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\":{\"keccak256\":\"0x0631170c6f92cfe43a3305379788214a60175d2aa9b4c6716f0c66515e878129\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86f11fdc9eaa2819cc2405d8137fd6c3338526c8ebc4cb140775b2d4e5500160\",\"dweb:/ipfs/QmUerSsz6Rfiw83SnJbxerEZsL6C8cv3krfcAxnverKtfk\"]},\"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":{\"keccak256\":\"0x0c3bd40c63dac8398a979b1228c8ecb1c269c157dd16f2dce2086d2270b65b22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed9db87be9dfb0f763a556d8d80356b08282b8ea48484838cdf470a5c3cd15d5\",\"dweb:/ipfs/QmPLhwDAS3TPDiEQmTyqXnWBqwEMBSbXtjEiQDSGejoiPt\"]},\"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xe245a7be950c94d87bb775ae9ee9fbd693fbe2987778e6ce0b04605ea44b7b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2c3165d949fc66fe407b96eb3dc2092c7e800f4c073b411bf7b96de3e156c9\",\"dweb:/ipfs/QmcfJhR1Np4GsLWnww2Duqks2wEzYk8VDTvCAYy7MisG1r\"]},\"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 294,
								"contract": "node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol:VRFConsumerBase",
								"label": "nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_uint256)"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
						"version": 1
					}
				}
			},
			"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol": {
				"VRFRequestIDBase": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":57:1581  contract VRFRequestIDBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":57:1581  contract VRFRequestIDBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122098248be8d26fc41197d0aa03ecc67c5f192ecca1906c0261e86996c62fe5ad5864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122098248be8d26fc41197d0aa03ecc67c5f192ecca1906c0261e86996c62fe5ad5864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x24 DUP12 0xE8 0xD2 PUSH16 0xC41197D0AA03ECC67C5F192ECCA1906C MUL PUSH2 0xE869 SWAP7 0xC6 0x2F 0xE5 0xAD PC PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "57:1524:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122098248be8d26fc41197d0aa03ecc67c5f192ecca1906c0261e86996c62fe5ad5864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x24 DUP12 0xE8 0xD2 PUSH16 0xC41197D0AA03ECC67C5F192ECCA1906C MUL PUSH2 0xE869 SWAP7 0xC6 0x2F 0xE5 0xAD PC PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "57:1524:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"makeRequestId(bytes32,uint256)": "infinite",
								"makeVRFInputSeed(bytes32,uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1581,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098248be8d26fc41197d0aa03ecc67c5f192ecca1906c0261e86996c62fe5ad5864736f6c634300060c0033",
									".code": [
										{
											"begin": 57,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 57,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 1581,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":\"VRFRequestIDBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol\":{\"keccak256\":\"0x0c3bd40c63dac8398a979b1228c8ecb1c269c157dd16f2dce2086d2270b65b22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed9db87be9dfb0f763a556d8d80356b08282b8ea48484838cdf470a5c3cd15d5\",\"dweb:/ipfs/QmPLhwDAS3TPDiEQmTyqXnWBqwEMBSbXtjEiQDSGejoiPt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol": {
				"LinkTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xe245a7be950c94d87bb775ae9ee9fbd693fbe2987778e6ce0b04605ea44b7b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2c3165d949fc66fe407b96eb3dc2092c7e800f4c073b411bf7b96de3e156c9\",\"dweb:/ipfs/QmcfJhR1Np4GsLWnww2Duqks2wEzYk8VDTvCAYy7MisG1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044664accd1e9850754d38d46ab7cfeac119ca6a84396ad572547c31c198b902364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044664accd1e9850754d38d46ab7cfeac119ca6a84396ad572547c31c198b902364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH7 0x4ACCD1E9850754 0xD3 DUP14 CHAINID 0xAB PUSH29 0xFEAC119CA6A84396AD572547C31C198B902364736F6C634300060C0033 ",
							"sourceMap": "621:2783:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044664accd1e9850754d38d46ab7cfeac119ca6a84396ad572547c31c198b902364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH7 0x4ACCD1E9850754 0xD3 DUP14 CHAINID 0xAB PUSH29 0xFEAC119CA6A84396AD572547C31C198B902364736F6C634300060C0033 ",
							"sourceMap": "621:2783:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044664accd1e9850754d38d46ab7cfeac119ca6a84396ad572547c31c198b902364736f6c634300060c0033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 642,
								"contract": "node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)638_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)638_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)638_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)2143_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2142,
										"contract": "node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1878_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)638_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 635,
										"contract": "node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)2143_storage"
									},
									{
										"astId": 637,
										"contract": "node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1878_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1873,
										"contract": "node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1877,
										"contract": "node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200a9c06ba471c06d6e8fb934db194b4d00979b32ac17ca07d45eaf74beb82aa9564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a9c06ba471c06d6e8fb934db194b4d00979b32ac17ca07d45eaf74beb82aa9564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP13 MOD 0xBA SELFBALANCE SHR MOD 0xD6 0xE8 0xFB SWAP4 0x4D 0xB1 SWAP5 0xB4 0xD0 MULMOD PUSH26 0xB32AC17CA07D45EAF74BEB82AA9564736F6C634300060C003300 ",
							"sourceMap": "630:6594:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a9c06ba471c06d6e8fb934db194b4d00979b32ac17ca07d45eaf74beb82aa9564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP13 MOD 0xBA SELFBALANCE SHR MOD 0xD6 0xE8 0xFB SWAP4 0x4D 0xB1 SWAP5 0xB4 0xD0 MULMOD PUSH26 0xB32AC17CA07D45EAF74BEB82AA9564736F6C634300060C003300 ",
							"sourceMap": "630:6594:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a9c06ba471c06d6e8fb934db194b4d00979b32ac17ca07d45eaf74beb82aa9564736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122059b9a065c742b920ab78ee55a24b825aaf0393e9ed10a65ee626e4a03553340664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059b9a065c742b920ab78ee55a24b825aaf0393e9ed10a65ee626e4a03553340664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB9 LOG0 PUSH6 0xC742B920AB78 0xEE SSTORE LOG2 0x4B DUP3 GAS 0xAF SUB SWAP4 0xE9 0xED LT 0xA6 0x5E 0xE6 0x26 0xE4 LOG0 CALLDATALOAD MSTORE8 CALLVALUE MOD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059b9a065c742b920ab78ee55a24b825aaf0393e9ed10a65ee626e4a03553340664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB9 LOG0 PUSH6 0xC742B920AB78 0xEE SSTORE LOG2 0x4B DUP3 GAS 0xAF SUB SWAP4 0xE9 0xED LT 0xA6 0x5E 0xE6 0x26 0xE4 LOG0 CALLDATALOAD MSTORE8 CALLVALUE MOD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059b9a065c742b920ab78ee55a24b825aaf0393e9ed10a65ee626e4a03553340664736f6c634300060c0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122022e46dcec273d2c76ab904c6d678539ca7d1874aa851a3f50327a0435acd91b764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022e46dcec273d2c76ab904c6d678539ca7d1874aa851a3f50327a0435acd91b764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xE4 PUSH14 0xCEC273D2C76AB904C6D678539CA7 0xD1 DUP8 0x4A 0xA8 MLOAD LOG3 CREATE2 SUB 0x27 LOG0 NUMBER GAS 0xCD SWAP2 0xB7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:7684:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022e46dcec273d2c76ab904c6d678539ca7d1874aa851a3f50327a0435acd91b764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xE4 PUSH14 0xCEC273D2C76AB904C6D678539CA7 0xD1 DUP8 0x4A 0xA8 MLOAD LOG3 CREATE2 SUB 0x27 LOG0 NUMBER GAS 0xCD SWAP2 0xB7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:7684:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022e46dcec273d2c76ab904c6d678539ca7d1874aa851a3f50327a0435acd91b764736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220363927e4f701f2ac5d85ea5271f37c556528cc1e253720b929cf848518ea541664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220363927e4f701f2ac5d85ea5271f37c556528cc1e253720b929cf848518ea541664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE CODECOPY 0x27 0xE4 0xF7 ADD CALLCODE 0xAC 0x5D DUP6 0xEA MSTORE PUSH18 0xF37C556528CC1E253720B929CF848518EA54 AND PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "753:8634:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220363927e4f701f2ac5d85ea5271f37c556528cc1e253720b929cf848518ea541664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE CODECOPY 0x27 0xE4 0xF7 ADD CALLCODE 0xAC 0x5D DUP6 0xEA MSTORE PUSH18 0xF37C556528CC1E253720B929CF848518EA54 AND PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "753:8634:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220363927e4f701f2ac5d85ea5271f37c556528cc1e253720b929cf848518ea541664736f6c634300060c0033",
									".code": [
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2377,
								"contract": "node_modules/@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/ChainlinkRandoms.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ChainlinkRandoms.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/interfaces/IRandoms.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IRandoms.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ChainlinkRandoms.sol": {
				"ast": {
					"absolutePath": "contracts/ChainlinkRandoms.sol",
					"exportedSymbols": {
						"ChainlinkRandoms": [
							200
						],
						"SeedState": [
							14
						]
					},
					"id": 201,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 903,
							"src": "25:74:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/Pausable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 2452,
							"src": "100:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 1549,
							"src": "169:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 1336,
							"src": "245:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol",
							"file": "../node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 336,
							"src": "318:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IRandoms.sol",
							"file": "./interfaces/IRandoms.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 211,
							"src": "394:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "SeedState",
							"id": 14,
							"members": [
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "requestId",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 14,
									"src": "454:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 8,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "seed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 14,
									"src": "477:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "477:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "isAvailable",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 14,
									"src": "495:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 12,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "495:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"name": "SeedState",
							"nodeType": "StructDefinition",
							"scope": 201,
							"src": "431:83:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 15,
										"name": "IRandoms",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 210,
										"src": "545:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRandoms_$210",
											"typeString": "contract IRandoms"
										}
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "545:8:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 17,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2451,
										"src": "555:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$2451",
											"typeString": "contract Pausable"
										}
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "555:8:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 19,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 902,
										"src": "565:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$902",
											"typeString": "contract AccessControl"
										}
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "565:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 21,
										"name": "VRFConsumerBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "580:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFConsumerBase_$335",
											"typeString": "contract VRFConsumerBase"
										}
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "580:15:0"
								}
							],
							"contractDependencies": [
								210,
								335,
								385,
								902,
								1867,
								2451
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 200,
							"linearizedBaseContracts": [
								200,
								335,
								385,
								902,
								2451,
								1867,
								210
							],
							"name": "ChainlinkRandoms",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 25,
									"libraryName": {
										"contractScope": null,
										"id": 23,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1548,
										"src": "608:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1548",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "602:27:0",
									"typeName": {
										"contractScope": null,
										"id": 24,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1335,
										"src": "622:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1335",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 33,
									"mutability": "constant",
									"name": "VRF_MAGIC_SEED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 200,
									"src": "635:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"hexValue": "575448656c6c",
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "687:8:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_cfb082b8962ec709cffb27055d8a31d70d842951be20f80c34853c0659eddd91",
															"typeString": "literal_string \"WTHell\""
														},
														"value": "WTHell"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_cfb082b8962ec709cffb27055d8a31d70d842951be20f80c34853c0659eddd91",
															"typeString": "literal_string \"WTHell\""
														}
													],
													"id": 29,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -8,
													"src": "677:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 31,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "677:19:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "669:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint256_$",
												"typeString": "type(uint256)"
											},
											"typeName": {
												"id": 27,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "669:7:0",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "669:28:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "790273dd",
									"id": 38,
									"mutability": "constant",
									"name": "RANDOMNESS_REQUESTER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 200,
									"src": "704:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 34,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "704:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "52414e444f4d4e4553535f524551554553544552",
												"id": 36,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "761:22:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa0",
													"typeString": "literal_string \"RANDOMNESS_REQUESTER\""
												},
												"value": "RANDOMNESS_REQUESTER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b833753adf767f5ea59ffa8fe88b66c1fdff464a3d915ca68d34535a159ecfa0",
													"typeString": "literal_string \"RANDOMNESS_REQUESTER\""
												}
											],
											"id": 35,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "751:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "751:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "keyHash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 200,
									"src": "791:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 39,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "791:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "fee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 200,
									"src": "820:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "820:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "seed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 200,
									"src": "846:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "846:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1365:108:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "_keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1385:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1375:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1375:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1403:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1409:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1403:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1403:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 68,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "1435:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 69,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1455:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1455:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 67,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1424:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1424:42:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 55,
													"name": "_vrfCoordinator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "1275:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 56,
													"name": "_link",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 48,
													"src": "1323:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 57,
											"modifierName": {
												"argumentTypes": null,
												"id": 54,
												"name": "VRFConsumerBase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 335,
												"src": "1246:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_VRFConsumerBase_$335_$",
													"typeString": "type(contract VRFConsumerBase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1246:107:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1166:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_link",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1191:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1206:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 49,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1224:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1165:72:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:0:0"
									},
									"scope": 200,
									"src": "1154:319:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										209
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1570:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 87,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 76,
																			"src": "1622:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 88,
																			"name": "seed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "1628:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 93,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 90,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -4,
																							"src": "1644:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 91,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "number",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "1644:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 92,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1644:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 89,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -5,
																				"src": "1634:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1634:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 85,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "1605:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1605:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1605:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 84,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "1595:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1595:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 82,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1587:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1587:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 98,
												"nodeType": "Return",
												"src": "1580:84:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3883d854",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomSeed",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 78,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1538:8:0"
									},
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1515:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1514:14:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1561:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1560:9:0"
									},
									"scope": 200,
									"src": "1492:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1817:344:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 108,
																	"name": "RANDOMNESS_REQUESTER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1843:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 109,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1865:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1865:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 107,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "1835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1835:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53656e6465722063616e6e6f7420726571756573742073656564",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1878:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e51a4fcd4e5fba82c1f92caf63c80e0c472c13db8eb9f5d412a9c7f6065d4b31",
																"typeString": "literal_string \"Sender cannot request seed\""
															},
															"value": "Sender cannot request seed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e51a4fcd4e5fba82c1f92caf63c80e0c472c13db8eb9f5d412a9c7f6065d4b31",
																"typeString": "literal_string \"Sender cannot request seed\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1827:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "1827:80:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 120,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "1948:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ChainlinkRandoms_$200",
																					"typeString": "contract ChainlinkRandoms"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ChainlinkRandoms_$200",
																					"typeString": "contract ChainlinkRandoms"
																				}
																			],
																			"id": 119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1940:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 118,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1940:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1940:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 116,
																		"name": "LINK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "1925:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
																			"typeString": "contract LinkTokenInterface"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 412,
																	"src": "1925:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "1958:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1925:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420656e6f756768204c494e4b",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1963:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c0755f7b177a75a575a6fc1ad54a95f3c29b31e64f77075462b5456f056869d",
																"typeString": "literal_string \"Not enough LINK\""
															},
															"value": "Not enough LINK"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c0755f7b177a75a575a6fc1ad54a95f3c29b31e64f77075462b5456f056869d",
																"typeString": "literal_string \"Not enough LINK\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1917:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 129,
															"name": "keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 130,
															"name": "VRF_MAGIC_SEED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2139:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "requestRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2112:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,uint256) returns (bytes32)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2112:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2112:42:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1694:64:0",
										"text": " Requests randomness from a user-provided seed"
									},
									"functionSelector": "8678a7b2",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 104,
											"modifierName": {
												"argumentTypes": null,
												"id": 103,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2407,
												"src": "1803:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1803:13:0"
										}
									],
									"name": "requestRandomNumber",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1817:0:0"
									},
									"scope": 200,
									"src": "1763:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2203:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 139,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "2213:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2213:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8456cb59",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 137,
											"modifierName": {
												"argumentTypes": null,
												"id": 136,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "2193:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2193:9:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2203:0:0"
									},
									"scope": 200,
									"src": "2167:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2272:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 148,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2450,
														"src": "2282:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2282:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2282:10:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3f4ba83a",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 146,
											"modifierName": {
												"argumentTypes": null,
												"id": 145,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "2262:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2262:9:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2272:0:0"
									},
									"scope": 200,
									"src": "2234:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										229
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2460:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 161,
														"name": "seed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2470:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 162,
														"name": "randomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2477:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2470:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2470:17:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2305:60:0",
										"text": " Callback function used by VRF Coordinator"
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 159,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2451:8:0"
									},
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 154,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "2422:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2396:45:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2460:0:0"
									},
									"scope": 200,
									"src": "2370:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2562:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 180,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2698:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2698:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 182,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2710:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 176,
																			"name": "LINK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "2678:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
																				"typeString": "contract LinkTokenInterface"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
																				"typeString": "contract LinkTokenInterface"
																			}
																		],
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2670:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 174,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2670:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2670:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 173,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "2663:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1335_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1369,
														"src": "2663:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1335_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1335_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2663:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2663:59:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7a8042bd",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 171,
											"modifierName": {
												"argumentTypes": null,
												"id": 170,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "2552:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2552:9:0"
										}
									],
									"name": "withdrawLink",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2522:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2521:21:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2562:0:0"
									},
									"scope": 200,
									"src": "2500:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2773:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 190,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "2799:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 191,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "2819:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2819:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 189,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f742061646d696e",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2832:11:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															},
															"value": "Not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2783:61:0"
											},
											{
												"id": 197,
												"nodeType": "PlaceholderStatement",
												"src": "2854:1:0"
											}
										]
									},
									"documentation": null,
									"id": 199,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2770:2:0"
									},
									"src": "2752:110:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 201,
							"src": "516:2348:0"
						}
					],
					"src": "0:2865:0"
				},
				"id": 0
			},
			"contracts/interfaces/IRandoms.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IRandoms.sol",
					"exportedSymbols": {
						"IRandoms": [
							210
						]
					},
					"id": 211,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 202,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 210,
							"linearizedBaseContracts": [
								210
							],
							"name": "IRandoms",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3883d854",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomSeed",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "86:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "86:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "85:14:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "seed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "123:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "122:14:1"
									},
									"scope": 210,
									"src": "63:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 211,
							"src": "25:114:1"
						}
					],
					"src": "0:140:1"
				},
				"id": 1
			},
			"node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol": {
				"ast": {
					"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/VRFConsumerBase.sol",
					"exportedSymbols": {
						"VRFConsumerBase": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 212,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "./vendor/SafeMathChainlink.sol",
							"id": 213,
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 620,
							"src": "57:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
							"file": "./interfaces/LinkTokenInterface.sol",
							"id": 214,
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 481,
							"src": "99:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol",
							"file": "./VRFRequestIDBase.sol",
							"id": 215,
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 386,
							"src": "146:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 217,
										"name": "VRFRequestIDBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 385,
										"src": "5438:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFRequestIDBase_$385",
											"typeString": "contract VRFRequestIDBase"
										}
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "5438:16:2"
								}
							],
							"contractDependencies": [
								385
							],
							"contractKind": "contract",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "180:5220:2",
								"text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constuctor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash), and have told you the minimum LINK\n @dev price for VRF service. Make sure your contract has sufficient LINK, and\n @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n @dev want to generate randomness from.\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomness method.\n @dev The randomness argument to fulfillRandomness is the actual random value\n @dev generated from your seed.\n @dev The requestId argument is generated from the keyHash and the seed by\n @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n @dev requests open, you can use the requestId to track which seed is\n @dev associated with which randomness. See VRFRequestIDBase.sol for more\n @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.)\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ. (Which is critical to making unpredictable randomness! See the\n @dev next section.)\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the ultimate input to the VRF is mixed with the block hash of the\n @dev block in which the request is made, user-provided seeds have no impact\n @dev on its economic security properties. They are only included for API\n @dev compatability with previous versions of this contract.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request."
							},
							"fullyImplemented": false,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								385
							],
							"name": "VRFConsumerBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 221,
									"libraryName": {
										"contractScope": null,
										"id": 219,
										"name": "SafeMathChainlink",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 619,
										"src": "5466:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathChainlink_$619",
											"typeString": "library SafeMathChainlink"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "5460:36:2",
									"typeName": {
										"id": 220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5488:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": null,
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "5500:641:2",
										"text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBase expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomness the VRF output"
									},
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "6171:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "6190:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6170:39:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6230:0:2"
									},
									"scope": 335,
									"src": "6144:87:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6235:388:2",
										"text": " @dev In order to keep backwards compatibility we have kept the user\n seed field around. We remove the use of it because given that the blockhash\n enters later, it overrides whatever randomness the used seed provides.\n Given that it adds no security, and can easily lead to misunderstandings,\n we have removed it from usage and can now provide a simpler API."
									},
									"id": 233,
									"mutability": "constant",
									"name": "USER_SEED_PLACEHOLDER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 335,
									"src": "6626:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6626:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6675:1:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7920:928:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 246,
															"name": "vrfCoordinator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7947:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 247,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 250,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "7980:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 251,
																	"name": "USER_SEED_PLACEHOLDER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7990:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 248,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7969:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7969:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7969:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 243,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7926:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
																"typeString": "contract LinkTokenInterface"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 468,
														"src": "7926:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bool)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7926:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "7926:87:2"
											},
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "vRFSeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 285,
														"src": "8244:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8244:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 258,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "8280:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 259,
															"name": "USER_SEED_PLACEHOLDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8290:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 262,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "8321:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$335",
																		"typeString": "contract VRFConsumerBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$335",
																		"typeString": "contract VRFConsumerBase"
																	}
																],
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8313:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8313:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8313:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 264,
																"name": "nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "8328:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																	"typeString": "mapping(bytes32 => uint256)"
																}
															},
															"id": 266,
															"indexExpression": {
																"argumentTypes": null,
																"id": 265,
																"name": "_keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "8335:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8328:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "makeVRFInputSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "8263:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes32,uint256,address,uint256) pure returns (uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8263:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8244:101:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 269,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "8756:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"id": 270,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "8763:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8756:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8796:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 272,
																	"name": "nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "8775:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																		"typeString": "mapping(bytes32 => uint256)"
																	}
																},
																"id": 274,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 273,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8782:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8775:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "8775:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8775:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8756:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "8756:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 281,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "8825:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 282,
															"name": "vRFSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "8835:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 280,
														"name": "makeRequestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "8811:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,uint256) pure returns (bytes32)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8811:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 242,
												"id": 284,
												"nodeType": "Return",
												"src": "8804:39:2"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6681:1134:2",
										"text": " @notice requestRandomness initiates a request for VRF output given _seed\n @dev The fulfillRandomness method receives the output, once it's provided\n @dev by the Oracle, and verified by the vrfCoordinator.\n @dev The _keyHash must already be registered with the VRFCoordinator, and\n @dev the _fee must exceed the fee specified during registration of the\n @dev _keyHash.\n @dev The _seed parameter is vestigial, and is kept only for API\n @dev compatibility with older versions. It can't *hurt* to mix in some of\n @dev your own randomness, here, but it's not necessary because the VRF\n @dev oracle will mix the hash of the block containing your request into the\n @dev VRF seed it ultimately uses.\n @param _keyHash ID of public key against which randomness is generated\n @param _fee The amount of LINK to send with the request\n @return requestId unique ID for this request\n @dev The returned requestId can be used to distinguish responses to\n @dev concurrent requests. It is passed as the first argument to\n @dev fulfillRandomness."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "7845:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7845:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "7863:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7844:32:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "7899:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7898:19:2"
									},
									"scope": 335,
									"src": "7818:1030:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 288,
									"mutability": "immutable",
									"name": "LINK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 335,
									"src": "8852:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
										"typeString": "contract LinkTokenInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 287,
										"name": "LinkTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 480,
										"src": "8852:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
											"typeString": "contract LinkTokenInterface"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 290,
									"mutability": "immutable",
									"name": "vrfCoordinator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 335,
									"src": "8898:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 289,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8898:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 335,
									"src": "9078:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 293,
										"keyType": {
											"id": 291,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "9086:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "9078:53:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueType": {
											"id": 292,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "9111:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "9399:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 302,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "9405:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 303,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "9422:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9405:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "9405:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "LINK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "9443:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 308,
																"name": "_link",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "9469:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 307,
															"name": "LinkTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "9450:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$480_$",
																"typeString": "type(contract LinkTokenInterface)"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9450:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"src": "9443:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LinkTokenInterface_$480",
														"typeString": "contract LinkTokenInterface"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "9443:32:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "9151:186:2",
										"text": " @param _vrfCoordinator address of VRFCoordinator contract\n @param _link address of LINK token contract\n @dev https://docs.chain.link/docs/link-token-contracts"
									},
									"id": 313,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "9352:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "_link",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "9377:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9351:40:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9399:0:2"
									},
									"scope": 335,
									"src": "9340:140:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "9753:129:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 321,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "9767:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9767:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 323,
																"name": "vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "9781:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9767:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9797:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
																"typeString": "literal_string \"Only VRFCoordinator can fulfill\""
															},
															"value": "Only VRFCoordinator can fulfill"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
																"typeString": "literal_string \"Only VRFCoordinator can fulfill\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9759:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9759:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "9759:72:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 329,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "9855:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "randomness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "9866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 328,
														"name": "fulfillRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "9837:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9837:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "9837:40:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "94985ddd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "9705:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "9724:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9704:39:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9753:0:2"
									},
									"scope": 335,
									"src": "9675:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 336,
							"src": "5401:4483:2"
						}
					],
					"src": "32:9853:2"
				},
				"id": 2
			},
			"node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol": {
				"ast": {
					"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/VRFRequestIDBase.sol",
					"exportedSymbols": {
						"VRFRequestIDBase": [
							385
						]
					},
					"id": 386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 385,
							"linearizedBaseContracts": [
								385
							],
							"name": "VRFRequestIDBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "938:90:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 356,
																			"name": "_keyHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "981:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 357,
																			"name": "_userSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "991:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 358,
																			"name": "_requester",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1002:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 359,
																			"name": "_nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1014:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 354,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "970:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "970:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "970:51:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 353,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "960:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "960:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "952:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "952:7:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "952:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 363,
												"nodeType": "Return",
												"src": "944:79:3"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "88:706:3",
										"text": " @notice returns the seed which is actually input to the VRF coordinator\n @dev To prevent repetition of VRF output due to repetition of the\n @dev user-supplied seed, that seed is combined in a hash with the\n @dev user-specific nonce, and the address of the consuming contract. The\n @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n @dev the final seed, but the nonce does protect against repetition in\n @dev requests which are included in a single block.\n @param _userSeed VRF seed input provided by user\n @param _requester Address of the requesting contract\n @param _nonce User-specific nonce at the time of the request"
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeVRFInputSeed",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "823:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 339,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_userSeed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "841:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_requester",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "864:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "_nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "884:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:77:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "927:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "926:9:3"
									},
									"scope": 385,
									"src": "797:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1509:70:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 378,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "1549:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 379,
																	"name": "_vRFInputSeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1559:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 376,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1532:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1532:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1532:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 375,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1522:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 374,
												"id": 382,
												"nodeType": "Return",
												"src": "1515:59:3"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1032:373:3",
										"text": " @notice Returns the id for this request\n @param _keyHash The serviceAgreement ID to be used for this request\n @param _vRFInputSeed The seed to be passed directly to the VRF\n @return The id for this request\n @dev Note that _vRFInputSeed is not the seed passed by the consuming\n @dev contract, but the one generated by makeVRFInputSeed"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRequestId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "1436:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "_vRFInputSeed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "1454:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1430:46:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "1500:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1499:9:3"
									},
									"scope": 385,
									"src": "1408:171:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "57:1524:3"
						}
					],
					"src": "32:1550:3"
				},
				"id": 3
			},
			"node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol": {
				"ast": {
					"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							480
						]
					},
					"id": 481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 387,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 480,
							"linearizedBaseContracts": [
								480
							],
							"name": "LinkTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "109:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "124:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "108:32:4"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "164:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "163:19:4"
									},
									"scope": 480,
									"src": "90:93:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "220:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "202:32:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "253:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "253:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "252:14:4"
									},
									"scope": 480,
									"src": "186:81:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "289:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:15:4"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "326:17:4"
									},
									"scope": 480,
									"src": "270:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:2:4"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "decimalPlaces",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "390:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 414,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "390:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "389:21:4"
									},
									"scope": 480,
									"src": "347:64:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "66188463",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 426,
												"src": "440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 426,
												"src": "457:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "439:37:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 426,
												"src": "495:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "495:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "494:14:4"
									},
									"scope": 480,
									"src": "414:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d73dd623",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 433,
												"src": "538:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 433,
												"src": "555:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:42:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:4"
									},
									"scope": 480,
									"src": "512:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "631:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "631:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "630:25:4"
									},
									"scope": 480,
									"src": "592:64:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 443,
												"src": "700:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "700:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "699:27:4"
									},
									"scope": 480,
									"src": "659:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "totalTokensIssued",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "776:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "775:27:4"
									},
									"scope": 480,
									"src": "730:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "824:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "836:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "823:27:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "869:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "868:14:4"
									},
									"scope": 480,
									"src": "806:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4000aea0",
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "911:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "923:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "938:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "938:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:48:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "977:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "977:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "976:14:4"
									},
									"scope": 480,
									"src": "886:105:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 479,
												"src": "1016:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 479,
												"src": "1030:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 479,
												"src": "1042:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:41:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 479,
												"src": "1075:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1074:14:4"
									},
									"scope": 480,
									"src": "994:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 481,
							"src": "57:1034:4"
						}
					],
					"src": "32:1060:4"
				},
				"id": 4
			},
			"node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "node_modules/@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							619
						]
					},
					"id": 620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 482,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 483,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 619,
							"linearizedBaseContracts": [
								619
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "930:95:5",
										"statements": [
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 508,
														"src": "936:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 495,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "948:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 496,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "952:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 500,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "967:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "972:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "959:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 506,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 494,
													"src": "1019:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 507,
												"nodeType": "Return",
												"src": "1012:8:5"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "876:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "887:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "921:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:5"
									},
									"scope": 619,
									"src": "863:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1344:98:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 520,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "1358:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "1363:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:5"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 534,
														"src": "1405:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 528,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "1417:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 529,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1421:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 532,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 527,
													"src": "1436:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 533,
												"nodeType": "Return",
												"src": "1429:8:5"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "1290:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "1301:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "1335:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:5"
									},
									"scope": 619,
									"src": "1277:165:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "1737:351:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 545,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "1952:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 551,
												"nodeType": "IfStatement",
												"src": "1948:35:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "1960:23:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 544,
															"id": 549,
															"nodeType": "Return",
															"src": "1968:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 569,
														"src": "1989:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 554,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2001:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2005:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 559,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "2020:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 560,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "2024:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 562,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "2029:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 567,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 553,
													"src": "2082:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 568,
												"nodeType": "Return",
												"src": "2075:8:5"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "1683:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "1694:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "1728:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:5"
									},
									"scope": 619,
									"src": "1670:418:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "2596:237:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 581,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "2672:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:5"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 595,
														"src": "2714:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 592,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 589,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2726:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 590,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2730:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 593,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "2827:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 579,
												"id": 594,
												"nodeType": "Return",
												"src": "2820:8:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2542:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2553:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2587:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:5"
									},
									"scope": 619,
									"src": "2529:304:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "3330:72:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 607,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "3344:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 613,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "3392:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 614,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "3396:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 605,
												"id": 616,
												"nodeType": "Return",
												"src": "3385:12:5"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "3276:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "3287:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:5"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "3321:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:5"
									},
									"scope": 619,
									"src": "3263:139:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 620,
							"src": "621:2783:5"
						}
					],
					"src": "32:3373:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							902
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 621,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol",
							"file": "../utils/EnumerableSet.sol",
							"id": 622,
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 2360,
							"src": "66:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 623,
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 1845,
							"src": "103:30:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 624,
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 1868,
							"src": "134:30:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 626,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1867,
										"src": "1478:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1867",
											"typeString": "contract Context"
										}
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:6"
								}
							],
							"contractDependencies": [
								1867
							],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "166:1276:6",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902,
								1867
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 630,
									"libraryName": {
										"contractScope": null,
										"id": 628,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2359,
										"src": "1498:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$2359",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1492:49:6",
									"typeName": {
										"contractScope": null,
										"id": 629,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2143,
										"src": "1516:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 633,
									"libraryName": {
										"contractScope": null,
										"id": 631,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1844,
										"src": "1552:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1844",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1546:26:6",
									"typeName": {
										"id": 632,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 638,
									"members": [
										{
											"constant": false,
											"id": 635,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 638,
											"src": "1604:32:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"contractScope": null,
												"id": 634,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2143,
												"src": "1604:24:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 637,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 638,
											"src": "1646:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 636,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1646:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1578:92:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 642,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 902,
									"src": "1676:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 641,
										"keyType": {
											"id": 639,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1685:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1676:29:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"contractScope": null,
											"id": 640,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 638,
											"src": "1696:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$638_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 645,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 902,
									"src": "1727:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 643,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783030",
										"id": 644,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:4:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "1783:292:6",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 654,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 654,
												"src": "2103:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 654,
												"src": "2125:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 654,
												"src": "2160:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 651,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2102:87:6"
									},
									"src": "2080:110:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "2196:198:6",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 663,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "2417:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "2439:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "2464:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:71:6"
									},
									"src": "2399:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "2494:275:6",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 672,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "2792:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 665,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "2814:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "2839:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2791:71:6"
									},
									"src": "2774:89:6"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "3025:62:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 687,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3072:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 682,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "3042:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 684,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 683,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "3049:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3042:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$638_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 635,
															"src": "3042:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2143_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2221,
														"src": "3042:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2143_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2143_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 681,
												"id": 689,
												"nodeType": "Return",
												"src": "3035:45:6"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "2869:76:6",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "2967:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 674,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "2981:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2966:31:6"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "3019:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3018:6:6"
									},
									"scope": 902,
									"src": "2950:137:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "3327:53:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 699,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "3344:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 701,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 700,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "3351:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3344:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$638_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 635,
															"src": "3344:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2143_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2235,
														"src": "3344:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2143_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$2143_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 698,
												"id": 705,
												"nodeType": "Return",
												"src": "3337:36:6"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "3093:157:6",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "3283:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3282:14:6"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "3318:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3317:9:6"
									},
									"scope": 902,
									"src": "3255:125:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "4047:54:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 722,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "4088:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 717,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "4064:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 719,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 718,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "4071:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4064:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$638_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 635,
															"src": "4064:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2143_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2261,
														"src": "4064:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2143_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$2143_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 716,
												"id": 724,
												"nodeType": "Return",
												"src": "4057:37:6"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "3386:574:6",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "3988:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "4002:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3987:29:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "4038:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4037:9:6"
									},
									"scope": 902,
									"src": "3965:136:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "4348:46:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 734,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "4365:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 736,
														"indexExpression": {
															"argumentTypes": null,
															"id": 735,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "4372:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4365:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$638_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 637,
													"src": "4365:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 733,
												"id": 738,
												"nodeType": "Return",
												"src": "4358:29:6"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "4107:170:6",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 740,
												"src": "4304:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4303:14:6"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 740,
												"src": "4339:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4338:9:6"
									},
									"scope": 902,
									"src": "4282:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "4709:158:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 750,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "4735:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 751,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "4742:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4735:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$638_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 637,
																	"src": "4735:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 754,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "4759:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 749,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "4727:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4727:45:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4774:49:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4719:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "4719:105:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 761,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "4846:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 762,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4852:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 760,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "4835:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "4835:25:6"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "4400:239:6",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 766,
												"src": "4663:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 766,
												"src": "4677:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4662:31:6"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4709:0:6"
									},
									"scope": 902,
									"src": "4644:223:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "5167:160:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 776,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "5193:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 778,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 777,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 769,
																			"src": "5200:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5193:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$638_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 637,
																	"src": "5193:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 780,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "5217:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5217:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 775,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "5185:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5185:45:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5232:50:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5177:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "5177:106:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 787,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "5306:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 788,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5312:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 786,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5294:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5294:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "5294:26:6"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "4873:223:6",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "5121:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 768,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "5135:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:31:6"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:0:6"
									},
									"scope": 902,
									"src": "5101:226:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "5886:137:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 801,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "5904:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 802,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "5915:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5915:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5904:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:49:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5896:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "5896:83:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 809,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "6002:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 810,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "6008:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 808,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5990:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "5990:26:6"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "5333:480:6",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 814,
												"src": "5840:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 794,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 814,
												"src": "5854:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5839:31:6"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5886:0:6"
									},
									"scope": 902,
									"src": "5818:205:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "6656:42:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 823,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6677:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 824,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "6683:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 822,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "6666:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "6666:25:6"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "6029:554:6",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "6608:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 816,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "6622:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6622:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6607:31:6"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6656:0:6"
									},
									"scope": 902,
									"src": "6588:110:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "6896:123:6",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 837,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "6928:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 838,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "6934:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 839,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "6941:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6934:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$638_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 637,
															"src": "6934:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 842,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "6958:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 836,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "6911:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6911:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "EmitStatement",
												"src": "6906:62:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 845,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "6978:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 847,
															"indexExpression": {
																"argumentTypes": null,
																"id": 846,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "6985:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6978:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$638_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 637,
														"src": "6978:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 849,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "7003:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6978:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "6978:34:6"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "6704:114:6",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "6846:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 830,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "6860:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6845:33:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6896:0:6"
									},
									"scope": 902,
									"src": "6823:196:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "7084:125:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7123:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 860,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "7098:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 862,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 861,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "7105:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7098:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$638_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 635,
															"src": "7098:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2143_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2169,
														"src": "7098:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2143_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2143_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 875,
												"nodeType": "IfStatement",
												"src": "7094:109:6",
												"trueBody": {
													"id": 874,
													"nodeType": "Block",
													"src": "7133:70:6",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "7164:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 869,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "7170:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 870,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "7179:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7179:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 867,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7152:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7152:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 873,
															"nodeType": "EmitStatement",
															"src": "7147:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "7045:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "7059:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7059:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7044:31:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7084:0:6"
									},
									"scope": 902,
									"src": "7025:184:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "7275:128:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 889,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7317:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 884,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "7289:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$638_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 886,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 885,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "7296:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7289:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$638_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 635,
															"src": "7289:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2143_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2195,
														"src": "7289:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2143_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2143_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 899,
												"nodeType": "IfStatement",
												"src": "7285:112:6",
												"trueBody": {
													"id": 898,
													"nodeType": "Block",
													"src": "7327:70:6",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 892,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "7358:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 893,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "7364:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 894,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "7373:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7373:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 891,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "7346:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7346:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 897,
															"nodeType": "EmitStatement",
															"src": "7341:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "7236:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "7250:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7235:31:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7275:0:6"
									},
									"scope": 902,
									"src": "7215:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 903,
							"src": "1443:5962:6"
						}
					],
					"src": "33:7373:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1257
						]
					},
					"id": 1258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 905,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1257,
							"linearizedBaseContracts": [
								1257
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "865:98:7",
										"statements": [
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 935,
														"src": "875:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 919,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "887:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 920,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "891:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 923,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "906:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 924,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "910:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 930,
												"nodeType": "IfStatement",
												"src": "902:28:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 928,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 916,
													"id": 929,
													"nodeType": "Return",
													"src": "913:17:7"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 932,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "954:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 933,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 916,
												"id": 934,
												"nodeType": "Return",
												"src": "940:16:7"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "805:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "816:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:7"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "850:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "856:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:7"
									},
									"scope": 1257,
									"src": "789:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "1185:75:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "1199:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 949,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1203:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 955,
												"nodeType": "IfStatement",
												"src": "1195:28:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 953,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 947,
													"id": 954,
													"nodeType": "Return",
													"src": "1206:17:7"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 957,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "1247:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 958,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "1251:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 960,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 947,
												"id": 961,
												"nodeType": "Return",
												"src": "1233:20:7"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:7",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 963,
												"src": "1125:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 963,
												"src": "1136:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:7"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 963,
												"src": "1170:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 963,
												"src": "1176:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:7"
									},
									"scope": 1257,
									"src": "1109:151:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "1484:359:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 975,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1716:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 982,
												"nodeType": "IfStatement",
												"src": "1712:28:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 980,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 974,
													"id": 981,
													"nodeType": "Return",
													"src": "1724:16:7"
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1003,
														"src": "1750:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 985,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1762:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 986,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "1766:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 989,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "1781:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 990,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "1785:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 992,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "1790:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 998,
												"nodeType": "IfStatement",
												"src": "1777:33:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 996,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 974,
													"id": 997,
													"nodeType": "Return",
													"src": "1793:17:7"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 1000,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "1834:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1001,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 974,
												"id": 1002,
												"nodeType": "Return",
												"src": "1820:16:7"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1424:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1435:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:7"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1469:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1475:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:7"
									},
									"scope": 1257,
									"src": "1408:435:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "2068:76:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1016,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "2082:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1023,
												"nodeType": "IfStatement",
												"src": "2078:29:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1021,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1015,
													"id": 1022,
													"nodeType": "Return",
													"src": "2090:17:7"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1025,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "2131:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1026,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "2135:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1028,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1029,
												"nodeType": "Return",
												"src": "2117:20:7"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "2019:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:7"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "2053:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1031,
												"src": "2059:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:7"
									},
									"scope": 1257,
									"src": "1992:152:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "2379:76:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1043,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2393:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "2389:29:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1048,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1042,
													"id": 1049,
													"nodeType": "Return",
													"src": "2401:17:7"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1052,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2442:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1053,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "2446:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1055,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1056,
												"nodeType": "Return",
												"src": "2428:20:7"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "2319:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "2330:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:7"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "2364:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "2370:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:7"
									},
									"scope": 1257,
									"src": "2303:152:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "2757:108:7",
										"statements": [
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1083,
														"src": "2767:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1070,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2779:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1071,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "2783:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1075,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2802:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1076,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "2807:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1081,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1069,
													"src": "2857:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1082,
												"nodeType": "Return",
												"src": "2850:8:7"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "2703:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "2714:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:7"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "2748:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:7"
									},
									"scope": 1257,
									"src": "2690:175:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "3203:88:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1095,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "3221:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1096,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "3226:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1101,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "3279:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1102,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "3283:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1104,
												"nodeType": "Return",
												"src": "3272:12:7"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "3149:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "3160:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "3194:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:7"
									},
									"scope": 1257,
									"src": "3136:155:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "3605:148:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1116,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "3619:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "3615:20:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1115,
													"id": 1120,
													"nodeType": "Return",
													"src": "3627:8:7"
												}
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1139,
														"src": "3645:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "3657:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "3661:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1129,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "3680:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1130,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "3684:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1132,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "3689:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1137,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1123,
													"src": "3745:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1138,
												"nodeType": "Return",
												"src": "3738:8:7"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1140,
												"src": "3551:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1140,
												"src": "3562:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1140,
												"src": "3596:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:7"
									},
									"scope": 1257,
									"src": "3538:215:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "4284:83:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1151,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "4302:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "4355:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4359:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1160,
												"nodeType": "Return",
												"src": "4348:12:7"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1162,
												"src": "4230:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1162,
												"src": "4241:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:7"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1162,
												"src": "4275:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:7"
									},
									"scope": 1257,
									"src": "4217:150:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "4887:81:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "4905:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1179,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "4956:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1180,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "4960:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1182,
												"nodeType": "Return",
												"src": "4949:12:7"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1184,
												"src": "4833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1184,
												"src": "4844:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:7"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1184,
												"src": "4878:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:7"
									},
									"scope": 1257,
									"src": "4820:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "5527:68:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1197,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "5545:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1198,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "5550:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1200,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5553:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1203,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "5583:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1204,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "5587:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1195,
												"id": 1206,
												"nodeType": "Return",
												"src": "5576:12:7"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1208,
												"src": "5445:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1208,
												"src": "5456:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1208,
												"src": "5467:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:7"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1208,
												"src": "5518:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:7"
									},
									"scope": 1257,
									"src": "5432:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "6347:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1221,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "6365:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "6372:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "6402:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "6406:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1230,
												"nodeType": "Return",
												"src": "6395:12:7"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "6265:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "6276:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "6287:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "6338:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:7"
									},
									"scope": 1257,
									"src": "6252:162:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "7155:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1245,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "7173:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1248,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "7180:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "7210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "7214:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1254,
												"nodeType": "Return",
												"src": "7203:12:7"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "7073:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "7084:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "7095:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:7"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "7146:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:7"
									},
									"scope": 1257,
									"src": "7060:162:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1258,
							"src": "630:6594:7"
						}
					],
					"src": "33:7192:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1335
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1259,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1260,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1335,
							"linearizedBaseContracts": [
								1335
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:8"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1266,
												"src": "277:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:8"
									},
									"scope": 1335,
									"src": "231:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1274,
												"src": "388:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:8"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1274,
												"src": "428:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:8"
									},
									"scope": 1335,
									"src": "369:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1284,
												"src": "675:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1284,
												"src": "694:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:8"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1284,
												"src": "728:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:8"
									},
									"scope": 1335,
									"src": "657:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1294,
												"src": "1028:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1294,
												"src": "1043:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:8"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1294,
												"src": "1083:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:8"
									},
									"scope": 1335,
									"src": "1009:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "1762:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "1779:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "1813:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:8"
									},
									"scope": 1335,
									"src": "1745:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "2148:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "2164:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "2183:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:8"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "2217:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:8"
									},
									"scope": 1335,
									"src": "2126:97:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1325,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "2407:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "2429:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "2449:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:8"
									},
									"src": "2392:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1334,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2638:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2661:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2686:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:8"
									},
									"src": "2623:78:8"
								}
							],
							"scope": 1336,
							"src": "137:2566:8"
						}
					],
					"src": "33:2671:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1548
						]
					},
					"id": 1549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1338,
							"nodeType": "ImportDirective",
							"scope": 1549,
							"sourceUnit": 1336,
							"src": "66:22:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1339,
							"nodeType": "ImportDirective",
							"scope": 1549,
							"sourceUnit": 1258,
							"src": "89:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1340,
							"nodeType": "ImportDirective",
							"scope": 1549,
							"sourceUnit": 1845,
							"src": "123:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1341,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1548,
							"linearizedBaseContracts": [
								1548
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1344,
									"libraryName": {
										"contractScope": null,
										"id": 1342,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1257,
										"src": "646:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1257",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:9",
									"typeName": {
										"id": 1343,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1347,
									"libraryName": {
										"contractScope": null,
										"id": 1345,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1844,
										"src": "678:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1844",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:9",
									"typeName": {
										"id": 1346,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "776:103:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1357,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "806:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1360,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1349,
																			"src": "836:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1335",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1284,
																		"src": "836:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1363,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "861:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1364,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "865:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1358,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1356,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "786:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1335_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "786:86:9"
											}
										]
									},
									"documentation": null,
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "726:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1335",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1348,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1335,
													"src": "726:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1335",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "740:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "752:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:9"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:9"
									},
									"scope": 1548,
									"src": "704:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "975:113:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1381,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1005:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1384,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "1035:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1335",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1316,
																		"src": "1035:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1387,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "1064:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1388,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1070:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1389,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "1074:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1382,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1380,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "985:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1335_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "985:96:9"
											}
										]
									},
									"documentation": null,
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1394,
												"src": "911:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1335",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1370,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1335,
													"src": "911:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1335",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1394,
												"src": "925:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1394,
												"src": "939:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1394,
												"src": "951:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:9"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:9"
									},
									"scope": 1548,
									"src": "885:203:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "1424:537:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1405,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "1713:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1408,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1413,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1548",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1548",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1412,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1411,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1415,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1399,
																					"src": "1760:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1409,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1397,
																					"src": "1729:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1335",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1294,
																				"src": "1729:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1419,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1425,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "1884:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1428,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1397,
																			"src": "1914:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1335",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1304,
																		"src": "1914:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1431,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "1938:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "1947:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1426,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1424,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "1864:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1335_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:9"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:9",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "1369:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1335",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1396,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1335,
													"src": "1369:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1335",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "1383:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "1400:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:9"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:9"
									},
									"scope": 1548,
									"src": "1348:613:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1472,
										"nodeType": "Block",
										"src": "2053:197:9",
										"statements": [
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1472,
														"src": "2063:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1457,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "2130:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1452,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1548",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1548",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1450,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1454,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "2117:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1448,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "2086:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1335",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1294,
																"src": "2086:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1084,
														"src": "2086:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1461,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "2166:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1464,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "2196:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1335",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1304,
																		"src": "2196:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1467,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "2220:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1468,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "2229:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1462,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1460,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "2146:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1335_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:9"
											}
										]
									},
									"documentation": null,
									"id": 1473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1473,
												"src": "1998:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1335",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1438,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1335,
													"src": "1998:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1335",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1473,
												"src": "2012:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1473,
												"src": "2029:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:9"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1548,
									"src": "1967:283:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "2342:242:9",
										"statements": [
											{
												"assignments": [
													1483
												],
												"declarations": [
													{
														"constant": false,
														"id": 1483,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1509,
														"src": "2352:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "2419:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1488,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1548",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1548",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1486,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1490,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "2406:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1484,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "2375:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1335",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1294,
																"src": "2375:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1208,
														"src": "2375:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1498,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "2500:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1501,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "2530:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1335",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1304,
																		"src": "2530:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1504,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "2554:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1505,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "2563:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1499,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1335",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1497,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "2480:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1335_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:9"
											}
										]
									},
									"documentation": null,
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1510,
												"src": "2287:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1335",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1474,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1335,
													"src": "2287:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1335",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1510,
												"src": "2301:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1510,
												"src": "2318:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:9"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:9"
									},
									"scope": 1548,
									"src": "2256:328:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "3037:681:9",
										"statements": [
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1546,
														"src": "3386:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1518,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "3440:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1522,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "3420:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1335",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1335",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1639,
														"src": "3412:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1529,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "3495:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1545,
												"nodeType": "IfStatement",
												"src": "3491:221:9",
												"trueBody": {
													"id": 1544,
													"nodeType": "Block",
													"src": "3518:194:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1536,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "3635:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1537,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1539,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1534,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1533,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1543,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1547,
												"src": "2996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1335",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1512,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1335,
													"src": "2996:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1335",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1547,
												"src": "3010:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:9"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:9"
									},
									"scope": 1548,
									"src": "2967:751:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1549,
							"src": "616:3104:9"
						}
					],
					"src": "33:3688:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1550,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1551,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "792:347:10",
										"statements": [
											{
												"assignments": [
													1560
												],
												"declarations": [
													{
														"constant": false,
														"id": 1560,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1567,
														"src": "989:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:10"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1554,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:10",
														"valueSize": 1
													},
													{
														"declaration": 1560,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:10",
														"valueSize": 1
													}
												],
												"id": 1562,
												"nodeType": "InlineAssembly",
												"src": "1067:41:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1563,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "1124:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1566,
												"nodeType": "Return",
												"src": "1117:15:10"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:10",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "746:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:10"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "786:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:10"
									},
									"scope": 1844,
									"src": "726:413:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "2127:320:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1579,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1844",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1844",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1582,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "2170:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:10"
											},
											{
												"assignments": [
													1588,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1601,
														"src": "2299:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1595,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1589,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2317:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1591,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "2340:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1597,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "2370:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:10"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1602,
												"src": "2075:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1602,
												"src": "2102:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:10"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:10"
									},
									"scope": 1844,
									"src": "2056:391:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "3277:82:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1613,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "3305:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1614,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "3313:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1612,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1619,
															1639
														],
														"referencedDeclaration": 1639,
														"src": "3292:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1617,
												"nodeType": "Return",
												"src": "3285:67:10"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1619,
												"src": "3210:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1619,
												"src": "3226:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:10"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1619,
												"src": "3263:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:10"
									},
									"scope": 1844,
									"src": "3188:171:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "3698:76:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1632,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "3737:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1633,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "3745:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "3754:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1631,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1709
														],
														"referencedDeclaration": 1709,
														"src": "3715:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1637,
												"nodeType": "Return",
												"src": "3708:59:10"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "3603:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "3619:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1623,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "3638:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "3684:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:10"
									},
									"scope": 1844,
									"src": "3581:193:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "4249:111:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1652,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "4288:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1653,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "4296:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1654,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "4302:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1651,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1709
														],
														"referencedDeclaration": 1709,
														"src": "4266:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1657,
												"nodeType": "Return",
												"src": "4259:94:10"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "4167:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "4183:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "4202:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:10"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "4235:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:10"
									},
									"scope": 1844,
									"src": "4136:224:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "4749:382:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1676,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1844",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1844",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1674,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1679,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "4792:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1686,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "4869:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1685,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "4858:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:10"
											},
											{
												"assignments": [
													1692,
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1708,
														"src": "4981:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1691,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1708,
														"src": "4995:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1693,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "5050:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1695,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "5022:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1697,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "5042:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1703,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "5090:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1704,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "5099:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1705,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "5111:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1702,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "5072:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1707,
												"nodeType": "Return",
												"src": "5065:59:10"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:10",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4639:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4655:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4674:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4689:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1667,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:10"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4735:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:10"
									},
									"scope": 1844,
									"src": "4608:523:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "5408:97:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1720,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "5444:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1721,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "5452:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1719,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1726,
															1761
														],
														"referencedDeclaration": 1761,
														"src": "5425:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1718,
												"id": 1724,
												"nodeType": "Return",
												"src": "5418:80:10"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1726,
												"src": "5336:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1726,
												"src": "5352:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:10"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1726,
												"src": "5394:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1716,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:10"
									},
									"scope": 1844,
									"src": "5308:197:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "5817:288:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1740,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "5846:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1739,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "5835:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:10"
											},
											{
												"assignments": [
													1746,
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1760,
														"src": "5965:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1745,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1760,
														"src": "5979:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1747,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "6024:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1749,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "6006:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "6064:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1756,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "6073:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1757,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6085:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1754,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "6046:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1759,
												"nodeType": "Return",
												"src": "6039:59:10"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "5717:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "5733:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "5752:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:10"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "5803:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:10"
									},
									"scope": 1844,
									"src": "5689:416:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "6381:101:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1772,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "6419:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1773,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "6427:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1771,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1778,
															1813
														],
														"referencedDeclaration": 1813,
														"src": "6398:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1776,
												"nodeType": "Return",
												"src": "6391:84:10"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1778,
												"src": "6314:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1778,
												"src": "6330:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:10"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1778,
												"src": "6367:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:10"
									},
									"scope": 1844,
									"src": "6284:198:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "6793:292:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1792,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "6822:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1791,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "6811:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:10"
											},
											{
												"assignments": [
													1798,
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1812,
														"src": "6943:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1812,
														"src": "6957:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1805,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "7004:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1801,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "6984:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1807,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "7044:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1808,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "7053:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1809,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "7065:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1806,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "7026:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1811,
												"nodeType": "Return",
												"src": "7019:59:10"
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "6698:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "6714:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "6733:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:10"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1813,
												"src": "6779:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:10"
									},
									"scope": 1844,
									"src": "6668:417:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "7220:596:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1824,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1815,
													"src": "7234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1840,
													"nodeType": "Block",
													"src": "7291:519:10",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1828,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "7375:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1838,
																"nodeType": "Block",
																"src": "7747:53:10",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1835,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1819,
																					"src": "7772:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1834,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1837,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:10"
																	}
																]
															},
															"id": 1839,
															"nodeType": "IfStatement",
															"src": "7371:429:10",
															"trueBody": {
																"id": 1833,
																"nodeType": "Block",
																"src": "7398:343:10",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:10",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:10"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:10"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:10",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:10",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:10"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:10"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:10"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1817,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:10",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1817,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:10",
																				"valueSize": 1
																			}
																		],
																		"id": 1832,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:10"
																	}
																]
															}
														}
													]
												},
												"id": 1841,
												"nodeType": "IfStatement",
												"src": "7230:580:10",
												"trueBody": {
													"id": 1827,
													"nodeType": "Block",
													"src": "7243:42:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1825,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "7264:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1823,
															"id": 1826,
															"nodeType": "Return",
															"src": "7257:17:10"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1843,
												"src": "7118:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1843,
												"src": "7132:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1843,
												"src": "7157:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:10"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1843,
												"src": "7206:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:10"
									},
									"scope": 1844,
									"src": "7091:725:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1845,
							"src": "134:7684:10"
						}
					],
					"src": "33:7786:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1867
						]
					},
					"id": 1868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1867,
							"linearizedBaseContracts": [
								1867
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "668:34:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1851,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1850,
												"id": 1853,
												"nodeType": "Return",
												"src": "678:17:11"
											}
										]
									},
									"documentation": null,
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:11"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1855,
												"src": "651:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:11"
									},
									"scope": 1867,
									"src": "598:104:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "773:165:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1860,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1867",
														"typeString": "contract Context"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "783:4:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1862,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1864,
												"nodeType": "Return",
												"src": "916:15:11"
											}
										]
									},
									"documentation": null,
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:11"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "759:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:11"
									},
									"scope": 1867,
									"src": "708:230:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1868,
							"src": "566:374:11"
						}
					],
					"src": "33:908:11"
				},
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2359
						]
					},
					"id": 2360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1869,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1870,
								"nodeType": "StructuredDocumentation",
								"src": "66:686:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2359,
							"linearizedBaseContracts": [
								2359
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1878,
									"members": [
										{
											"constant": false,
											"id": 1873,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1878,
											"src": "1275:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1871,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1872,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1275:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1877,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1878,
											"src": "1426:37:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1876,
												"keyType": {
													"id": 1874,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1426:28:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 2359,
									"src": "1221:249:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "1709:335:12",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1723:22:12",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1889,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "1734:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 1890,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "1739:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1888,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "1724:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1724:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1916,
													"nodeType": "Block",
													"src": "2001:37:12",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:5:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1887,
															"id": 1915,
															"nodeType": "Return",
															"src": "2015:12:12"
														}
													]
												},
												"id": 1917,
												"nodeType": "IfStatement",
												"src": "1719:319:12",
												"trueBody": {
													"id": 1913,
													"nodeType": "Block",
													"src": "1747:248:12",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1898,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "1778:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1893,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "1761:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1873,
																		"src": "1761:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1761:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1900,
															"nodeType": "ExpressionStatement",
															"src": "1761:23:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1901,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "1919:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1877,
																		"src": "1919:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1905,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1903,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "1932:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1919:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1906,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "1941:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1873,
																		"src": "1941:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1941:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1919:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1910,
															"nodeType": "ExpressionStatement",
															"src": "1919:40:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:4:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1887,
															"id": 1912,
															"nodeType": "Return",
															"src": "1973:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "1476:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "1654:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1880,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1878,
													"src": "1654:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "1671:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1882,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1653:32:12"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "1703:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1702:6:12"
									},
									"scope": 2359,
									"src": "1640:404:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "2284:1440:12",
										"statements": [
											{
												"assignments": [
													1930
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1998,
														"src": "2394:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2394:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1931,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "2415:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1877,
														"src": "2415:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1934,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1933,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "2428:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2415:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2394:40:12"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1936,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "2449:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2449:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1996,
													"nodeType": "Block",
													"src": "3681:37:12",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3702:5:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1928,
															"id": 1995,
															"nodeType": "Return",
															"src": "3695:12:12"
														}
													]
												},
												"id": 1997,
												"nodeType": "IfStatement",
												"src": "2445:1273:12",
												"trueBody": {
													"id": 1993,
													"nodeType": "Block",
													"src": "2466:1209:12",
													"statements": [
														{
															"assignments": [
																1940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1940,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1993,
																	"src": "2806:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1939,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2806:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1944,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1941,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "2830:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2843:1:12",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2830:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2806:38:12"
														},
														{
															"assignments": [
																1946
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1946,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1993,
																	"src": "2858:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1945,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2858:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1952,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1947,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "2878:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1873,
																		"src": "2878:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2878:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2899:1:12",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2878:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2858:42:12"
														},
														{
															"assignments": [
																1954
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1954,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1993,
																	"src": "3140:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1953,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3140:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1959,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1955,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "3160:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1873,
																	"src": "3160:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1958,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1957,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "3172:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3160:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3140:42:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1960,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "3274:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1873,
																		"src": "3274:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1964,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1962,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "3286:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3274:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1965,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "3303:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3274:38:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1967,
															"nodeType": "ExpressionStatement",
															"src": "3274:38:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1968,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "3378:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1877,
																		"src": "3378:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1972,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1970,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "3391:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3378:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1973,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "3404:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3420:1:12",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3404:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3378:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1977,
															"nodeType": "ExpressionStatement",
															"src": "3378:43:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1978,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "3527:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1873,
																		"src": "3527:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3527:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3527:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1984,
															"nodeType": "ExpressionStatement",
															"src": "3527:17:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3612:26:12",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1985,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "3619:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1877,
																		"src": "3619:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1988,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1987,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1924,
																		"src": "3632:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3619:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1990,
															"nodeType": "ExpressionStatement",
															"src": "3612:26:12"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3660:4:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1928,
															"id": 1992,
															"nodeType": "Return",
															"src": "3653:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "2050:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "2229:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1921,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1878,
													"src": "2229:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "2246:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2228:32:12"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "2278:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2277:6:12"
									},
									"scope": 2359,
									"src": "2212:1512:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "3884:48:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2009,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "3901:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "3901:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 2012,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2011,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "3914:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3924:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3901:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2015,
												"nodeType": "Return",
												"src": "3894:31:12"
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "3730:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "3824:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2001,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1878,
													"src": "3824:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "3841:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2003,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3823:32:12"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "3878:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3877:6:12"
									},
									"scope": 2359,
									"src": "3805:127:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "4078:42:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2025,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "4095:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1873,
														"src": "4095:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4095:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2024,
												"id": 2028,
												"nodeType": "Return",
												"src": "4088:25:12"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "3938:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2030,
												"src": "4030:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2019,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1878,
													"src": "4030:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4029:17:12"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2030,
												"src": "4069:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4068:9:12"
									},
									"scope": 2359,
									"src": "4013:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "4528:125:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2041,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "4546:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1873,
																	"src": "4546:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4546:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2044,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "4567:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4546:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4574:36:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 2040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4538:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "4538:73:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2049,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "4628:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1873,
														"src": "4628:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2052,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2051,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "4640:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4628:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2039,
												"id": 2053,
												"nodeType": "Return",
												"src": "4621:25:12"
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "4125:322:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2055,
												"src": "4465:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2032,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1878,
													"src": "4465:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2055,
												"src": "4482:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4464:32:12"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2055,
												"src": "4519:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2037,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4518:9:12"
									},
									"scope": 2359,
									"src": "4452:201:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 2058,
									"members": [
										{
											"constant": false,
											"id": 2057,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2058,
											"src": "4706:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2056,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1878,
												"src": "4706:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 2359,
									"src": "4678:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "4969:47:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2069,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "4991:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "4991:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 2071,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "5003:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2068,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "4986:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2067,
												"id": 2073,
												"nodeType": "Return",
												"src": "4979:30:12"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "4729:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "4906:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2060,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2058,
													"src": "4906:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "4930:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4905:39:12"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "4963:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4963:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4962:6:12"
									},
									"scope": 2359,
									"src": "4893:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "5263:50:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2086,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "5288:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "5288:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 2088,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "5300:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2085,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "5280:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2084,
												"id": 2090,
												"nodeType": "Return",
												"src": "5273:33:12"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "5022:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2092,
												"src": "5200:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2077,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2058,
													"src": "5200:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2092,
												"src": "5224:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5199:39:12"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2092,
												"src": "5257:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5257:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5256:6:12"
									},
									"scope": 2359,
									"src": "5184:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "5480:52:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2103,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "5507:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "5507:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 2105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "5519:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2102,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "5497:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5497:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2101,
												"id": 2107,
												"nodeType": "Return",
												"src": "5490:35:12"
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "5319:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2109,
												"src": "5412:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2094,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2058,
													"src": "5412:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2109,
												"src": "5436:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2096,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5411:39:12"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2109,
												"src": "5474:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5474:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5473:6:12"
									},
									"scope": 2359,
									"src": "5394:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "5685:43:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2118,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "5710:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "5710:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2117,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "5702:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5702:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2121,
												"nodeType": "Return",
												"src": "5695:26:12"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "5538:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2123,
												"src": "5629:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2111,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2058,
													"src": "5629:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5628:24:12"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2123,
												"src": "5676:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5675:9:12"
									},
									"scope": 2359,
									"src": "5613:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "6143:46:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2134,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "6164:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "6164:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 2136,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "6176:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2133,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "6160:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2132,
												"id": 2138,
												"nodeType": "Return",
												"src": "6153:29:12"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "5733:322:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2140,
												"src": "6072:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2125,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2058,
													"src": "6072:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2058_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2140,
												"src": "6096:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6071:39:12"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2140,
												"src": "6134:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6134:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6133:9:12"
									},
									"scope": 2359,
									"src": "6060:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2143,
									"members": [
										{
											"constant": false,
											"id": 2142,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2143,
											"src": "6242:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2141,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1878,
												"src": "6242:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 2359,
									"src": "6214:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "6505:74:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2154,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "6527:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2142,
															"src": "6527:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2162,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2148,
																					"src": "6563:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6555:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2160,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6555:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6547:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2158,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6547:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6547:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6539:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2156,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6539:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6539:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2153,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "6522:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2167,
												"nodeType": "Return",
												"src": "6515:57:12"
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "6265:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2169,
												"src": "6442:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2145,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2143,
													"src": "6442:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2169,
												"src": "6466:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:39:12"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2169,
												"src": "6499:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6499:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6498:6:12"
									},
									"scope": 2359,
									"src": "6429:150:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "6826:77:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2180,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "6851:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2142,
															"src": "6851:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2188,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "6887:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6879:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2186,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6879:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6879:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6871:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2184,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6871:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6871:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6863:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2182,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6863:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6863:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2179,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "6843:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2193,
												"nodeType": "Return",
												"src": "6836:60:12"
											}
										]
									},
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "6585:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2195,
												"src": "6763:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2171,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2143,
													"src": "6763:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2195,
												"src": "6787:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6762:39:12"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2195,
												"src": "6820:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6820:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6819:6:12"
									},
									"scope": 2359,
									"src": "6747:156:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "7070:79:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2206,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "7097:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2142,
															"src": "7097:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2214,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "7133:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7125:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2212,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7125:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7125:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7117:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2210,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7117:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7117:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7109:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2208,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7109:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7109:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2205,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "7087:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2204,
												"id": 2219,
												"nodeType": "Return",
												"src": "7080:62:12"
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "6909:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2221,
												"src": "7002:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2197,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2143,
													"src": "7002:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2221,
												"src": "7026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7001:39:12"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2221,
												"src": "7064:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7064:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7063:6:12"
									},
									"scope": 2359,
									"src": "6984:165:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "7302:43:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2230,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "7327:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2142,
															"src": "7327:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2229,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "7319:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7319:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2228,
												"id": 2233,
												"nodeType": "Return",
												"src": "7312:26:12"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "7155:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2235,
												"src": "7246:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2223,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2143,
													"src": "7246:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7245:24:12"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2235,
												"src": "7293:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7293:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7292:9:12"
									},
									"scope": 2359,
									"src": "7230:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "7760:73:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2252,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2238,
																						"src": "7805:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2253,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2142,
																					"src": "7805:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1878_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2254,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2240,
																					"src": "7817:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1878_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2251,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "7801:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7801:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7793:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2249,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7793:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7793:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7785:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2247,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "7785:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7785:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7777:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2245,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7777:7:12",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7777:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2244,
												"id": 2259,
												"nodeType": "Return",
												"src": "7770:56:12"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "7350:322:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "7689:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2237,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2143,
													"src": "7689:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2143_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "7713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7688:39:12"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "7751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7750:9:12"
									},
									"scope": 2359,
									"src": "7677:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2264,
									"members": [
										{
											"constant": false,
											"id": 2263,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2264,
											"src": "7881:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2262,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1878,
												"src": "7881:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 2359,
									"src": "7856:42:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "8141:56:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2275,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "8163:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2263,
															"src": "8163:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "8183:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8175:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2277,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8175:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8175:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2274,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "8158:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2282,
												"nodeType": "Return",
												"src": "8151:39:12"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "7904:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2284,
												"src": "8081:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2266,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2264,
													"src": "8081:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2284,
												"src": "8102:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8102:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8080:36:12"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2284,
												"src": "8135:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8135:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8134:6:12"
									},
									"scope": 2359,
									"src": "8068:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "8441:59:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2295,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "8466:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2263,
															"src": "8466:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2299,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2289,
																	"src": "8486:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8478:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2297,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8478:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8478:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2294,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "8458:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8458:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2293,
												"id": 2302,
												"nodeType": "Return",
												"src": "8451:42:12"
											}
										]
									},
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "8203:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2304,
												"src": "8381:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2286,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2264,
													"src": "8381:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2304,
												"src": "8402:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8380:36:12"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2304,
												"src": "8435:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8435:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8434:6:12"
									},
									"scope": 2359,
									"src": "8365:135:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "8664:61:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2315,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "8691:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2263,
															"src": "8691:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2319,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2309,
																	"src": "8711:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8703:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2317,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8703:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8703:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2314,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "8681:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8681:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2313,
												"id": 2322,
												"nodeType": "Return",
												"src": "8674:44:12"
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "8506:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2324,
												"src": "8599:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2306,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2264,
													"src": "8599:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2324,
												"src": "8620:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8598:36:12"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2324,
												"src": "8658:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8658:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8657:6:12"
									},
									"scope": 2359,
									"src": "8581:144:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "8875:43:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2333,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2327,
																"src": "8900:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2263,
															"src": "8900:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1878_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2332,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "8892:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8892:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2331,
												"id": 2336,
												"nodeType": "Return",
												"src": "8885:26:12"
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "8731:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2338,
												"src": "8822:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2326,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2264,
													"src": "8822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8821:21:12"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2338,
												"src": "8866:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8865:9:12"
									},
									"scope": 2359,
									"src": "8806:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "9330:55:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2351,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "9359:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2352,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2263,
																	"src": "9359:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1878_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2353,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "9371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1878_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2350,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "9355:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1878_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9355:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9347:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9347:7:12",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2347,
												"id": 2356,
												"nodeType": "Return",
												"src": "9340:38:12"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "8923:322:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2358,
												"src": "9262:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2340,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2264,
													"src": "9262:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2264_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2358,
												"src": "9283:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9261:36:12"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2358,
												"src": "9321:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9320:9:12"
									},
									"scope": 2359,
									"src": "9250:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2360,
							"src": "753:8634:12"
						}
					],
					"src": "33:9355:12"
				},
				"id": 12
			},
			"node_modules/@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							2451
						]
					},
					"id": 2452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2361,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:13"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "./Context.sol",
							"id": 2362,
							"nodeType": "ImportDirective",
							"scope": 2452,
							"sourceUnit": 1868,
							"src": "66:23:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2364,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1867,
										"src": "561:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1867",
											"typeString": "contract Context"
										}
									},
									"id": 2365,
									"nodeType": "InheritanceSpecifier",
									"src": "561:7:13"
								}
							],
							"contractDependencies": [
								1867
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2363,
								"nodeType": "StructuredDocumentation",
								"src": "91:439:13",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2451,
							"linearizedBaseContracts": [
								2451,
								1867
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "575:73:13",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 2370,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2370,
												"src": "666:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "665:17:13"
									},
									"src": "653:30:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "689:70:13",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 2375,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2375,
												"src": "779:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "778:17:13"
									},
									"src": "764:32:13"
								},
								{
									"constant": false,
									"id": 2377,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2451,
									"src": "802:20:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2376,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "802:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "925:32:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "935:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "945:5:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "935:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2384,
												"nodeType": "ExpressionStatement",
												"src": "935:15:13"
											}
										]
									},
									"documentation": {
										"id": 2378,
										"nodeType": "StructuredDocumentation",
										"src": "829:67:13",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:13"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:0:13"
									},
									"scope": 2451,
									"src": "901:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "1105:31:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2392,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2377,
													"src": "1122:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2391,
												"id": 2393,
												"nodeType": "Return",
												"src": "1115:14:13"
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "963:84:13",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:13"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2395,
												"src": "1099:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1098:6:13"
									},
									"scope": 2451,
									"src": "1052:84:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "1347:66:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1365:9:13",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2399,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "1366:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1366:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:18:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1357:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "1357:38:13"
											},
											{
												"id": 2405,
												"nodeType": "PlaceholderStatement",
												"src": "1405:1:13"
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "1142:175:13",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2407,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:13"
									},
									"src": "1322:91:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "1613:69:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2411,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2395,
																"src": "1631:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1631:8:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:22:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1623:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "1623:41:13"
											},
											{
												"id": 2416,
												"nodeType": "PlaceholderStatement",
												"src": "1674:1:13"
											}
										]
									},
									"documentation": {
										"id": 2408,
										"nodeType": "StructuredDocumentation",
										"src": "1419:167:13",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2418,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:2:13"
									},
									"src": "1591:91:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "1866:66:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2424,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "1876:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:4:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1876:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2427,
												"nodeType": "ExpressionStatement",
												"src": "1876:14:13"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2429,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "1912:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1912:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2428,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "1905:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2432,
												"nodeType": "EmitStatement",
												"src": "1900:25:13"
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "1688:124:13",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2422,
											"modifierName": {
												"argumentTypes": null,
												"id": 2421,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2407,
												"src": "1852:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1852:13:13"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:2:13"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:0:13"
									},
									"scope": 2451,
									"src": "1817:115:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "2112:69:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2440,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "2122:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2132:5:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2122:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "2122:15:13"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2445,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "2161:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2444,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "2152:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2448,
												"nodeType": "EmitStatement",
												"src": "2147:27:13"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "1938:121:13",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2438,
											"modifierName": {
												"argumentTypes": null,
												"id": 2437,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2418,
												"src": "2101:10:13",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2101:10:13"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:13"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:13"
									},
									"scope": 2451,
									"src": "2064:117:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2452,
							"src": "531:1652:13"
						}
					],
					"src": "33:2151:13"
				},
				"id": 13
			}
		}
	}
}