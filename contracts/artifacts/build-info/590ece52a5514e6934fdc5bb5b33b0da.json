{
	"id": "590ece52a5514e6934fdc5bb5b33b0da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.5",
	"solcLongVersion": "0.6.5+commit.f956cc89",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/hellToken.sol": {
				"content": "pragma solidity ^0.6.2;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title SimpleToken\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `ERC20` functions.\n * Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol\n */\ncontract HellToken is ERC20 {\n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor() public ERC20(\"Hell Token\", \"HELL\") {\n        _mint(address(this), 1000000 * (10 ** uint256(decimals())));\n        _approve(address(this), msg.sender, totalSupply());\n    }\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/hellToken.sol": {
				"HellToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions. Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor that gives msg.sender all of existing tokens."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"title": "SimpleToken"
					},
					"evm": {
						"assembly": "    /* \"contracts/hellToken.sol\":442:749  contract HellToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/hellToken.sol\":562:747  constructor() public ERC20(\"Hell Token\", \"HELL\") {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0a\n  dup2\n  mstore\n  shl(0xb1, 0x2432b636102a37b5b2b7)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe2, 0x12115313)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  dup2\n  mload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  swap2\n  swap3\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  tag_5\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/hellToken.sol\":621:680  _mint(address(this), 1000000 * (10 ** uint256(decimals()))) */\n  tag_9\n    /* \"contracts/hellToken.sol\":635:639  this */\n  address\n    /* \"contracts/hellToken.sol\":667:677  decimals() */\n  tag_10\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/hellToken.sol\":667:675  decimals */\n  tag_11\n    /* \"contracts/hellToken.sol\":667:677  decimals() */\n  and\n  jump\t// in\ntag_10:\n    /* \"contracts/hellToken.sol\":659:678  uint256(decimals()) */\n  0xff\n  and\n    /* \"contracts/hellToken.sol\":653:655  10 */\n  0x0a\n    /* \"contracts/hellToken.sol\":653:678  10 ** uint256(decimals()) */\n  exp\n    /* \"contracts/hellToken.sol\":642:649  1000000 */\n  0x0f4240\n    /* \"contracts/hellToken.sol\":642:679  1000000 * (10 ** uint256(decimals())) */\n  mul\n    /* \"contracts/hellToken.sol\":621:626  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/hellToken.sol\":621:680  _mint(address(this), 1000000 * (10 ** uint256(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/hellToken.sol\":690:740  _approve(address(this), msg.sender, totalSupply()) */\n  tag_13\n    /* \"contracts/hellToken.sol\":707:711  this */\n  address\n    /* \"contracts/hellToken.sol\":714:724  msg.sender */\n  caller\n    /* \"contracts/hellToken.sol\":726:739  totalSupply() */\n  tag_14\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/hellToken.sol\":726:737  totalSupply */\n  tag_15\n    /* \"contracts/hellToken.sol\":726:739  totalSupply() */\n  and\n  jump\t// in\ntag_14:\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/hellToken.sol\":690:698  _approve */\n  tag_16\n    /* \"contracts/hellToken.sol\":690:740  _approve(address(this), msg.sender, totalSupply()) */\n  and\n  jump\t// in\ntag_13:\n    /* \"contracts/hellToken.sol\":442:749  contract HellToken is ERC20 {... */\n  jump(tag_17)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n  and(0xff, sload(0x05))\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\ntag_18:\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n  dup3\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_20\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1f\n  0x24\n  dup3\n  add\n  mstore\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_20:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n  tag_21\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n  dup4\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n  tag_22\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n  and\n  jump\t// in\ntag_21:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n  tag_23\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n  sload(0x02)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n  or(tag_0_78, shl(0x20, tag_24))\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n  dup3\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n  tag_25\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n  dup4\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n  tag_0_78\n  tag_24\n  dup3\n  shl\n  or\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n  swap1\n  shr\n  jump\t// in\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  dup4\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n  swap5\n  swap1\n  swap5\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  dup4\n  mload\n  dup6\n  dup2\n  mstore\n  swap4\n  mload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  swap3\n  swap4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n  swap2\n  swap3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\ntag_15:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n  sload(0x02)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n  dup4\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x24\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n  0x24\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n  dup3\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_29\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x22\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n  0x22\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n  dup1\n  dup5\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n  swap5\n  dup8\n  and\n  dup1\n  dup5\n  mstore\n  swap5\n  dup3\n  mstore\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n  dup6\n  swap1\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n  dup2\n  mload\n  dup6\n  dup2\n  mstore\n  swap2\n  mload\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\ntag_22:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_24:\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n  dup3\n  dup3\n  add\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_32\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_32:\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n  swap4\n    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/hellToken.sol\":442:749  contract HellToken is ERC20 {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_34\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_36)\ntag_34:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_36\n  jumpi\n  swap2\n  dup3\n  add\ntag_35:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_36\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_35)\ntag_36:\n  pop\n  tag_37\n  swap3\n  swap2\n  pop\n  tag_38\n  jump\t// in\ntag_37:\n  pop\n  swap1\n  jump\t// out\ntag_38:\n  tag_18\n  swap2\n  swap1\ntag_40:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_37\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_40)\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\ndata_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\nsub_0: assembly {\n        /* \"contracts/hellToken.sol\":442:749  contract HellToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/hellToken.sol\":442:749  contract HellToken is ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_19:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_19)\n    tag_21:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_22:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_24:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_25\n      jump\t// in\n    tag_23:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_30\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_37:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_38\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_40\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_49:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_50\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_53\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_18:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      swap1\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup4\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup3\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_56\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_55)\n    tag_56:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_57:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_57\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_62\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_59:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_66\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_67\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_68\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_70\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_69:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_62\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_67:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_32:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      and(0xff, sload(0x05))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_35:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_75\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_77\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_40:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      swap1\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup4\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_56\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_55)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_86\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_88\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_50:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_66\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_100\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_101\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_100:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup7\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_103\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      swap2\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_106:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_106)\n    tag_108:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_109:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      swap1\n      sub\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_111\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_101:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212206eabd4640788eb9a56835b112f8d5425372d835a1dc82c4b4c301d6e7cbee69964736f6c63430006050033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082018252600a8152692432b636102a37b5b2b760b11b6020808301918252835180850190945260048452631211531360e21b908401528151919291620000609160039162000362565b5080516200007690600490602084019062000362565b50506005805460ff1916601217905550620000b5306200009e6001600160e01b03620000e316565b60ff16600a0a620f424002620000ed60201b60201c565b620000dd3033620000ce6001600160e01b036200020516565b6001600160e01b036200020b16565b62000404565b60055460ff165b90565b6001600160a01b03821662000149576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b62000160600083836001600160e01b03620002fb16565b6200017c816002546200030060201b620008931790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001af9183906200089362000300821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60025490565b6001600160a01b038316620002525760405162461bcd60e51b815260040180806020018281038252602481526020018062000e666024913960400191505060405180910390fd5b6001600160a01b038216620002995760405162461bcd60e51b815260040180806020018281038252602281526020018062000e446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b505050565b6000828201838110156200035b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a557805160ff1916838001178555620003d5565b82800160010185558215620003d5579182015b82811115620003d5578251825591602001919060010190620003b8565b50620003e3929150620003e7565b5090565b620000ea91905b80821115620003e35760008155600101620003ee565b610a3080620004146000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610253578063a9059cbb1461027f578063dd62ed3e146102ab576100c9565b806339509351146101f957806370a082311461022557806395d89b411461024b576100c9565b806318160ddd116100b257806318160ddd1461018b57806323b872dd146101a5578063313ce567146101db576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d66102d9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776004803603604081101561016157600080fd5b506001600160a01b03813516906020013561036f565b604080519115158252519081900360200190f35b61019361038c565b60408051918252519081900360200190f35b610177600480360360608110156101bb57600080fd5b506001600160a01b03813581169160208101359091169060400135610392565b6101e361041f565b6040805160ff9092168252519081900360200190f35b6101776004803603604081101561020f57600080fd5b506001600160a01b038135169060200135610428565b6101936004803603602081101561023b57600080fd5b50356001600160a01b031661047c565b6100d6610497565b6101776004803603604081101561026957600080fd5b506001600160a01b0381351690602001356104f8565b6101776004803603604081101561029557600080fd5b506001600160a01b038135169060200135610566565b610193600480360360408110156102c157600080fd5b506001600160a01b038135811691602001351661057a565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050905090565b600061038361037c6105a5565b84846105a9565b50600192915050565b60025490565b600061039f848484610695565b610415846103ab6105a5565b61041085604051806060016040528060288152602001610965602891396001600160a01b038a166000908152600160205260408120906103e96105a5565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6107fc16565b6105a9565b5060019392505050565b60055460ff1690565b60006103836104356105a5565b8461041085600160006104466105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61089316565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b60006103836105056105a5565b84610410856040518060600160405280602581526020016109d6602591396001600061052f6105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107fc16565b60006103836105736105a5565b8484610695565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105ee5760405162461bcd60e51b81526004018080602001828103825260248152602001806109b26024913960400191505060405180910390fd5b6001600160a01b0382166106335760405162461bcd60e51b815260040180806020018281038252602281526020018061091d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106da5760405162461bcd60e51b815260040180806020018281038252602581526020018061098d6025913960400191505060405180910390fd5b6001600160a01b03821661071f5760405162461bcd60e51b81526004018080602001828103825260238152602001806108fa6023913960400191505060405180910390fd5b61072a8383836108f4565b61076d8160405180606001604052806026815260200161093f602691396001600160a01b038616600090815260208190526040902054919063ffffffff6107fc16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107a2908263ffffffff61089316565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561088b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610850578181015183820152602001610838565b50505050905090810190601f16801561087d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ed576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206eabd4640788eb9a56835b112f8d5425372d835a1dc82c4b4c301d6e7cbee69964736f6c6343000605003345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x2432B636102A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x12115313 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x60 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x362 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x76 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x362 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0xB5 ADDRESS PUSH3 0x9E PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0xE3 AND JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH3 0xF4240 MUL PUSH3 0xED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xDD ADDRESS CALLER PUSH3 0xCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x205 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x20B AND JUMP JUMPDEST PUSH3 0x404 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x149 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x160 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x2FB AND JUMP JUMPDEST PUSH3 0x17C DUP2 PUSH1 0x2 SLOAD PUSH3 0x300 PUSH1 0x20 SHL PUSH3 0x893 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x1AF SWAP2 DUP4 SWAP1 PUSH3 0x893 PUSH3 0x300 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x252 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0xE66 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0xE44 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x35B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3D5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3D5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3D5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3B8 JUMP JUMPDEST POP PUSH3 0x3E3 SWAP3 SWAP2 POP PUSH3 0x3E7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0xEA SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3E3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3EE JUMP JUMPDEST PUSH2 0xA30 DUP1 PUSH3 0x414 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24B JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47C JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x566 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x57A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x348 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x37C PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F DUP5 DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH2 0x415 DUP5 PUSH2 0x3AB PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x965 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3E9 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x435 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x446 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x505 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x52F PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x573 PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x91D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x98D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8FA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72A DUP4 DUP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7A2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x838 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x87D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212206EAB 0xD4 PUSH5 0x788EB9A56 DUP4 JUMPDEST GT 0x2F DUP14 SLOAD 0x25 CALLDATACOPY 0x2D DUP4 GAS SAR 0xC8 0x2C 0x4B 0x4C ADDRESS SAR PUSH15 0x7CBEE69964736F6C63430006050033 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 ",
							"sourceMap": "442:307:0:-:0;;;562:185;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;1958:145:2;;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;2032:13;;1958:145;;;2032:13;;:5;;:13;:::i;:::-;-1:-1:-1;2055:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:2;:14;;-1:-1:-1;;2082:14:2;2094:2;2082:14;;;-1:-1:-1;621:59:0::1;635:4;667:10;-1:-1:-1::0;;;;;667:8:0::1;:10:::0;:::i:1;:::-;659:19;;653:2;:25;642:7;:37;621:5;;;:59;;:::i;:::-;690:50;707:4;714:10;726:13;-1:-1:-1::0;;;;;726:11:0::1;:13:::0;:::i:1;:::-;-1:-1:-1::0;;;;;690:8:0::1;:50:::0;:::i:1;:::-;442:307:::0;;3086:89:2;3159:9;;;;3086:89;;:::o;7832:370::-;-1:-1:-1;;;;;7915:21:2;;7907:65;;;;;-1:-1:-1;;;7907:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;-1:-1:-1;;;;;7983:20:2;:49;:::i;:::-;8058:24;8075:6;8058:12;;:16;;;;;;:24;;;;:::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:2;;:9;:18;;;;;;;;;;;;:30;;8136:6;;8113:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8092:18:2;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;3235:106::-;3322:12;;3235:106;:::o;9355:340::-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;10701:92::-;;;;:::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;442:307:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:307:0;;;-1:-1:-1;442:307:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610253578063a9059cbb1461027f578063dd62ed3e146102ab576100c9565b806339509351146101f957806370a082311461022557806395d89b411461024b576100c9565b806318160ddd116100b257806318160ddd1461018b57806323b872dd146101a5578063313ce567146101db576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d66102d9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776004803603604081101561016157600080fd5b506001600160a01b03813516906020013561036f565b604080519115158252519081900360200190f35b61019361038c565b60408051918252519081900360200190f35b610177600480360360608110156101bb57600080fd5b506001600160a01b03813581169160208101359091169060400135610392565b6101e361041f565b6040805160ff9092168252519081900360200190f35b6101776004803603604081101561020f57600080fd5b506001600160a01b038135169060200135610428565b6101936004803603602081101561023b57600080fd5b50356001600160a01b031661047c565b6100d6610497565b6101776004803603604081101561026957600080fd5b506001600160a01b0381351690602001356104f8565b6101776004803603604081101561029557600080fd5b506001600160a01b038135169060200135610566565b610193600480360360408110156102c157600080fd5b506001600160a01b038135811691602001351661057a565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050905090565b600061038361037c6105a5565b84846105a9565b50600192915050565b60025490565b600061039f848484610695565b610415846103ab6105a5565b61041085604051806060016040528060288152602001610965602891396001600160a01b038a166000908152600160205260408120906103e96105a5565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6107fc16565b6105a9565b5060019392505050565b60055460ff1690565b60006103836104356105a5565b8461041085600160006104466105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61089316565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b60006103836105056105a5565b84610410856040518060600160405280602581526020016109d6602591396001600061052f6105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107fc16565b60006103836105736105a5565b8484610695565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105ee5760405162461bcd60e51b81526004018080602001828103825260248152602001806109b26024913960400191505060405180910390fd5b6001600160a01b0382166106335760405162461bcd60e51b815260040180806020018281038252602281526020018061091d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106da5760405162461bcd60e51b815260040180806020018281038252602581526020018061098d6025913960400191505060405180910390fd5b6001600160a01b03821661071f5760405162461bcd60e51b81526004018080602001828103825260238152602001806108fa6023913960400191505060405180910390fd5b61072a8383836108f4565b61076d8160405180606001604052806026815260200161093f602691396001600160a01b038616600090815260208190526040902054919063ffffffff6107fc16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107a2908263ffffffff61089316565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561088b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610850578181015183820152602001610838565b50505050905090810190601f16801561087d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ed576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206eabd4640788eb9a56835b112f8d5425372d835a1dc82c4b4c301d6e7cbee69964736f6c63430006050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24B JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47C JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x566 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x57A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x348 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x37C PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F DUP5 DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH2 0x415 DUP5 PUSH2 0x3AB PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x965 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3E9 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x435 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x446 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x505 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x52F PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x573 PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x91D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x98D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8FA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72A DUP4 DUP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7A2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x838 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x87D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212206EAB 0xD4 PUSH5 0x788EB9A56 DUP4 JUMPDEST GT 0x2F DUP14 SLOAD 0x25 CALLDATACOPY 0x2D DUP4 GAS SAR 0xC8 0x2C 0x4B 0x4C ADDRESS SAR PUSH15 0x7CBEE69964736F6C63430006050033 ",
							"sourceMap": "442:307:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;442:307:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2168:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4244:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;4877:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4877:317:2;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5589:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5589:215:2;;;;;;;;:::i;3399:125::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3399:125:2;-1:-1:-1;;;;;3399:125:2;;:::i;2370:93::-;;;:::i;6291:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6291:266:2;;;;;;;;:::i;3727:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3727:172:2;;;;;;;;:::i;3957:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3957:149:2;;;;;;;;;;:::i;2168:89::-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:2;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:2;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:2;;;;;;;;;;;;-1:-1:-1;5076:33:2;;;:89;;:37;:89;:::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:2;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:2;;;:34;;;;;;;;;;;:50;:38;:50;:::i;3399:125::-;-1:-1:-1;;;;;3499:18:2;3473:7;3499:18;;;;;;;;;;;;3399:125::o;2370:93::-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;6291:266;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:2;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:2;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;598:104:4:-;685:10;598:104;:::o;9355:340:2:-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:2;;7128:70;;;;-1:-1:-1;;;7128:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:2;;7208:71;;;;-1:-1:-1;;;7208:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:2;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7348:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7449:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;10701:92:2:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "521600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1190",
								"decimals()": "1080",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1021",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 562,
									"end": 747,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2432B636102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "12115313"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 621,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 635,
									"end": 639,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 667,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 667,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 667,
									"end": 677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 667,
									"end": 677,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 667,
									"end": 677,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 667,
									"end": 677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 659,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 659,
									"end": 678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 653,
									"end": 655,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 653,
									"end": 678,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 642,
									"end": 649,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 642,
									"end": 679,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 621,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 621,
									"end": 680,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 680,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 621,
									"end": 680,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 621,
									"end": 680,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 621,
									"end": 680,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 707,
									"end": 711,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 714,
									"end": 724,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 726,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 726,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 726,
									"end": 739,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 690,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 8012,
									"end": 8013,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8016,
									"end": 8023,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8025,
									"end": 8031,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 8075,
									"end": 8081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8070,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8058,
									"end": 8070,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551694"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8055,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8136,
									"end": 8142,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8136,
									"end": 8142,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551694"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8101,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8101,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8101,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3322,
									"end": 3334,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3322,
									"end": 3334,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 9355,
									"end": 9695,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 9355,
									"end": 9695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9456,
									"end": 9475,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9456,
									"end": 9475,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH data",
									"source": 2,
									"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9448,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9534,
									"end": 9555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9534,
									"end": 9555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH data",
									"source": 2,
									"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9526,
									"end": 9594,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9616,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9623,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9632,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9641,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9641,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9605,
									"end": 9641,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "PUSH",
									"source": 2,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9656,
									"end": 9688,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 9355,
									"end": 9695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9355,
									"end": 9695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9355,
									"end": 9695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9355,
									"end": 9695,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2779,
									"end": 2784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2784,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "1B"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 2858,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 442,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 749,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206eabd4640788eb9a56835b112f8d5425372d835a1dc82c4b4c301d6e7cbee69964736f6c63430006050033",
									".code": [
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 442,
											"end": 749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 2,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 2,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 2,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 2,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								},
								"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
								"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions. Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"SimpleToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/hellToken.sol\":\"HellToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/hellToken.sol\":{\"keccak256\":\"0xd2573bf74a08aa6c13b17bd4d2b1ec561c2211fdd2d0dbd63fe61a7abdafcefa\",\"urls\":[\"bzz-raw://042a9c91b241d9262971068a94136e6fdb3cae486333fabdf4f3598889b9a8e7\",\"dweb:/ipfs/QmV2WVtmDMDYMEtQ3CGsPa2qRQEMBVa8KJQWxMbEn54nKe\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "contracts/hellToken.sol:HellToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "contracts/hellToken.sol:HellToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "contracts/hellToken.sol:HellToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "contracts/hellToken.sol:HellToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "contracts/hellToken.sol:HellToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "contracts/hellToken.sol:HellToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220d9857a570890c37029e7165256b65d0a767d772bd94b595c328fec986199502464736f6c63430006050033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9857a570890c37029e7165256b65d0a767d772bd94b595c328fec986199502464736f6c63430006050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 DUP6 PUSH27 0x570890C37029E7165256B65D0A767D772BD94B595C328FEC986199 POP 0x24 PUSH5 0x736F6C6343 STOP MOD SDIV STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9857a570890c37029e7165256b65d0a767d772bd94b595c328fec986199502464736f6c63430006050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 DUP6 PUSH27 0x570890C37029E7165256B65D0A767D772BD94B595C328FEC986199 POP 0x24 PUSH5 0x736F6C6343 STOP MOD SDIV STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9857a570890c37029e7165256b65d0a767d772bd94b595c328fec986199502464736f6c63430006050033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x40\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":62:83   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup3\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup6\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":213:223   */\n  dup3\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup9\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":372:397   */\n  dup3\n  mstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  dup2\n  mload\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":411:425   */\n  swap2\n  dup3\n  add\n  swap3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n    /* \"--CODEGEN--\":411:425   */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":90:101   */\n  dup2\n  dup2\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n  dup3\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":62:83   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup3\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup6\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":213:223   */\n  dup3\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup9\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":372:397   */\n  dup3\n  mstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  dup2\n  mload\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":411:425   */\n  swap2\n  dup3\n  add\n  swap3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n    /* \"--CODEGEN--\":411:425   */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":90:101   */\n  dup2\n  dup2\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n  dup3\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  tag_29\n  swap2\n  swap1\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_30)\ntag_29:\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_19:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_19)\n    tag_21:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_22:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_24:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_25\n      jump\t// in\n    tag_23:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_30\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_37:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_38\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_40\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_49:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_50\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_53\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_18:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      swap1\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup4\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup3\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_56\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_55)\n    tag_56:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_57:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_57\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_62\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_59:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_66\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_67\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_68\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_70\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_69:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_62\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_67:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_32:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      and(0xff, sload(0x05))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_35:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_75\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_77\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_40:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      swap1\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup4\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_56\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_55)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_86\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_69\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_88\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_50:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_59\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_66\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_100\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_101\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_100:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup7\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_103\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      swap2\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_106:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_106)\n    tag_108:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_109:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      swap1\n      sub\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_111\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_101:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212204b3bd7230f511626c3f4f347318eb9447d4329347a481aa41aec7755864b88fb64736f6c63430006050033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000cc538038062000cc5833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250508251620001b491506003906020850190620001e0565b508051620001ca906004906020840190620001e0565b50506005805460ff191660121790555062000285565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022357805160ff191683800117855562000253565b8280016001018555821562000253579182015b828111156200025357825182559160200191906001019062000236565b506200026192915062000265565b5090565b6200028291905b808211156200026157600081556001016200026c565b90565b610a3080620002956000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610253578063a9059cbb1461027f578063dd62ed3e146102ab576100c9565b806339509351146101f957806370a082311461022557806395d89b411461024b576100c9565b806318160ddd116100b257806318160ddd1461018b57806323b872dd146101a5578063313ce567146101db576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d66102d9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776004803603604081101561016157600080fd5b506001600160a01b03813516906020013561036f565b604080519115158252519081900360200190f35b61019361038c565b60408051918252519081900360200190f35b610177600480360360608110156101bb57600080fd5b506001600160a01b03813581169160208101359091169060400135610392565b6101e361041f565b6040805160ff9092168252519081900360200190f35b6101776004803603604081101561020f57600080fd5b506001600160a01b038135169060200135610428565b6101936004803603602081101561023b57600080fd5b50356001600160a01b031661047c565b6100d6610497565b6101776004803603604081101561026957600080fd5b506001600160a01b0381351690602001356104f8565b6101776004803603604081101561029557600080fd5b506001600160a01b038135169060200135610566565b610193600480360360408110156102c157600080fd5b506001600160a01b038135811691602001351661057a565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050905090565b600061038361037c6105a5565b84846105a9565b50600192915050565b60025490565b600061039f848484610695565b610415846103ab6105a5565b61041085604051806060016040528060288152602001610965602891396001600160a01b038a166000908152600160205260408120906103e96105a5565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6107fc16565b6105a9565b5060019392505050565b60055460ff1690565b60006103836104356105a5565b8461041085600160006104466105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61089316565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b60006103836105056105a5565b84610410856040518060600160405280602581526020016109d6602591396001600061052f6105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107fc16565b60006103836105736105a5565b8484610695565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105ee5760405162461bcd60e51b81526004018080602001828103825260248152602001806109b26024913960400191505060405180910390fd5b6001600160a01b0382166106335760405162461bcd60e51b815260040180806020018281038252602281526020018061091d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106da5760405162461bcd60e51b815260040180806020018281038252602581526020018061098d6025913960400191505060405180910390fd5b6001600160a01b03821661071f5760405162461bcd60e51b81526004018080602001828103825260238152602001806108fa6023913960400191505060405180910390fd5b61072a8383836108f4565b61076d8160405180606001604052806026815260200161093f602691396001600160a01b038616600090815260208190526040902054919063ffffffff6107fc16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107a2908263ffffffff61089316565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561088b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610850578181015183820152602001610838565b50505050905090810190601f16801561087d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ed576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204b3bd7230f511626c3f4f347318eb9447d4329347a481aa41aec7755864b88fb64736f6c63430006050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC5 CODESIZE SUB DUP1 PUSH3 0xCC5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH3 0x1B4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x285 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x223 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x253 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x253 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x253 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x236 JUMP JUMPDEST POP PUSH3 0x261 SWAP3 SWAP2 POP PUSH3 0x265 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x282 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x261 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x26C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA30 DUP1 PUSH3 0x295 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24B JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47C JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x566 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x57A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x348 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x37C PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F DUP5 DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH2 0x415 DUP5 PUSH2 0x3AB PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x965 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3E9 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x435 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x446 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x505 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x52F PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x573 PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x91D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x98D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8FA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72A DUP4 DUP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7A2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x838 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x87D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204B3B 0xD7 0x23 0xF MLOAD AND 0x26 0xC3 DELEGATECALL RETURN SELFBALANCE BALANCE DUP15 0xB9 DIFFICULTY PUSH30 0x4329347A481AA41AEC7755864B88FB64736F6C6343000605003300000000 ",
							"sourceMap": "1321:9474:2:-:0;;;1958:145;5:9:-1;2:2;;;27:1;24;17:12;2:2;1958:145:2;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1958:145:2;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1958:145:2;;420:4:-1;411:14;;;;1958:145:2;;;;;411:14:-1;1958:145:2;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1958:145:2;;420:4:-1;411:14;;;;1958:145:2;;;;;411:14:-1;1958:145:2;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1958:145:2;;-1:-1:-1;;2032:13:2;;;;-1:-1:-1;2032:5:2;;:13;;;;;:::i;:::-;-1:-1:-1;2055:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:2;:14;;-1:-1:-1;;2082:14:2;2094:2;2082:14;;;-1:-1:-1;1321:9474:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:9474:2;;;-1:-1:-1;1321:9474:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610253578063a9059cbb1461027f578063dd62ed3e146102ab576100c9565b806339509351146101f957806370a082311461022557806395d89b411461024b576100c9565b806318160ddd116100b257806318160ddd1461018b57806323b872dd146101a5578063313ce567146101db576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d66102d9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776004803603604081101561016157600080fd5b506001600160a01b03813516906020013561036f565b604080519115158252519081900360200190f35b61019361038c565b60408051918252519081900360200190f35b610177600480360360608110156101bb57600080fd5b506001600160a01b03813581169160208101359091169060400135610392565b6101e361041f565b6040805160ff9092168252519081900360200190f35b6101776004803603604081101561020f57600080fd5b506001600160a01b038135169060200135610428565b6101936004803603602081101561023b57600080fd5b50356001600160a01b031661047c565b6100d6610497565b6101776004803603604081101561026957600080fd5b506001600160a01b0381351690602001356104f8565b6101776004803603604081101561029557600080fd5b506001600160a01b038135169060200135610566565b610193600480360360408110156102c157600080fd5b506001600160a01b038135811691602001351661057a565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050905090565b600061038361037c6105a5565b84846105a9565b50600192915050565b60025490565b600061039f848484610695565b610415846103ab6105a5565b61041085604051806060016040528060288152602001610965602891396001600160a01b038a166000908152600160205260408120906103e96105a5565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6107fc16565b6105a9565b5060019392505050565b60055460ff1690565b60006103836104356105a5565b8461041085600160006104466105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61089316565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103655780601f1061033a57610100808354040283529160200191610365565b60006103836105056105a5565b84610410856040518060600160405280602581526020016109d6602591396001600061052f6105a5565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107fc16565b60006103836105736105a5565b8484610695565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105ee5760405162461bcd60e51b81526004018080602001828103825260248152602001806109b26024913960400191505060405180910390fd5b6001600160a01b0382166106335760405162461bcd60e51b815260040180806020018281038252602281526020018061091d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106da5760405162461bcd60e51b815260040180806020018281038252602581526020018061098d6025913960400191505060405180910390fd5b6001600160a01b03821661071f5760405162461bcd60e51b81526004018080602001828103825260238152602001806108fa6023913960400191505060405180910390fd5b61072a8383836108f4565b61076d8160405180606001604052806026815260200161093f602691396001600160a01b038616600090815260208190526040902054919063ffffffff6107fc16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107a2908263ffffffff61089316565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561088b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610850578181015183820152602001610838565b50505050905090810190601f16801561087d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ed576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204b3bd7230f511626c3f4f347318eb9447d4329347a481aa41aec7755864b88fb64736f6c63430006050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24B JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47C JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x566 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x57A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x348 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x37C PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F DUP5 DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH2 0x415 DUP5 PUSH2 0x3AB PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x965 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3E9 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x435 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x446 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x505 PUSH2 0x5A5 JUMP JUMPDEST DUP5 PUSH2 0x410 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x52F PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x573 PUSH2 0x5A5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x91D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x98D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8FA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72A DUP4 DUP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7FC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7A2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x893 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x838 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x87D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204B3B 0xD7 0x23 0xF MLOAD AND 0x26 0xC3 DELEGATECALL RETURN SELFBALANCE BALANCE DUP15 0xB9 DIFFICULTY PUSH30 0x4329347A481AA41AEC7755864B88FB64736F6C6343000605003300000000 ",
							"sourceMap": "1321:9474:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1321:9474:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2168:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4244:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;4877:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4877:317:2;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5589:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5589:215:2;;;;;;;;:::i;3399:125::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3399:125:2;-1:-1:-1;;;;;3399:125:2;;:::i;2370:93::-;;;:::i;6291:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6291:266:2;;;;;;;;:::i;3727:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3727:172:2;;;;;;;;:::i;3957:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3957:149:2;;;;;;;;;;:::i;2168:89::-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:2;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:2;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:2;;;;;;;;;;;;-1:-1:-1;5076:33:2;;;:89;;:37;:89;:::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:2;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:2;;;:34;;;;;;;;;;;:50;:38;:50;:::i;3399:125::-;-1:-1:-1;;;;;3499:18:2;3473:7;3499:18;;;;;;;;;;;;3399:125::o;2370:93::-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;6291:266;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:2;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:2;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;598:104:4:-;685:10;598:104;:::o;9355:340:2:-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:2;;7128:70;;;;-1:-1:-1;;;7128:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:2;;7208:71;;;;-1:-1:-1;;;7208:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:2;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7348:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7449:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;10701:92:2:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "521600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1190",
								"decimals()": "1080",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1021",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "DUP9",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "DUP9",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b3bd7230f511626c3f4f347318eb9447d4329347a481aa41aec7755864b88fb64736f6c63430006050033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 2,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 2,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 2,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 2,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/hellToken.sol": {
				"ast": {
					"absolutePath": "contracts/hellToken.sol",
					"exportedSymbols": {
						"HellToken": [
							43
						]
					},
					"id": 44,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 44,
							"sourceUnit": 902,
							"src": "25:71:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 901,
										"src": "464:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$901",
											"typeString": "contract ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "464:5:0"
								}
							],
							"contractDependencies": [
								901,
								979,
								1002
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "98:343:0",
								"text": "@title SimpleToken\n@dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`ERC20` functions.\nBased on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol"
							},
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43,
								901,
								979,
								1002
							],
							"name": "HellToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "611:136:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 16,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "635:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_HellToken_$43",
																		"typeString": "contract HellToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_HellToken_$43",
																		"typeString": "contract HellToken"
																	}
																],
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "627:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 14,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "31303030303030",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "642:7:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "3130",
																			"id": 19,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "653:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 22,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "667:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 23,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "667:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 21,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "659:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 20,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "659:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 24,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "659:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "653:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 26,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "652:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "642:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 13,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "621:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "621:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "621:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 33,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "707:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_HellToken_$43",
																		"typeString": "contract HellToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_HellToken_$43",
																		"typeString": "contract HellToken"
																	}
																],
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 31,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "699:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 35,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "714:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "714:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 37,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "726:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "726:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 30,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "690:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "690:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "690:50:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "476:81:0",
										"text": "@dev Constructor that gives msg.sender all of existing tokens."
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "48656c6c20546f6b656e",
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "589:12:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_abe4632c76df5f6d8339cfff5aa66b5accde4a2ece8a2dcee68988036d1ff3d7",
														"typeString": "literal_string \"Hell Token\""
													},
													"value": "Hell Token"
												},
												{
													"argumentTypes": null,
													"hexValue": "48454c4c",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "603:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4aa7aad171e412a987ede1c19fed2eeda893917809a9ce17846a9ed5c94a00a3",
														"typeString": "literal_string \"HELL\""
													},
													"value": "HELL"
												}
											],
											"id": 11,
											"modifierName": {
												"argumentTypes": null,
												"id": 8,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 901,
												"src": "583:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$901_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "583:27:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 43,
									"src": "562:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "442:307:0"
						}
					],
					"src": "0:749:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							398
						]
					},
					"id": 399,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 45,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 46,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:1",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 76,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 71,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 69,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 57,
													"id": 70,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 73,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 74,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 57,
												"id": 75,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:1",
										"text": "@dev Returns the addition of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 53,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 398,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 96,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 94,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 88,
													"id": 95,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 101,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 88,
												"id": 102,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:1",
										"text": "@dev Returns the substraction of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 104,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 104,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 104,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 104,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 398,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 116,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 123,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 121,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 115,
													"id": 122,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 144,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 130,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 131,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 139,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 137,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 115,
													"id": 138,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 142,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 115,
												"id": 143,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:1",
										"text": "@dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 398,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 164,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 162,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 156,
													"id": 163,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 169,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 156,
												"id": 170,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:1",
										"text": "@dev Returns the division of two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._"
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 172,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 172,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 172,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 172,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 398,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 184,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 191,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 189,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 183,
													"id": 190,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 196,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 183,
												"id": 197,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 398,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 224,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 211,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 212,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 217,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 210,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 223,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:1",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow."
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 225,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 225,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 225,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 398,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 236,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 242,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 243,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 245,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 398,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 257,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 262,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 256,
													"id": 261,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 280,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 265,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 270,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 271,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 273,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 278,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 279,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:1",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 398,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 292,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 298,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 299,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 290,
												"id": 301,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:1",
										"text": "@dev Returns the integer division of two unsigned integers, reverting on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 303,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 303,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 303,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 398,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 314,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 323,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 398,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 341,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 347,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {trySub}.\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 398,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 365,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 368,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 371,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:1",
										"text": "@dev Returns the integer division of two unsigned integers, reverting with custom message on\ndivision by zero. The result is rounded towards zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryDiv}.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 398,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 386,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 392,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 393,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 384,
												"id": 395,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting with custom message when dividing by zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryMod}.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 379,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 398,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 399,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							901
						]
					},
					"id": 902,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 401,
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 1003,
							"src": "66:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 402,
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 980,
							"src": "100:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 403,
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 399,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1002,
										"src": "1339:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1002",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 979,
										"src": "1348:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$979",
											"typeString": "contract IERC20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:2"
								}
							],
							"contractDependencies": [
								979,
								1002
							],
							"contractKind": "contract",
							"documentation": {
								"id": 404,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:2",
								"text": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20PresetMinterPauser}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 901,
							"linearizedBaseContracts": [
								901,
								979,
								1002
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 411,
									"libraryName": {
										"contractScope": null,
										"id": 409,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 398,
										"src": "1367:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$398",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:2",
									"typeName": {
										"id": 410,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 415,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 901,
									"src": "1394:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 901,
									"src": "1447:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 419,
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 901,
									"src": "1523:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 901,
									"src": "1558:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 901,
									"src": "1584:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 901,
									"src": "1612:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 428,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "2022:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 437,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "2032:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 441,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2055:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "2065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 445,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "2082:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:2",
										"text": "@dev Sets the values for {name} and {symbol}, initializes {decimals} with\na default value of 18.\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     * All three of these values are immutable: they can only be set once during\nconstruction."
									},
									"id": 450,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 450,
												"src": "1971:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 450,
												"src": "1992:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:2"
									},
									"scope": 901,
									"src": "1958:145:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2228:29:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 456,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "2245:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 455,
												"id": 457,
												"nodeType": "Return",
												"src": "2238:12:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:2",
										"text": "@dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "2213:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:2"
									},
									"scope": 901,
									"src": "2168:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2432:31:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 465,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 464,
												"id": 466,
												"nodeType": "Return",
												"src": "2442:14:2"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:2",
										"text": "@dev Returns the symbol of the token, usually a shorter version of the\nname."
									},
									"functionSelector": "95d89b41",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "2417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:2"
									},
									"scope": 901,
									"src": "2370:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "3142:33:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 474,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "3159:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 473,
												"id": 475,
												"nodeType": "Return",
												"src": "3152:16:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:2",
										"text": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\ncalled.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:2"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "3135:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 471,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:2"
									},
									"scope": 901,
									"src": "3086:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										910
									],
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3305:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 484,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "3322:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 485,
												"nodeType": "Return",
												"src": "3315:19:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:2",
										"text": "@dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 480,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:2"
									},
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "3296:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:2"
									},
									"scope": 901,
									"src": "3235:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										918
									],
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "3482:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 496,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3499:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 498,
													"indexExpression": {
														"argumentTypes": null,
														"id": 497,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "3509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 495,
												"id": 499,
												"nodeType": "Return",
												"src": "3492:25:2"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:2",
										"text": "@dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:2"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "3418:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "3473:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:2"
									},
									"scope": 901,
									"src": "3399:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										928
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3819:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 513,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "3839:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 515,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3853:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "3829:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 511,
												"id": 520,
												"nodeType": "Return",
												"src": "3881:11:2"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:2",
										"text": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:2"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 522,
												"src": "3745:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 522,
												"src": "3764:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 522,
												"src": "3813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:2"
									},
									"scope": 901,
									"src": "3727:172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										938
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4055:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 533,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4072:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 535,
														"indexExpression": {
															"argumentTypes": null,
															"id": 534,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4084:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 537,
													"indexExpression": {
														"argumentTypes": null,
														"id": 536,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "4091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 532,
												"id": 538,
												"nodeType": "Return",
												"src": "4065:34:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:2",
										"text": "@dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 529,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:2"
									},
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "3976:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "3991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "4046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:2"
									},
									"scope": 901,
									"src": "3957:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4333:77:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 552,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "4352:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 554,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4366:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 555,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4375:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 551,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "4343:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 550,
												"id": 559,
												"nodeType": "Return",
												"src": "4392:11:2"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:2",
										"text": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 547,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:2"
									},
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4261:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4278:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4327:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:2"
									},
									"scope": 901,
									"src": "4244:166:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										960
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "4989:205:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 575,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5009:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 576,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5017:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5028:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "4999:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 581,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5054:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 582,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "5062:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 591,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "5114:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 584,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "5076:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 586,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 585,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "5088:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 589,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 587,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "5096:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 349,
																"src": "5076:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5045:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 573,
												"id": 597,
												"nodeType": "Return",
												"src": "5176:11:2"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:2",
										"text": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20}.\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for ``sender``'s tokens of at least\n`amount`."
									},
									"functionSelector": "23b872dd",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 570,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:2"
									},
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "4899:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "4915:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "4934:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:2"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "4983:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:2"
									},
									"scope": 901,
									"src": "4877:317:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5683:121:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 610,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "5702:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 612,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "5716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 620,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "5764:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 613,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "5725:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 616,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 614,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "5737:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 618,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 617,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "5751:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 225,
																"src": "5725:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5693:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 625,
												"nodeType": "Return",
												"src": "5786:11:2"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:2",
										"text": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5616:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5633:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:2"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "5677:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:2"
									},
									"scope": 901,
									"src": "5589:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "6390:167:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 638,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "6409:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 640,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "6423:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 648,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6471:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 641,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "6432:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 644,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 642,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "6444:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 646,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 645,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "6458:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 349,
																"src": "6432:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 636,
												"id": 654,
												"nodeType": "Return",
												"src": "6539:11:2"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:2",
										"text": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "6318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "6335:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "6384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:2"
									},
									"scope": 901,
									"src": "6291:266:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "7118:443:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 667,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 677,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "7216:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 678,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 687,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "7311:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 688,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "7319:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7330:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "7290:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 692,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7348:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 694,
														"indexExpression": {
															"argumentTypes": null,
															"id": 693,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "7358:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 699,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "7390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 695,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7368:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 697,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 696,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7378:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 349,
															"src": "7368:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 704,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7449:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 706,
														"indexExpression": {
															"argumentTypes": null,
															"id": 705,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "7459:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 711,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "7497:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 707,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7472:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 709,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 708,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7482:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 225,
															"src": "7472:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 716,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "7528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 717,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "7536:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 718,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7547:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "7519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "EmitStatement",
												"src": "7514:40:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:2",
										"text": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "7050:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "7066:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "7085:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:2"
									},
									"scope": 901,
									"src": "7031:530:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "7897:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 731,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "7915:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 732,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 745,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "8016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 746,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "8025:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "7983:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 749,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "8043:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 752,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "8075:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 750,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "8058:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 225,
															"src": "8058:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 756,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "8092:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 758,
														"indexExpression": {
															"argumentTypes": null,
															"id": 757,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "8102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 763,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "8136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 759,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "8113:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 761,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 760,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "8123:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 225,
															"src": "8113:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 772,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "8179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 773,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "8188:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "8158:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "8153:42:2"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements:\n     * - `to` cannot be the zero address."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "7847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "7864:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:2"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:2"
									},
									"scope": 901,
									"src": "7832:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "8587:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 786,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "8605:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 787,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 796,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "8696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 797,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 801,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8717:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 795,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "8675:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 804,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "8735:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 806,
														"indexExpression": {
															"argumentTypes": null,
															"id": 805,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "8745:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 811,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "8779:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 807,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "8756:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 808,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "8766:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 349,
															"src": "8756:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 816,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "8834:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 819,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "8866:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 817,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "8849:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 247,
															"src": "8849:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 824,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "8897:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 825,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 829,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8918:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "8888:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "EmitStatement",
												"src": "8883:42:2"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:2",
										"text": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements:\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens."
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "8537:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "8554:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:2"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:2"
									},
									"scope": 901,
									"src": "8522:410:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "9438:257:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 844,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "9456:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 845,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "9534:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 855,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 863,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "9605:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 866,
															"indexExpression": {
																"argumentTypes": null,
																"id": 864,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "9617:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 867,
														"indexExpression": {
															"argumentTypes": null,
															"id": 865,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "9624:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 868,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9635:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 872,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "9665:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "9672:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 874,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "9656:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "EmitStatement",
												"src": "9651:37:2"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:2",
										"text": "@dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     * This internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "9373:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "9388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "9405:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:2"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:2"
									},
									"scope": 901,
									"src": "9355:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "10076:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 884,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "10086:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 885,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "10098:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:2"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:2",
										"text": "@dev Sets {decimals} to a value other than the default one of 18.\n     * WARNING: This function should only be called from the constructor. Most\napplications that interact with token contracts will not expect\n{decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 889,
												"src": "10042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 880,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:2"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:2"
									},
									"scope": 901,
									"src": "10018:96:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10790:3:2",
										"statements": []
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:2",
										"text": "@dev Hook that is called before any transfer of tokens. This includes\nminting and burning.\n     * Calling conditions:\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nwill be to transferred to `to`.\n- when `from` is zero, `amount` tokens will be minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens will be burned.\n- `from` and `to` are never both zero.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "10731:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "10745:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "10757:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:2"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:2"
									},
									"scope": 901,
									"src": "10701:92:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 902,
							"src": "1321:9474:2"
						}
					],
					"src": "33:10763:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							979
						]
					},
					"id": 980,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 903,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 904,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": "@dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 910,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 979,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": "@dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 979,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 928,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 928,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 928,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 979,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 938,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 938,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 938,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 979,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 979,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 979,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero."
									},
									"id": 969,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance."
									},
									"id": 978,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 980,
							"src": "137:2566:3"
						}
					],
					"src": "33:2671:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1002
						]
					},
					"id": 1003,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "668:34:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 986,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 985,
												"id": 988,
												"nodeType": "Return",
												"src": "678:17:4"
											}
										]
									},
									"documentation": null,
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 990,
												"src": "651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:4"
									},
									"scope": 1002,
									"src": "598:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "773:165:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 995,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1002",
														"typeString": "contract Context"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "783:4:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 997,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 994,
												"id": 999,
												"nodeType": "Return",
												"src": "916:15:4"
											}
										]
									},
									"documentation": null,
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:4"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "759:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:4"
									},
									"scope": 1002,
									"src": "708:230:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1003,
							"src": "566:374:4"
						}
					],
					"src": "33:908:4"
				},
				"id": 4
			}
		}
	}
}