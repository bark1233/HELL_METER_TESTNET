{
	"id": "f06ff37fc5d7b3787d531c3ccc33fd84",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BasicPriceOracle.sol": {
				"content": "pragma solidity ^0.6.5;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"./interfaces/IPriceOracle.sol\";\n\ncontract BasicPriceOracle is IPriceOracle, Initializable, AccessControlUpgradeable {\n    bytes32 public constant PRICE_UPDATER = keccak256(\"PRICE_UPDATER\");\n\n    bool private priceSet;\n    uint256 private currentPrice_;\n\n    function initialize() public initializer {\n        __AccessControl_init();\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(PRICE_UPDATER, _msgSender());\n\n        priceSet = false;\n        currentPrice_ = 0;\n    }\n\n    // Views\n    function currentPrice() external override view returns (uint256) {\n        require(priceSet, \"Price must be set beforehand\");\n        return currentPrice_;\n    }\n\n    // Mutative\n    function setCurrentPrice(uint256 _currentPrice) external override {\n        require(hasRole(PRICE_UPDATER, _msgSender()), \"Missing PRICE_UPDATER role\");\n        require(_currentPrice > 0, \"Price must be non-zero\");\n\n        priceSet = true;\n        currentPrice_ = _currentPrice;\n\n        emit CurrentPriceUpdated(_currentPrice);\n    }\n\n    // Events\n    event CurrentPriceUpdated(uint256 currentPrice);\n}\n"
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"content": "pragma solidity ^0.6.5;\n\ninterface IPriceOracle {\n    // Views\n    function currentPrice() external view returns (uint256 price);\n\n    // Mutative\n    function setCurrentPrice(uint256 price) external;\n\n    // Events\n    event CurrentPriceUpdated(uint256 price);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/EnumerableSetUpgradeable.sol\";\nimport \"../utils/AddressUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable {\n    function __AccessControl_init() internal initializer {\n        __Context_init_unchained();\n        __AccessControl_init_unchained();\n    }\n\n    function __AccessControl_init_unchained() internal initializer {\n    }\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n    using AddressUpgradeable for address;\n\n    struct RoleData {\n        EnumerableSetUpgradeable.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// solhint-disable-next-line compiler-version\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n */\nabstract contract Initializable {\n\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /// @dev Returns true if and only if the function is running in the constructor\n    function _isConstructor() private view returns (bool) {\n        return !AddressUpgradeable.isContract(address(this));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\nimport \"../proxy/Initializable.sol\";\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xa3c77c9ea6b47301c7ab5bf3addc1d809d13a27a179c4629a1b55308e8633d14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77a789173aa9454336023580d52fedfb2d5ef0a1ccb3040ba20f5aa56e300aef\",\"dweb:/ipfs/Qme3CQYH1AywEH1w3mDV3UT6NhMQmjspNnUA6V8yBg77Ac\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381\",\"dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 314,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 661,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)"
							},
							{
								"astId": 306,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)39_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)938_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSetUpgradeable.AddressSet",
								"members": [
									{
										"astId": 937,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)673_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)39_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 36,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)938_storage"
									},
									{
										"astId": 38,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)673_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSetUpgradeable.Set",
								"members": [
									{
										"astId": 668,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 672,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 314,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":134:6849  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":134:6849  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f5a7ef7b70a6866a64226e124d74a0bca07f1801f5d7a63f020065d3a94e57c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f5a7ef7b70a6866a64226e124d74a0bca07f1801f5d7a63f020065d3a94e57c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F GAS PUSH31 0xF7B70A6866A64226E124D74A0BCA07F1801F5D7A63F020065D3A94E57C6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "134:6715:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f5a7ef7b70a6866a64226e124d74a0bca07f1801f5d7a63f020065d3a94e57c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F GAS PUSH31 0xF7B70A6866A64226E124D74A0BCA07F1801F5D7A63F020065D3A94E57C6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "134:6715:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 134,
									"end": 6849,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f5a7ef7b70a6866a64226e124d74a0bca07f1801f5d7a63f020065d3a94e57c64736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 6849,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 6849,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 314,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 661,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol": {
				"EnumerableSetUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":753:9398  library EnumerableSetUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":753:9398  library EnumerableSetUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c73a78d41e55588e16c44b75627019eafc671d7696088fe0002fbcc8b2aa127564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c73a78d41e55588e16c44b75627019eafc671d7696088fe0002fbcc8b2aa127564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 GASPRICE PUSH25 0xD41E55588E16C44B75627019EAFC671D7696088FE0002FBCC8 0xB2 0xAA SLT PUSH22 0x64736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "753:8645:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c73a78d41e55588e16c44b75627019eafc671d7696088fe0002fbcc8b2aa127564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 GASPRICE PUSH25 0xD41E55588E16C44B75627019EAFC671D7696088FE0002FBCC8 0xB2 0xAA SLT PUSH22 0x64736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "753:8645:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSetUpgradeable.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSetUpgradeable.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSetUpgradeable.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSetUpgradeable.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 753,
									"end": 9398,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c73a78d41e55588e16c44b75627019eafc671d7696088fe0002fbcc8b2aa127564736f6c634300060c0033",
									".code": [
										{
											"begin": 753,
											"end": 9398,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 753,
											"end": 9398,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381\",\"dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BasicPriceOracle.sol": {
				"BasicPriceOracle": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentPrice",
									"type": "uint256"
								}
							],
							"name": "CurrentPriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE_UPDATER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_currentPrice",
									"type": "uint256"
								}
							],
							"name": "setCurrentPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BasicPriceOracle.sol\":218:1288  contract BasicPriceOracle is IPriceOracle, Initializable, AccessControlUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BasicPriceOracle.sol\":218:1288  contract BasicPriceOracle is IPriceOracle, Initializable, AccessControlUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9d1b464a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe1f84a36\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x18b20071\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BasicPriceOracle.sol\":883:1218  function setCurrentPrice(uint256 _currentPrice) external override {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4652:4764  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5014:5237  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6188:6393  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/BasicPriceOracle.sol\":443:681  function initialize() public initializer {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4335:4471  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3320:3457  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicPriceOracle.sol\":700:861  function currentPrice() external override view returns (uint256) {... */\n    tag_10:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2097:2146  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3625:3750  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_12:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5471:5697  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_13:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/BasicPriceOracle.sol\":307:373  bytes32 public constant PRICE_UPDATER = keccak256(\"PRICE_UPDATER\") */\n    tag_14:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicPriceOracle.sol\":883:1218  function setCurrentPrice(uint256 _currentPrice) external override {... */\n    tag_18:\n        /* \"contracts/BasicPriceOracle.sol\":967:1003  hasRole(PRICE_UPDATER, _msgSender()) */\n      tag_49\n        /* \"contracts/BasicPriceOracle.sol\":347:373  keccak256(\"PRICE_UPDATER\") */\n      0x74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804\n        /* \"contracts/BasicPriceOracle.sol\":990:1002  _msgSender() */\n      tag_50\n        /* \"contracts/BasicPriceOracle.sol\":990:1000  _msgSender */\n      tag_51\n        /* \"contracts/BasicPriceOracle.sol\":990:1002  _msgSender() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/BasicPriceOracle.sol\":967:974  hasRole */\n      tag_35\n        /* \"contracts/BasicPriceOracle.sol\":967:1003  hasRole(PRICE_UPDATER, _msgSender()) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/BasicPriceOracle.sol\":959:1034  require(hasRole(PRICE_UPDATER, _msgSender()), \"Missing PRICE_UPDATER role\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d697373696e672050524943455f5550444154455220726f6c65000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/BasicPriceOracle.sol\":1068:1069  0 */\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":1052:1065  _currentPrice */\n      dup2\n        /* \"contracts/BasicPriceOracle.sol\":1052:1069  _currentPrice > 0 */\n      gt\n        /* \"contracts/BasicPriceOracle.sol\":1044:1096  require(_currentPrice > 0, \"Price must be non-zero\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5072696365206d757374206265206e6f6e2d7a65726f00000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/BasicPriceOracle.sol\":1118:1122  true */\n      0x01\n        /* \"contracts/BasicPriceOracle.sol\":1107:1115  priceSet */\n      0x65\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":1107:1122  priceSet = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicPriceOracle.sol\":1148:1161  _currentPrice */\n      dup1\n        /* \"contracts/BasicPriceOracle.sol\":1132:1145  currentPrice_ */\n      0x66\n        /* \"contracts/BasicPriceOracle.sol\":1132:1161  currentPrice_ = _currentPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicPriceOracle.sol\":1177:1211  CurrentPriceUpdated(_currentPrice) */\n      0xcfebfed7291191489847e6abdd482d8816f6f32efecf69fc66c91631a2f217f9\n        /* \"contracts/BasicPriceOracle.sol\":1197:1210  _currentPrice */\n      dup2\n        /* \"contracts/BasicPriceOracle.sol\":1177:1211  CurrentPriceUpdated(_currentPrice) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BasicPriceOracle.sol\":883:1218  function setCurrentPrice(uint256 _currentPrice) external override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4652:4764  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4709:4716  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4735:4741  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4735:4747  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4742:4746  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4735:4747  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4735:4757  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4728:4757  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4652:4764  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5014:5237  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5097:5142  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_56\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5105:5111  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5105:5117  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5112:5116  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5105:5117  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5105:5127  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5129:5141  _msgSender() */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5129:5139  _msgSender */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5129:5141  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5097:5104  hasRole */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5097:5142  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5089:5194  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5205:5230  _grantRole(role, account) */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5216:5220  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5222:5229  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5205:5215  _grantRole */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5205:5230  _grantRole(role, account) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5014:5237  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6188:6393  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_27:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6285:6297  _msgSender() */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6285:6295  _msgSender */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6285:6297  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6274:6297  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6274:6281  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6274:6297  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6266:6349  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6360:6386  _revokeRole(role, account) */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6372:6376  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6378:6385  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6360:6371  _revokeRole */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6360:6386  _revokeRole(role, account) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6188:6393  function renounceRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicPriceOracle.sol\":443:681  function initialize() public initializer {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1525  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n      dup1\n      tag_67\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      tag_68\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1543  _isConstructor */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1550:1562  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1549:1562  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1504:1613  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1643  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1647:1660  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1646:1660  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1660  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1674:1688  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1720:1724  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1717  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1724  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1753:1757  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1750  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1757  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n    tag_72:\n        /* \"contracts/BasicPriceOracle.sol\":494:516  __AccessControl_init() */\n      tag_74\n        /* \"contracts/BasicPriceOracle.sol\":494:514  __AccessControl_init */\n      tag_75\n        /* \"contracts/BasicPriceOracle.sol\":494:516  __AccessControl_init() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/BasicPriceOracle.sol\":527:571  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2142:2146  0x00 */\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":538:556  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/BasicPriceOracle.sol\":558:570  _msgSender() */\n      tag_77\n        /* \"contracts/BasicPriceOracle.sol\":558:568  _msgSender */\n      tag_51\n        /* \"contracts/BasicPriceOracle.sol\":558:570  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/BasicPriceOracle.sol\":527:537  _setupRole */\n      tag_78\n        /* \"contracts/BasicPriceOracle.sol\":527:571  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/BasicPriceOracle.sol\":581:620  _setupRole(PRICE_UPDATER, _msgSender()) */\n      tag_79\n        /* \"contracts/BasicPriceOracle.sol\":347:373  keccak256(\"PRICE_UPDATER\") */\n      0x74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804\n        /* \"contracts/BasicPriceOracle.sol\":607:619  _msgSender() */\n      tag_80\n        /* \"contracts/BasicPriceOracle.sol\":607:617  _msgSender */\n      tag_51\n        /* \"contracts/BasicPriceOracle.sol\":607:619  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/BasicPriceOracle.sol\":581:591  _setupRole */\n      tag_78\n        /* \"contracts/BasicPriceOracle.sol\":581:620  _setupRole(PRICE_UPDATER, _msgSender()) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/BasicPriceOracle.sol\":642:647  false */\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":631:639  priceSet */\n      0x65\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":631:647  priceSet = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicPriceOracle.sol\":673:674  0 */\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":657:670  currentPrice_ */\n      0x66\n        /* \"contracts/BasicPriceOracle.sol\":657:674  currentPrice_ = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1794:1808  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1840:1845  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1837  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1845  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n    tag_81:\n        /* \"contracts/BasicPriceOracle.sol\":443:681  function initialize() public initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4335:4471  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4408:4415  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4464  _roles[role].members.at(index) */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4458:4463  index */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4440  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4446  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4441:4445  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4446  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4454  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4457  _roles[role].members.at */\n      tag_84\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4434:4464  _roles[role].members.at(index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4427:4464  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4335:4471  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3320:3457  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3389:3393  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3450  _roles[role].members.contains(account) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3442:3449  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3418  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3424  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3419:3423  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3424  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3432  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3441  _roles[role].members.contains */\n      tag_87\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3412:3450  _roles[role].members.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3405:3450  return _roles[role].members.contains(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3320:3457  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicPriceOracle.sol\":700:861  function currentPrice() external override view returns (uint256) {... */\n    tag_37:\n        /* \"contracts/BasicPriceOracle.sol\":756:763  uint256 */\n      0x00\n        /* \"contracts/BasicPriceOracle.sol\":783:791  priceSet */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BasicPriceOracle.sol\":775:824  require(priceSet, \"Price must be set beforehand\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5072696365206d75737420626520736574206265666f726568616e6400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/BasicPriceOracle.sol\":841:854  currentPrice_ */\n      sload(0x66)\n        /* \"contracts/BasicPriceOracle.sol\":834:854  return currentPrice_ */\n      swap1\n      pop\n        /* \"contracts/BasicPriceOracle.sol\":700:861  function currentPrice() external override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2097:2146  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2142:2146  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2097:2146  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3625:3750  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3688:3695  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3743  _roles[role].members.length() */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3720  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3726  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3721:3725  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3726  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3734  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3741  _roles[role].members.length */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3714:3743  _roles[role].members.length() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3707:3743  return _roles[role].members.length() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3625:3750  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5471:5697  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5555:5600  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5563:5569  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5563:5575  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5570:5574  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5563:5575  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5563:5585  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5587:5599  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5587:5597  _msgSender */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5587:5599  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5555:5562  hasRole */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5555:5600  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5547:5653  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5664:5690  _revokeRole(role, account) */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5676:5680  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5682:5689  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5664:5675  _revokeRole */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5664:5690  _revokeRole(role, account) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5471:5697  function revokeRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicPriceOracle.sol\":307:373  bytes32 public constant PRICE_UPDATER = keccak256(\"PRICE_UPDATER\") */\n    tag_47:\n        /* \"contracts/BasicPriceOracle.sol\":347:373  keccak256(\"PRICE_UPDATER\") */\n      0x74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804\n        /* \"contracts/BasicPriceOracle.sol\":307:373  bytes32 public constant PRICE_UPDATER = keccak256(\"PRICE_UPDATER\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":828:932  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":881:896  address payable */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":915:925  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":908:925  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":828:932  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7395:7579  function _grantRole(bytes32 role, address account) private {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7501  _roles[role].members.add(account) */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7493:7500  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7474  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7480  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7479  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7480  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7488  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7492  _roles[role].members.add */\n      tag_101\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7468:7501  _roles[role].members.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7464:7573  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7549:7561  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7549:7559  _msgSender */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7549:7561  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7522:7562  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7540:7547  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7522:7562  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7534:7538  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7522:7562  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7464:7573  if (_roles[role].members.add(account)) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7395:7579  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7585:7773  function _revokeRole(bytes32 role, address account) private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7695  _roles[role].members.remove(account) */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7687:7694  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7665  _roles */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7671  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7666:7670  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7671  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7679  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7686  _roles[role].members.remove */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7659:7695  _roles[role].members.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7655:7767  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7743:7755  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7743:7753  _msgSender */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7743:7755  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7716:7756  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7734:7741  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7716:7756  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7728:7732  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7716:7756  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7655:7767  if (_roles[role].members.remove(account)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7585:7773  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1952:2075  function _isConstructor() private view returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2000:2004  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2024:2068  AddressUpgradeable.isContract(address(this)) */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2062:2066  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2024:2053  AddressUpgradeable.isContract */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2024:2068  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2023:2068  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":2016:2068  return !AddressUpgradeable.isContract(address(this)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1952:2075  function _isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1599:1737  function __AccessControl_init() internal initializer {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1525  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n      dup1\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1543  _isConstructor */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1550:1562  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1549:1562  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1504:1613  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1643  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1647:1660  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1646:1660  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1660  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1674:1688  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1720:1724  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1717  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1724  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1753:1757  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1750  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1757  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1662:1688  __Context_init_unchained() */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1662:1686  __Context_init_unchained */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1662:1688  __Context_init_unchained() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1698:1730  __AccessControl_init_unchained() */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1698:1728  __AccessControl_init_unchained */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1698:1730  __AccessControl_init_unchained() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1794:1808  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1840:1845  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1837  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1845  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1599:1737  function __AccessControl_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6958:7068  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7036:7061  _grantRole(role, account) */\n      tag_125\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7047:7051  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7053:7060  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7036:7046  _grantRole */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7036:7061  _grantRole(role, account) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6958:7068  function _setupRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7688:7844  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7762:7769  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7812:7834  _at(set._inner, index) */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7816:7819  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7816:7826  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7828:7833  index */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7812:7815  _at */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7812:7834  _at(set._inner, index) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7804:7835  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7781:7837  return address(uint160(uint256(_at(set._inner, index)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7688:7844  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6995:7160  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7075:7079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7098:7153  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7108:7111  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7108:7118  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7144:7149  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7128:7151  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7120:7152  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7098:7107  _contains */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7098:7153  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7091:7153  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6995:7160  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7241:7356  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7304:7311  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7330:7349  _length(set._inner) */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7338:7341  set */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7338:7348  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7330:7337  _length */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7330:7349  _length(set._inner) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7323:7349  return _length(set._inner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":7241:7356  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6440:6590  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6510:6514  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6533:6583  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6538:6541  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6538:6548  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6574:6579  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6558:6581  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6550:6582  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6533:6537  _add */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6533:6583  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6526:6583  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6440:6590  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6758:6914  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6831:6835  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6854:6907  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6862:6865  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6862:6872  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6898:6903  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6882:6905  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6874:6906  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6854:6861  _remove */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6854:6907  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6847:6907  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":6758:6914  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":737:1150  function isContract(address account) internal view returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":797:801  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1000:1012  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1109:1116  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1097:1117  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1089:1117  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1142:1143  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1135:1139  size */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1135:1143  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1128:1143  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":737:1150  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":759:823  function __Context_init_unchained() internal initializer {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1525  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1543  _isConstructor */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_145\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1550:1562  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1549:1562  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1504:1613  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1643  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1647:1660  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1646:1660  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1660  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1674:1688  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1720:1724  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1717  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1724  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1753:1757  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1750  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1757  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1794:1808  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1840:1845  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1837  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1845  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":759:823  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1743:1813  function __AccessControl_init_unchained() internal initializer {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1525  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n      dup1\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1543  _isConstructor */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1529:1545  _isConstructor() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1545  _initializing || _isConstructor() */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_153\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1550:1562  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1549:1562  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1512:1562  _initializing || _isConstructor() || !_initialized */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1504:1613  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1643  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1647:1660  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1646:1660  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1624:1660  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1674:1688  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1720:1724  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1717  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1704:1724  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1753:1757  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1750  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1738:1757  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1670:1768  if (isTopLevelCall) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1794:1808  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1840:1845  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1837  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1824:1845  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":1790:1856  if (isTopLevelCall) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":1743:1813  function __AccessControl_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4463:4664  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4530:4537  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4578:4583  index */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4557:4560  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4557:4568  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4557:4575  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4557:4583  set._values.length > index */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4549:4622  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4639:4642  set */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4639:4650  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4651:4656  index */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4639:4657  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4632:4657  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4463:4664  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3816:3943  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3889:3893  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3935:3936  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3912:3915  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3912:3924  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3912:3931  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3925:3930  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3912:3931  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3912:3936  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3905:3936  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3816:3943  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4024:4131  function _length(Set storage set) private view returns (uint256) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4080:4087  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4106:4109  set */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4106:4117  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4106:4124  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4099:4124  return set._values.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":4024:4131  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1651:2055  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1714:1718  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1735:1756  _contains(set, value) */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1745:1748  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1750:1755  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1735:1744  _contains */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1735:1756  _contains(set, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1730:2049  if (!_contains(set, value)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1772:1775  set */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1772:1783  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1789:1794  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1772:1795  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1952:1955  set */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1952:1963  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1952:1970  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1930:1933  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1930:1942  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1930:1949  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1943:1948  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1930:1949  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1930:1970  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1991:1995  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1984:1995  return true */\n      swap1\n      pop\n      jump(tag_164)\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1730:2049  if (!_contains(set, value)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2033:2038  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2026:2038  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":1651:2055  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_164:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2223:3735  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2289:2293  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2405:2423  uint256 valueIndex */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2426:2429  set */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2426:2438  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2426:2445  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2439:2444  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2426:2445  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2405:2445  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2474:2475  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2460:2470  valueIndex */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2460:2475  valueIndex != 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2456:3729  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2817:2838  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2854:2855  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2841:2851  valueIndex */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2841:2855  valueIndex - 1 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2817:2855  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2869:2886  uint256 lastIndex */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2910:2911  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2889:2892  set */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2889:2900  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2889:2907  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2889:2911  set._values.length - 1 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2869:2911  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3151:3168  bytes32 lastvalue */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3171:3174  set */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3171:3182  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3183:3192  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3171:3193  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_171\n      jumpi\n      invalid\n    tag_171:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3151:3193  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3314:3323  lastvalue */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3285:3288  set */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3285:3296  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3297:3310  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3285:3311  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3285:3323  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3431:3432  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3415:3428  toDeleteIndex */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3415:3432  toDeleteIndex + 1 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3389:3392  set */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3389:3401  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3389:3412  set._indexes[lastvalue] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3402:3411  lastvalue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3389:3412  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3389:3432  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3538:3541  set */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3538:3549  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3538:3555  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3630:3633  set */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3630:3642  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3630:3649  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3643:3648  value */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3630:3649  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3623:3649  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3671:3675  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3664:3675  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_169)\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2456:3729  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3713:3718  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":3706:3718  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":2223:3735  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_169:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759 496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n\n    auxdata: 0xa26469706673582212207889e6af4a2ab85283f58fadc5fdf8afdec5f6026301ef186408debcdc9d5b9b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506111bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806391d148541161007157806391d14854146102315780639d1b464a14610295578063a217fddf146102b3578063ca15c873146102d1578063d547741f14610313578063e1f84a3614610361576100b4565b806318b20071146100b9578063248a9ca3146100e75780632f2ff15d1461012957806336568abe146101775780638129fc1c146101c55780639010d07c146101cf575b600080fd5b6100e5600480360360208110156100cf57600080fd5b810190808035906020019092919050505061037f565b005b610113600480360360208110156100fd57600080fd5b81019080803590602001909291905050506104f4565b6040518082815260200191505060405180910390f35b6101756004803603604081101561013f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610514565b005b6101c36004803603604081101561018d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059e565b005b6101cd610637565b005b610205600480360360408110156101e557600080fd5b8101908080359060200190929190803590602001909291905050506107a5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61027d6004803603604081101561024757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d7565b60405180821515815260200191505060405180910390f35b61029d610809565b6040518082815260200191505060405180910390f35b6102bb610895565b6040518082815260200191505060405180910390f35b6102fd600480360360208110156102e757600080fd5b810190808035906020019092919050505061089c565b6040518082815260200191505060405180910390f35b61035f6004803603604081101561032957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c3565b005b61036961094d565b6040518082815260200191505060405180910390f35b6103b07f74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f766698046103ab610971565b6107d7565b610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d697373696e672050524943455f5550444154455220726f6c6500000000000081525060200191505060405180910390fd5b60008111610498576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5072696365206d757374206265206e6f6e2d7a65726f0000000000000000000081525060200191505060405180910390fd5b6001606560006101000a81548160ff021916908315150217905550806066819055507fcfebfed7291191489847e6abdd482d8816f6f32efecf69fc66c91631a2f217f9816040518082815260200191505060405180910390a150565b600060336000838152602001908152602001600020600201549050919050565b61053b6033600084815260200190815260200160002060020154610536610971565b6107d7565b610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806110ce602f913960400191505060405180910390fd5b61059a8282610979565b5050565b6105a6610971565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061115b602f913960400191505060405180910390fd5b6106338282610a0d565b5050565b600060019054906101000a900460ff16806106565750610655610aa1565b5b8061066c575060008054906101000a900460ff16155b6106c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610711576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610719610ab2565b61072d6000801b610728610971565b610bc0565b61075e7f74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804610759610971565b610bc0565b6000606560006101000a81548160ff021916908315150217905550600060668190555080156107a25760008060016101000a81548160ff0219169083151502179055505b50565b60006107cf8260336000868152602001908152602001600020600001610bce90919063ffffffff16565b905092915050565b60006108018260336000868152602001908152602001600020600001610be890919063ffffffff16565b905092915050565b6000606560009054906101000a900460ff1661088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5072696365206d75737420626520736574206265666f726568616e640000000081525060200191505060405180910390fd5b606654905090565b6000801b81565b60006108bc60336000848152602001908152602001600020600001610c18565b9050919050565b6108ea60336000848152602001908152602001600020600201546108e5610971565b6107d7565b61093f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806110fd6030913960400191505060405180910390fd5b6109498282610a0d565b5050565b7f74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f7666980481565b600033905090565b6109a18160336000858152602001908152602001600020600001610c2d90919063ffffffff16565b15610a09576109ae610971565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610a358160336000858152602001908152602001600020600001610c5d90919063ffffffff16565b15610a9d57610a42610971565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610aac30610c8d565b15905090565b600060019054906101000a900460ff1680610ad15750610ad0610aa1565b5b80610ae7575060008054906101000a900460ff16155b610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610b8c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b94610ca0565b610b9c610d9e565b8015610bbd5760008060016101000a81548160ff0219169083151502179055505b50565b610bca8282610979565b5050565b6000610bdd8360000183610e9c565b60001c905092915050565b6000610c10836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f1f565b905092915050565b6000610c2682600001610f42565b9050919050565b6000610c55836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f53565b905092915050565b6000610c85836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610fc3565b905092915050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680610cbf5750610cbe610aa1565b5b80610cd5575060008054906101000a900460ff16155b610d2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610d7a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610d9b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610dbd5750610dbc610aa1565b5b80610dd3575060008054906101000a900460ff16155b610e28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610e78576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610e995760008060016101000a81548160ff0219169083151502179055505b50565b600081836000018054905011610efd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806110ac6022913960400191505060405180910390fd5b826000018281548110610f0c57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000610f5f8383610f1f565b610fb8578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610fbd565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461109f576000600182039050600060018660000180549050039050600086600001828154811061100e57fe5b906000526020600020015490508087600001848154811061102b57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061106357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506110a5565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212207889e6af4a2ab85283f58fadc5fdf8afdec5f6026301ef186408debcdc9d5b9b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE1F84A36 EQ PUSH2 0x361 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x18B20071 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x59E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH32 0x74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804 PUSH2 0x3AB PUSH2 0x971 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x422 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D697373696E672050524943455F5550444154455220726F6C65000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5072696365206D757374206265206E6F6E2D7A65726F00000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x66 DUP2 SWAP1 SSTORE POP PUSH32 0xCFEBFED7291191489847E6ABDD482D8816F6F32EFECF69FC66C91631A2F217F9 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B PUSH1 0x33 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x536 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10CE PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59A DUP3 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A6 PUSH2 0x971 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x115B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x633 DUP3 DUP3 PUSH2 0xA0D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x656 JUMPI POP PUSH2 0x655 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x66C JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x719 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x72D PUSH1 0x0 DUP1 SHL PUSH2 0x728 PUSH2 0x971 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x75E PUSH32 0x74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804 PUSH2 0x759 PUSH2 0x971 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x66 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP3 PUSH1 0x33 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xBCE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 DUP3 PUSH1 0x33 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xBE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5072696365206D75737420626520736574206265666F726568616E6400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BC PUSH1 0x33 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EA PUSH1 0x33 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x8E5 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10FD PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0xA0D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A1 DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA09 JUMPI PUSH2 0x9AE PUSH2 0x971 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC5D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA42 PUSH2 0x971 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAC ADDRESS PUSH2 0xC8D JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xAD1 JUMPI POP PUSH2 0xAD0 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xAE7 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xB8C JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB94 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBCA DUP3 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDD DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC10 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH1 0x0 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC85 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xCBF JUMPI POP PUSH2 0xCBE PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xCD5 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xD7A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDBD JUMPI POP PUSH2 0xDBC PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDD3 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xE78 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10AC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF0C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP4 DUP4 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xFB8 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x109F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x100E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x102B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1063 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x496E69746961 PUSH13 0x697A61626C653A20636F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 COINBASE PUSH4 0x63657373 NUMBER PUSH16 0x6E74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212207889 0xE6 0xAF 0x4A 0x2A 0xB8 MSTORE DUP4 CREATE2 DUP16 0xAD 0xC5 REVERT 0xF8 0xAF 0xDE 0xC5 0xF6 MUL PUSH4 0x1EF1864 ADDMOD 0xDE 0xBC 0xDC SWAP14 JUMPDEST SWAP12 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "218:1070:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806391d148541161007157806391d14854146102315780639d1b464a14610295578063a217fddf146102b3578063ca15c873146102d1578063d547741f14610313578063e1f84a3614610361576100b4565b806318b20071146100b9578063248a9ca3146100e75780632f2ff15d1461012957806336568abe146101775780638129fc1c146101c55780639010d07c146101cf575b600080fd5b6100e5600480360360208110156100cf57600080fd5b810190808035906020019092919050505061037f565b005b610113600480360360208110156100fd57600080fd5b81019080803590602001909291905050506104f4565b6040518082815260200191505060405180910390f35b6101756004803603604081101561013f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610514565b005b6101c36004803603604081101561018d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059e565b005b6101cd610637565b005b610205600480360360408110156101e557600080fd5b8101908080359060200190929190803590602001909291905050506107a5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61027d6004803603604081101561024757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d7565b60405180821515815260200191505060405180910390f35b61029d610809565b6040518082815260200191505060405180910390f35b6102bb610895565b6040518082815260200191505060405180910390f35b6102fd600480360360208110156102e757600080fd5b810190808035906020019092919050505061089c565b6040518082815260200191505060405180910390f35b61035f6004803603604081101561032957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c3565b005b61036961094d565b6040518082815260200191505060405180910390f35b6103b07f74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f766698046103ab610971565b6107d7565b610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d697373696e672050524943455f5550444154455220726f6c6500000000000081525060200191505060405180910390fd5b60008111610498576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5072696365206d757374206265206e6f6e2d7a65726f0000000000000000000081525060200191505060405180910390fd5b6001606560006101000a81548160ff021916908315150217905550806066819055507fcfebfed7291191489847e6abdd482d8816f6f32efecf69fc66c91631a2f217f9816040518082815260200191505060405180910390a150565b600060336000838152602001908152602001600020600201549050919050565b61053b6033600084815260200190815260200160002060020154610536610971565b6107d7565b610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806110ce602f913960400191505060405180910390fd5b61059a8282610979565b5050565b6105a6610971565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061115b602f913960400191505060405180910390fd5b6106338282610a0d565b5050565b600060019054906101000a900460ff16806106565750610655610aa1565b5b8061066c575060008054906101000a900460ff16155b6106c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610711576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610719610ab2565b61072d6000801b610728610971565b610bc0565b61075e7f74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804610759610971565b610bc0565b6000606560006101000a81548160ff021916908315150217905550600060668190555080156107a25760008060016101000a81548160ff0219169083151502179055505b50565b60006107cf8260336000868152602001908152602001600020600001610bce90919063ffffffff16565b905092915050565b60006108018260336000868152602001908152602001600020600001610be890919063ffffffff16565b905092915050565b6000606560009054906101000a900460ff1661088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5072696365206d75737420626520736574206265666f726568616e640000000081525060200191505060405180910390fd5b606654905090565b6000801b81565b60006108bc60336000848152602001908152602001600020600001610c18565b9050919050565b6108ea60336000848152602001908152602001600020600201546108e5610971565b6107d7565b61093f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806110fd6030913960400191505060405180910390fd5b6109498282610a0d565b5050565b7f74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f7666980481565b600033905090565b6109a18160336000858152602001908152602001600020600001610c2d90919063ffffffff16565b15610a09576109ae610971565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610a358160336000858152602001908152602001600020600001610c5d90919063ffffffff16565b15610a9d57610a42610971565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610aac30610c8d565b15905090565b600060019054906101000a900460ff1680610ad15750610ad0610aa1565b5b80610ae7575060008054906101000a900460ff16155b610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610b8c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b94610ca0565b610b9c610d9e565b8015610bbd5760008060016101000a81548160ff0219169083151502179055505b50565b610bca8282610979565b5050565b6000610bdd8360000183610e9c565b60001c905092915050565b6000610c10836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f1f565b905092915050565b6000610c2682600001610f42565b9050919050565b6000610c55836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f53565b905092915050565b6000610c85836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610fc3565b905092915050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680610cbf5750610cbe610aa1565b5b80610cd5575060008054906101000a900460ff16155b610d2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610d7a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610d9b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610dbd5750610dbc610aa1565b5b80610dd3575060008054906101000a900460ff16155b610e28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061112d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610e78576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610e995760008060016101000a81548160ff0219169083151502179055505b50565b600081836000018054905011610efd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806110ac6022913960400191505060405180910390fd5b826000018281548110610f0c57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000610f5f8383610f1f565b610fb8578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610fbd565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461109f576000600182039050600060018660000180549050039050600086600001828154811061100e57fe5b906000526020600020015490508087600001848154811061102b57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061106357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506110a5565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212207889e6af4a2ab85283f58fadc5fdf8afdec5f6026301ef186408debcdc9d5b9b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE1F84A36 EQ PUSH2 0x361 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x18B20071 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x59E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH32 0x74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804 PUSH2 0x3AB PUSH2 0x971 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x422 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D697373696E672050524943455F5550444154455220726F6C65000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5072696365206D757374206265206E6F6E2D7A65726F00000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x66 DUP2 SWAP1 SSTORE POP PUSH32 0xCFEBFED7291191489847E6ABDD482D8816F6F32EFECF69FC66C91631A2F217F9 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B PUSH1 0x33 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x536 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10CE PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59A DUP3 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A6 PUSH2 0x971 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x115B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x633 DUP3 DUP3 PUSH2 0xA0D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x656 JUMPI POP PUSH2 0x655 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x66C JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x719 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x72D PUSH1 0x0 DUP1 SHL PUSH2 0x728 PUSH2 0x971 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x75E PUSH32 0x74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804 PUSH2 0x759 PUSH2 0x971 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x66 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP3 PUSH1 0x33 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xBCE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 DUP3 PUSH1 0x33 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xBE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5072696365206D75737420626520736574206265666F726568616E6400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BC PUSH1 0x33 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EA PUSH1 0x33 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x8E5 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10FD PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0xA0D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A1 DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA09 JUMPI PUSH2 0x9AE PUSH2 0x971 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0xC5D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA42 PUSH2 0x971 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAC ADDRESS PUSH2 0xC8D JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xAD1 JUMPI POP PUSH2 0xAD0 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xAE7 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xB8C JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB94 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBCA DUP3 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDD DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC10 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH1 0x0 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC85 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xCBF JUMPI POP PUSH2 0xCBE PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xCD5 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xD7A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDBD JUMPI POP PUSH2 0xDBC PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDD3 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x112D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xE78 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10AC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF0C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP4 DUP4 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xFB8 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x109F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x100E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x102B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1063 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x496E69746961 PUSH13 0x697A61626C653A20636F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 COINBASE PUSH4 0x63657373 NUMBER PUSH16 0x6E74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212207889 0xE6 0xAF 0x4A 0x2A 0xB8 MSTORE DUP4 CREATE2 DUP16 0xAD 0xC5 REVERT 0xF8 0xAF 0xDE 0xC5 0xF6 MUL PUSH4 0x1EF1864 ADDMOD 0xDE 0xBC 0xDC SWAP14 JUMPDEST SWAP12 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "218:1070:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4652:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5014:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6188:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;443:238:5;;;:::i;:::-;;4335:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3320:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;700:161:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2097:49:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3625:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5471:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;307:66:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;883:335;967:36;347:26;990:12;:10;:12::i;:::-;967:7;:36::i;:::-;959:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:1;1052:13;:17;1044:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:4;1107:8;;:15;;;;;;;;;;;;;;;;;;1148:13;1132;:29;;;;1177:34;1197:13;1177:34;;;;;;;;;;;;;;;;;;883:335;:::o;4652:112:0:-;4709:7;4735:6;:12;4742:4;4735:12;;;;;;;;;;;:22;;;4728:29;;4652:112;;;:::o;5014:223::-;5097:45;5105:6;:12;5112:4;5105:12;;;;;;;;;;;:22;;;5129:12;:10;:12::i;:::-;5097:7;:45::i;:::-;5089:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:25;5216:4;5222:7;5205:10;:25::i;:::-;5014:223;;:::o;6188:205::-;6285:12;:10;:12::i;:::-;6274:23;;:7;:23;;;6266:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6360:26;6372:4;6378:7;6360:11;:26::i;:::-;6188:205;;:::o;443:238:5:-;1512:13:1;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;494:22:5::1;:20;:22::i;:::-;527:44;2142:4:0;538:18:5::0;::::1;558:12;:10;:12::i;:::-;527:10;:44::i;:::-;581:39;347:26;607:12;:10;:12::i;:::-;581:10;:39::i;:::-;642:5;631:8;;:16;;;;;;;;;;;;;;;;;;673:1;657:13;:17;;;;1794:14:1::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;443:238:5;:::o;4335:136:0:-;4408:7;4434:30;4458:5;4434:6;:12;4441:4;4434:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4427:37;;4335:136;;;;:::o;3320:137::-;3389:4;3412:38;3442:7;3412:6;:12;3419:4;3412:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3405:45;;3320:137;;;;:::o;700:161:5:-;756:7;783:8;;;;;;;;;;;775:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;841:13;;834:20;;700:161;:::o;2097:49:0:-;2142:4;2097:49;;;:::o;3625:125::-;3688:7;3714:29;:6;:12;3721:4;3714:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3707:36;;3625:125;;;:::o;5471:226::-;5555:45;5563:6;:12;5570:4;5563:12;;;;;;;;;;;:22;;;5587:12;:10;:12::i;:::-;5555:7;:45::i;:::-;5547:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5664:26;5676:4;5682:7;5664:11;:26::i;:::-;5471:226;;:::o;307:66:5:-;347:26;307:66;:::o;828:104:3:-;881:15;915:10;908:17;;828:104;:::o;7395:184:0:-;7468:33;7493:7;7468:6;:12;7475:4;7468:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7464:109;;;7549:12;:10;:12::i;:::-;7522:40;;7540:7;7522:40;;7534:4;7522:40;;;;;;;;;;7464:109;7395:184;;:::o;7585:188::-;7659:36;7687:7;7659:6;:12;7666:4;7659:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7655:112;;;7743:12;:10;:12::i;:::-;7716:40;;7734:7;7716:40;;7728:4;7716:40;;;;;;;;;;7655:112;7585:188;;:::o;1952:123:1:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;1599:138:0:-;1512:13:1;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1662:26:0::1;:24;:26::i;:::-;1698:32;:30;:32::i;:::-;1794:14:1::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;1599:138:0;:::o;6958:110::-;7036:25;7047:4;7053:7;7036:10;:25::i;:::-;6958:110;;:::o;7688:156:4:-;7762:7;7812:22;7816:3;:10;;7828:5;7812:3;:22::i;:::-;7804:31;;7781:56;;7688:156;;;;:::o;6995:165::-;7075:4;7098:55;7108:3;:10;;7144:5;7128:23;;7120:32;;7098:9;:55::i;:::-;7091:62;;6995:165;;;;:::o;7241:115::-;7304:7;7330:19;7338:3;:10;;7330:7;:19::i;:::-;7323:26;;7241:115;;;:::o;6440:150::-;6510:4;6533:50;6538:3;:10;;6574:5;6558:23;;6550:32;;6533:4;:50::i;:::-;6526:57;;6440:150;;;;:::o;6758:156::-;6831:4;6854:53;6862:3;:10;;6898:5;6882:23;;6874:32;;6854:7;:53::i;:::-;6847:60;;6758:156;;;;:::o;737:413:2:-;797:4;1000:12;1109:7;1097:20;1089:28;;1142:1;1135:4;:8;1128:15;;;737:413;;;:::o;759:64:3:-;1512:13:1;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1794:14;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;759:64:3;:::o;1743:70:0:-;1512:13:1;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1794:14;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;1743:70:0;:::o;4463:201:4:-;4530:7;4578:5;4557:3;:11;;:18;;;;:26;4549:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4639:3;:11;;4651:5;4639:18;;;;;;;;;;;;;;;;4632:25;;4463:201;;;;:::o;3816:127::-;3889:4;3935:1;3912:3;:12;;:19;3925:5;3912:19;;;;;;;;;;;;:24;;3905:31;;3816:127;;;;:::o;4024:107::-;4080:7;4106:3;:11;;:18;;;;4099:25;;4024:107;;;:::o;1651:404::-;1714:4;1735:21;1745:3;1750:5;1735:9;:21::i;:::-;1730:319;;1772:3;:11;;1789:5;1772:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:3;:11;;:18;;;;1930:3;:12;;:19;1943:5;1930:19;;;;;;;;;;;:40;;;;1991:4;1984:11;;;;1730:319;2033:5;2026:12;;1651:404;;;;;:::o;2223:1512::-;2289:4;2405:18;2426:3;:12;;:19;2439:5;2426:19;;;;;;;;;;;;2405:40;;2474:1;2460:10;:15;2456:1273;;2817:21;2854:1;2841:10;:14;2817:38;;2869:17;2910:1;2889:3;:11;;:18;;;;:22;2869:42;;3151:17;3171:3;:11;;3183:9;3171:22;;;;;;;;;;;;;;;;3151:42;;3314:9;3285:3;:11;;3297:13;3285:26;;;;;;;;;;;;;;;:38;;;;3431:1;3415:13;:17;3389:3;:12;;:23;3402:9;3389:23;;;;;;;;;;;:43;;;;3538:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3630:3;:12;;:19;3643:5;3630:19;;;;;;;;;;;3623:26;;;3671:4;3664:11;;;;;;;;2456:1273;3713:5;3706:12;;;2223:1512;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "908600",
								"executionCost": "942",
								"totalCost": "909542"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "255",
								"PRICE_UPDATER()": "315",
								"currentPrice()": "1888",
								"getRoleAdmin(bytes32)": "1207",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1356",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setCurrentPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 1288,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207889e6af4a2ab85283f58fadc5fdf8afdec5f6026301ef186408debcdc9d5b9b64736f6c634300060c0033",
									".code": [
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "9D1B464A"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "CA15C873"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "E1F84A36"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "18B20071"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "8129FC1C"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "9010D07C"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 218,
											"end": 1288,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 681,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 681,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 700,
											"end": 861,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 967,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 990,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 967,
											"end": 1003,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 967,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "4D697373696E672050524943455F5550444154455220726F6C65000000000000"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 959,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "5072696365206D757374206265206E6F6E2D7A65726F00000000000000000000"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1107,
											"end": 1115,
											"name": "PUSH",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1107,
											"end": 1115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "CFEBFED7291191489847E6ABDD482D8816F6F32EFECF69FC66C91631A2F217F9"
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1211,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1218,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4709,
											"end": 4716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4764,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5105,
											"end": 5111,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5129,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5129,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5129,
											"end": 5141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5129,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5129,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5097,
											"end": 5142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5097,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH data",
											"source": 0,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5089,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5205,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5216,
											"end": 5220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5222,
											"end": 5229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5205,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5205,
											"end": 5230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5230,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5205,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6285,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6297,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH data",
											"source": 0,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6266,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6378,
											"end": 6385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6360,
											"end": 6386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6360,
											"end": 6386,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6360,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6393,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 443,
											"end": 681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH data",
											"source": 1,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 494,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 494,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 494,
											"end": 516,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 516,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 494,
											"end": 516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 556,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 556,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 558,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 558,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 558,
											"end": 570,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 558,
											"end": 570,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 558,
											"end": 570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 527,
											"end": 571,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 527,
											"end": 571,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 527,
											"end": 571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 581,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804"
										},
										{
											"begin": 607,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 607,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 607,
											"end": 619,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 619,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 607,
											"end": 619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 581,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 581,
											"end": 620,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 620,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 581,
											"end": 620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 631,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 631,
											"end": 647,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 631,
											"end": 647,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 670,
											"name": "PUSH",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 657,
											"end": 674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 657,
											"end": 674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 657,
											"end": 674,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 657,
											"end": 674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 681,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4458,
											"end": 4463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4445,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4434,
											"end": 4457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4434,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4471,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3442,
											"end": 3449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3423,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3412,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3412,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 700,
											"end": 861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 756,
											"end": 763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 783,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 783,
											"end": 791,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 783,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 783,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 791,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 783,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 783,
											"end": 791,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 783,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 783,
											"end": 791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "5072696365206D75737420626520736574206265666F726568616E6400000000"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 775,
											"end": 824,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 841,
											"end": 854,
											"name": "PUSH",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 841,
											"end": 854,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 834,
											"end": 854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 834,
											"end": 854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 700,
											"end": 861,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3750,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5563,
											"end": 5569,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5587,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5587,
											"end": 5599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5599,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5587,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5555,
											"end": 5600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5555,
											"end": 5600,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5555,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH data",
											"source": 0,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5547,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5676,
											"end": 5680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5664,
											"end": 5690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5664,
											"end": 5690,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5664,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5471,
											"end": 5697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "74B366A297145849FA9687E16ECAD1E3A60CF84F6C2256AE73E20A9F76669804"
										},
										{
											"begin": 307,
											"end": 373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 307,
											"end": 373,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 932,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 828,
											"end": 932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 881,
											"end": 896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 925,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 908,
											"end": 925,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 828,
											"end": 932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 828,
											"end": 932,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7395,
											"end": 7579,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7395,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7493,
											"end": 7500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7479,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7468,
											"end": 7492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7468,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7464,
											"end": 7573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7549,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7549,
											"end": 7561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7561,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7549,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7540,
											"end": 7547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7562,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7573,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7464,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7585,
											"end": 7773,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7585,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7687,
											"end": 7694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7666,
											"end": 7670,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7659,
											"end": 7686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7659,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7655,
											"end": 7767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7743,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7743,
											"end": 7755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7755,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7743,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7734,
											"end": 7741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7767,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7655,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1952,
											"end": 2075,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1952,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2075,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1599,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH data",
											"source": 1,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1662,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1698,
											"end": 1730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1698,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1737,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6958,
											"end": 7068,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6958,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7036,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 7068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 7068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 7068,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7816,
											"end": 7826,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7812,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7812,
											"end": 7834,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 7834,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7812,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7804,
											"end": 7835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7835,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7688,
											"end": 7844,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7144,
											"end": 7149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7151,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7128,
											"end": 7151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7120,
											"end": 7152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7120,
											"end": 7152,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7098,
											"end": 7153,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7153,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 7098,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6995,
											"end": 7160,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7338,
											"end": 7341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7338,
											"end": 7348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7330,
											"end": 7349,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7330,
											"end": 7349,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7330,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6574,
											"end": 6579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6581,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6550,
											"end": 6582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6582,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6533,
											"end": 6583,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6533,
											"end": 6583,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6533,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6590,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6862,
											"end": 6865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6905,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6906,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6854,
											"end": 6907,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6854,
											"end": 6907,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6854,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6914,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 1150,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 737,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 797,
											"end": 801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1117,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1143,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 1150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 737,
											"end": 1150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 1150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 1150,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 823,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 759,
											"end": 823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH data",
											"source": 1,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 823,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1743,
											"end": 1813,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1743,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1529,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1512,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH data",
											"source": 1,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1504,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1670,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1790,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1813,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4583,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH data",
											"source": 4,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3936,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3936,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3943,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4024,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4024,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4131,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1755,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1735,
											"end": 1756,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1756,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1735,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1730,
											"end": 2049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1955,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1949,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 2049,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1730,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 2055,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2445,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2445,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2456,
											"end": 3729,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2855,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 2855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2889,
											"end": 2892,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2911,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3174,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3310,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3323,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3415,
											"end": 3428,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3412,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3432,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3432,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3541,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3630,
											"end": 3642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3648,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3649,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3664,
											"end": 3675,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 3729,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2456,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 3735,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PRICE_UPDATER()": "e1f84a36",
							"currentPrice()": "9d1b464a",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize()": "8129fc1c",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setCurrentPrice(uint256)": "18b20071"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentPrice\",\"type\":\"uint256\"}],\"name\":\"CurrentPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_UPDATER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentPrice\",\"type\":\"uint256\"}],\"name\":\"setCurrentPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicPriceOracle.sol\":\"BasicPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xa3c77c9ea6b47301c7ab5bf3addc1d809d13a27a179c4629a1b55308e8633d14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77a789173aa9454336023580d52fedfb2d5ef0a1ccb3040ba20f5aa56e300aef\",\"dweb:/ipfs/Qme3CQYH1AywEH1w3mDV3UT6NhMQmjspNnUA6V8yBg77Ac\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381\",\"dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4\"]},\"contracts/BasicPriceOracle.sol\":{\"keccak256\":\"0x891ba9a9e8508e20feb5d84bd34b6aea1027784a86a58f4a522d555cdf3b1b30\",\"urls\":[\"bzz-raw://b1ef505d84d32adbd44e8ee46acf20210bdeae6857863a0c331e397a8e663faa\",\"dweb:/ipfs/QmemMMpRKcgCnWti9aMi6EJQzzyzX7udcJJLQE1Kztaxpk\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x1e8ba9bb97493d03a4a4b1ca9758b0f5809939775e06fd28668f9ddbd530c927\",\"urls\":[\"bzz-raw://e10f1429600187416e8ef752a13acae8c83562730187e65823b6f0b766c9f5c8\",\"dweb:/ipfs/QmZdH61YHA1nB3qiRwZ4kiCfMJhNC3n14WDzJtyYuRCgES\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 314,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 317,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 661,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "_roles",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)"
							},
							{
								"astId": 306,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1172,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "priceSet",
								"offset": 0,
								"slot": "101",
								"type": "t_bool"
							},
							{
								"astId": 1174,
								"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
								"label": "currentPrice_",
								"offset": 0,
								"slot": "102",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)39_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)938_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSetUpgradeable.AddressSet",
								"members": [
									{
										"astId": 937,
										"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)673_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)39_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 36,
										"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)938_storage"
									},
									{
										"astId": 38,
										"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)673_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSetUpgradeable.Set",
								"members": [
									{
										"astId": 668,
										"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 672,
										"contract": "contracts/BasicPriceOracle.sol:BasicPriceOracle",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"IPriceOracle": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "CurrentPriceUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "currentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setCurrentPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"currentPrice()": "9d1b464a",
							"setCurrentPrice(uint256)": "18b20071"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"CurrentPriceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setCurrentPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x1e8ba9bb97493d03a4a4b1ca9758b0f5809939775e06fd28668f9ddbd530c927\",\"urls\":[\"bzz-raw://e10f1429600187416e8ef752a13acae8c83562730187e65823b6f0b766c9f5c8\",\"dweb:/ipfs/QmZdH61YHA1nB3qiRwZ4kiCfMJhNC3n14WDzJtyYuRCgES\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/BasicPriceOracle.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/BasicPriceOracle.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/interfaces/IPriceOracle.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IPriceOracle.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							307
						]
					},
					"id": 308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol",
							"file": "../utils/EnumerableSetUpgradeable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 308,
							"sourceUnit": 1155,
							"src": "66:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../utils/AddressUpgradeable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 308,
							"sourceUnit": 618,
							"src": "114:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 308,
							"sourceUnit": 663,
							"src": "156:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
							"file": "../proxy/Initializable.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 308,
							"sourceUnit": 374,
							"src": "198:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 373,
										"src": "1559:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$373",
											"typeString": "contract Initializable"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 9,
										"name": "ContextUpgradeable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 662,
										"src": "1574:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ContextUpgradeable_$662",
											"typeString": "contract ContextUpgradeable"
										}
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1574:18:0"
								}
							],
							"contractDependencies": [
								373,
								662
							],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "236:1276:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 307,
							"linearizedBaseContracts": [
								307,
								662,
								373
							],
							"name": "AccessControlUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1652:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 15,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "1662:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "1662:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 18,
														"name": "__AccessControl_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1698:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1698:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "1698:32:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 13,
											"modifierName": {
												"argumentTypes": null,
												"id": 12,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 356,
												"src": "1640:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1640:11:0"
										}
									],
									"name": "__AccessControl_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:0:0"
									},
									"scope": 307,
									"src": "1599:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1806:7:0",
										"statements": []
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 25,
											"modifierName": {
												"argumentTypes": null,
												"id": 24,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 356,
												"src": "1794:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1794:11:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:0:0"
									},
									"scope": 307,
									"src": "1743:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"id": 31,
									"libraryName": {
										"contractScope": null,
										"id": 29,
										"name": "EnumerableSetUpgradeable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1154,
										"src": "1824:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSetUpgradeable_$1154",
											"typeString": "library EnumerableSetUpgradeable"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1818:71:0",
									"typeName": {
										"contractScope": null,
										"id": 30,
										"name": "EnumerableSetUpgradeable.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 938,
										"src": "1853:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
											"typeString": "struct EnumerableSetUpgradeable.AddressSet"
										}
									}
								},
								{
									"id": 34,
									"libraryName": {
										"contractScope": null,
										"id": 32,
										"name": "AddressUpgradeable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 617,
										"src": "1900:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AddressUpgradeable_$617",
											"typeString": "library AddressUpgradeable"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1894:37:0",
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1923:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 39,
									"members": [
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 39,
											"src": "1963:43:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.AddressSet"
											},
											"typeName": {
												"contractScope": null,
												"id": 35,
												"name": "EnumerableSetUpgradeable.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 938,
												"src": "1963:35:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 38,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 39,
											"src": "2016:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 37,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2016:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 307,
									"src": "1937:103:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 307,
									"src": "2046:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 40,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2055:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2046:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueType": {
											"contractScope": null,
											"id": 41,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 39,
											"src": "2066:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$39_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 46,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 307,
									"src": "2097:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 44,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783030",
										"id": 45,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2142:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2153:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 55,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2473:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2495:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2530:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2472:87:0"
									},
									"src": "2450:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2566:198:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 64,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2787:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 57,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2809:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "2834:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2786:71:0"
									},
									"src": "2769:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2864:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 73,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3162:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 66,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3184:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3209:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3161:71:0"
									},
									"src": "3144:89:0"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3395:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 88,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "3442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 83,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "3412:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																	}
																},
																"id": 85,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 84,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "3419:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3412:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$39_storage",
																	"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3412:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$938_storage",
																"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1016,
														"src": "3412:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$938_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$938_storage_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 82,
												"id": 90,
												"nodeType": "Return",
												"src": "3405:45:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3239:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "3337:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 75,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "3351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3336:31:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "3389:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 80,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3389:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3388:6:0"
									},
									"scope": 307,
									"src": "3320:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "3697:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "3714:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																	}
																},
																"id": 102,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "3721:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3714:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$39_storage",
																	"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3714:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$938_storage",
																"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1030,
														"src": "3714:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$938_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$938_storage_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "3707:36:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3463:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "3653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3652:14:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "3688:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3687:9:0"
									},
									"scope": 307,
									"src": "3625:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "4417:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "4458:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 118,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "4434:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																	}
																},
																"id": 120,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 119,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "4441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4434:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$39_storage",
																	"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "4434:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$938_storage",
																"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1056,
														"src": "4434:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$938_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$938_storage_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4434:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 117,
												"id": 125,
												"nodeType": "Return",
												"src": "4427:37:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3756:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "4358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "4372:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4357:29:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "4408:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4407:9:0"
									},
									"scope": 307,
									"src": "4335:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4718:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 135,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 137,
														"indexExpression": {
															"argumentTypes": null,
															"id": 136,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "4742:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4735:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$39_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 38,
													"src": "4735:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 134,
												"id": 139,
												"nodeType": "Return",
												"src": "4728:29:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "4477:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 141,
												"src": "4674:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4673:14:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 141,
												"src": "4709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 132,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4708:9:0"
									},
									"scope": 307,
									"src": "4652:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "5079:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 151,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "5105:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																			}
																		},
																		"id": 153,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 152,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 144,
																			"src": "5112:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5105:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$39_storage",
																			"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																		}
																	},
																	"id": 154,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 38,
																	"src": "5105:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 155,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "5129:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5129:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 150,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "5097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5097:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5144:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5089:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "5089:105:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "5205:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5205:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "5205:25:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4770:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5033:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5047:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5032:31:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5079:0:0"
									},
									"scope": 307,
									"src": "5014:223:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "5537:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 177,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "5563:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																			}
																		},
																		"id": 179,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 178,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "5570:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5563:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$39_storage",
																			"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 38,
																	"src": "5563:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 181,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "5587:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5587:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 176,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "5555:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5555:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:50:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5547:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "5547:106:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 188,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5676:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "5664:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5664:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "5664:26:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5243:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5491:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5505:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5490:31:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5537:0:0"
									},
									"scope": 307,
									"src": "5471:226:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6256:137:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 202,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "6274:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 203,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "6285:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6285:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6274:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6299:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "6266:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 210,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 211,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "6378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 209,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "6360:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6360:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "6360:26:0"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "5703:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "6210:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "6224:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6209:31:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:0"
									},
									"scope": 307,
									"src": "6188:205:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "7026:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 224,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "7047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "7053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 223,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "7036:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7036:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "7036:25:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "6399:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "6978:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 217,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 229,
												"src": "6992:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6977:31:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7026:0:0"
									},
									"scope": 307,
									"src": "6958:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "7266:123:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7298:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 239,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7304:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 240,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "7311:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$39_storage",
																	"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 38,
															"src": "7304:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 243,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7328:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "7281:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7281:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "EmitStatement",
												"src": "7276:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 246,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "7348:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 248,
															"indexExpression": {
																"argumentTypes": null,
																"id": 247,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7355:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7348:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$39_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "7348:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 250,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "7373:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7348:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "7348:34:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "7074:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "7216:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "7230:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7215:33:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7266:0:0"
									},
									"scope": 307,
									"src": "7193:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "7454:125:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 266,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "7493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 261,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7468:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																	}
																},
																"id": 263,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 262,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "7475:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7468:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$39_storage",
																	"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "7468:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$938_storage",
																"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 964,
														"src": "7468:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$938_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$938_storage_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7468:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 276,
												"nodeType": "IfStatement",
												"src": "7464:109:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "7503:70:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 269,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7534:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 270,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7540:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 271,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "7549:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7549:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 268,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "7522:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7522:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 274,
															"nodeType": "EmitStatement",
															"src": "7517:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "7415:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "7429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7414:31:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7454:0:0"
									},
									"scope": 307,
									"src": "7395:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "7645:128:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 290,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "7687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 285,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7659:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$39_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																	}
																},
																"id": 287,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 286,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "7666:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7659:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$39_storage",
																	"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "7659:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$938_storage",
																"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 990,
														"src": "7659:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$938_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$938_storage_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7659:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 300,
												"nodeType": "IfStatement",
												"src": "7655:112:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "7697:70:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 293,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "7728:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 294,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "7734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 295,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "7743:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7743:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 292,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "7716:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7716:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "7711:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "7606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "7620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7605:31:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7645:0:0"
									},
									"scope": 307,
									"src": "7585:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 306,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 307,
									"src": "7778:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 303,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7778:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 305,
										"length": {
											"argumentTypes": null,
											"hexValue": "3439",
											"id": 304,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7786:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "7778:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 308,
							"src": "1513:6293:0"
						}
					],
					"src": "33:7774:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							373
						]
					},
					"id": 374,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "79:32:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../utils/AddressUpgradeable.sol",
							"id": 310,
							"nodeType": "ImportDirective",
							"scope": 374,
							"sourceUnit": 618,
							"src": "113:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 311,
								"nodeType": "StructuredDocumentation",
								"src": "156:938:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 373,
							"linearizedBaseContracts": [
								373
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1134:73:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 314,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 373,
									"src": "1212:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 313,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1212:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1244:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 317,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 373,
									"src": "1340:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 316,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1340:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "1494:368:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 321,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1512:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 322,
																		"name": "_isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1529:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1529:16:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1512:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1549:13:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 325,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "1550:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1512:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1564:48:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1504:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1504:109:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1504:109:1"
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 355,
														"src": "1624:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1624:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"argumentTypes": null,
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1646:14:1",
													"subExpression": {
														"argumentTypes": null,
														"id": 333,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1647:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1624:36:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 336,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "1674:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 346,
												"nodeType": "IfStatement",
												"src": "1670:98:1",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "1690:78:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 337,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1704:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1704:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "1704:20:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 341,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "1738:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1753:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1738:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 344,
															"nodeType": "ExpressionStatement",
															"src": "1738:19:1"
														}
													]
												}
											},
											{
												"id": 347,
												"nodeType": "PlaceholderStatement",
												"src": "1778:1:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 348,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "1794:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 354,
												"nodeType": "IfStatement",
												"src": "1790:66:1",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "1810:46:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 349,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1824:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1840:5:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1824:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 352,
															"nodeType": "ExpressionStatement",
															"src": "1824:21:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1373:93:1",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 356,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1491:2:1"
									},
									"src": "1471:391:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2006:69:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2023:45:1",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 366,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "2062:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Initializable_$373",
																			"typeString": "contract Initializable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Initializable_$373",
																			"typeString": "contract Initializable"
																		}
																	],
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2054:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 364,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2054:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2054:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 362,
																"name": "AddressUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "2024:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$617_$",
																	"typeString": "type(library AddressUpgradeable)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 393,
															"src": "2024:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2024:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 361,
												"id": 370,
												"nodeType": "Return",
												"src": "2016:52:1"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1868:79:1",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:2:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "2000:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2000:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1999:6:1"
									},
									"scope": 373,
									"src": "1952:123:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 374,
							"src": "1095:982:1"
						}
					],
					"src": "79:1999:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							617
						]
					},
					"id": 618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 375,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 376,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "AddressUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "803:347:2",
										"statements": [
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "1000:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1000:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1000:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1087:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1109:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1097:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1097:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1089:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 379,
														"isOffset": false,
														"isSlot": false,
														"src": "1109:7:2",
														"valueSize": 1
													},
													{
														"declaration": 385,
														"isOffset": false,
														"isSlot": false,
														"src": "1089:4:2",
														"valueSize": 1
													}
												],
												"id": 387,
												"nodeType": "InlineAssembly",
												"src": "1078:41:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 388,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1135:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1142:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1135:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 383,
												"id": 391,
												"nodeType": "Return",
												"src": "1128:15:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "167:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "757:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "756:17:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "797:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "797:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "796:6:2"
									},
									"scope": 617,
									"src": "737:413:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2138:320:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 404,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2164:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$617",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$617",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2156:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 402,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2156:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2156:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2156:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 407,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2181:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2156:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2189:31:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2148:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "2148:73:2"
											},
											{
												"assignments": [
													413,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 426,
														"src": "2310:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 412,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2310:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 420,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2360:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 414,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2328:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2328:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2351:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2328:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2309:54:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 422,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2381:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:60:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2373:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2373:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2373:78:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1156:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "2086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "2113:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2085:43:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:2"
									},
									"scope": 617,
									"src": "2067:391:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "3288:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 438,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3316:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 439,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "3324:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3330:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 437,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															444,
															464
														],
														"referencedDeclaration": 464,
														"src": "3303:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3303:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 436,
												"id": 442,
												"nodeType": "Return",
												"src": "3296:67:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2464:730:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "3221:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "3237:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3237:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3220:35:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "3274:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3274:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3273:14:2"
									},
									"scope": 617,
									"src": "3199:171:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "3709:76:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "3748:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 460,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3765:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 456,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															484,
															534
														],
														"referencedDeclaration": 534,
														"src": "3726:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3726:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 462,
												"nodeType": "Return",
												"src": "3719:59:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "3376:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "3614:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "3630:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3630:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "3649:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3649:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3613:63:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "3695:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3695:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3694:14:2"
									},
									"scope": 617,
									"src": "3592:193:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4260:111:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4299:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4307:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "4313:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4320:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 476,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															484,
															534
														],
														"referencedDeclaration": 534,
														"src": "4277:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 475,
												"id": 482,
												"nodeType": "Return",
												"src": "4270:94:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "3791:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4178:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4194:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4194:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4213:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4177:50:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4246:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4246:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4245:14:2"
									},
									"scope": 617,
									"src": "4147:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "4760:382:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 501,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4786:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$617",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$617",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4778:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 499,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4778:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4778:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4778:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 504,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4803:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4778:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4810:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4770:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "4770:81:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 511,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "4880:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 510,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "4869:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4869:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4889:31:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4861:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4861:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "4861:60:2"
											},
											{
												"assignments": [
													517,
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 533,
														"src": "4992:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 516,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4992:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 533,
														"src": "5006:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 518,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 524,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5061:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 520,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "5033:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5033:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 522,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "5053:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5033:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5033:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4991:75:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 528,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "5101:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 529,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5110:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 530,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5122:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 527,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "5083:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5083:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 497,
												"id": 532,
												"nodeType": "Return",
												"src": "5076:59:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4377:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "4650:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4650:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "4666:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4666:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "4685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "4700:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4700:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4649:78:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "4746:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4746:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4745:14:2"
									},
									"scope": 617,
									"src": "4619:523:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5419:97:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 545,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "5455:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 546,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5463:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5469:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 544,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															551,
															586
														],
														"referencedDeclaration": 586,
														"src": "5436:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 543,
												"id": 549,
												"nodeType": "Return",
												"src": "5429:80:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "5148:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "5347:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "5363:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5346:35:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "5405:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5405:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5404:14:2"
									},
									"scope": 617,
									"src": "5319:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "5828:288:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 565,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "5857:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 564,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "5846:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5846:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5866:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5838:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "5838:67:2"
											},
											{
												"assignments": [
													571,
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 585,
														"src": "5976:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 585,
														"src": "5990:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 572,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5990:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 576,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6035:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 574,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "6017:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6017:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6017:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 580,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "6075:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6084:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "6096:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 579,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "6057:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6057:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 562,
												"id": 584,
												"nodeType": "Return",
												"src": "6050:59:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5522:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "5728:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5728:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "5744:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5744:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "5763:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5763:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5727:63:2"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "5814:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5814:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5813:14:2"
									},
									"scope": 617,
									"src": "5700:416:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "6251:596:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 597,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "6322:519:2",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 601,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "6406:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6406:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6426:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6406:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 611,
																"nodeType": "Block",
																"src": "6778:53:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 608,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "6803:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 607,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6796:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6796:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 610,
																		"nodeType": "ExpressionStatement",
																		"src": "6796:20:2"
																	}
																]
															},
															"id": 612,
															"nodeType": "IfStatement",
															"src": "6402:429:2",
															"trueBody": {
																"id": 606,
																"nodeType": "Block",
																"src": "6429:343:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6613:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6635:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6664:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6658:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6658:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6639:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6707:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6711:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6703:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6703:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6724:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6696:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6696:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6696:44:2"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 590,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6664:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 590,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6711:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 605,
																		"nodeType": "InlineAssembly",
																		"src": "6604:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "6261:580:2",
												"trueBody": {
													"id": 600,
													"nodeType": "Block",
													"src": "6274:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 598,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "6295:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 596,
															"id": 599,
															"nodeType": "Return",
															"src": "6288:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6149:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "6163:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "6188:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6188:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6148:67:2"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "6237:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6237:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6236:14:2"
									},
									"scope": 617,
									"src": "6122:725:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 618,
							"src": "134:6715:2"
						}
					],
					"src": "33:6817:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 619,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
							"file": "../proxy/Initializable.sol",
							"id": 620,
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 374,
							"src": "65:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 621,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 373,
										"src": "643:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$373",
											"typeString": "contract Initializable"
										}
									},
									"id": 622,
									"nodeType": "InheritanceSpecifier",
									"src": "643:13:3"
								}
							],
							"contractDependencies": [
								373
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662,
								373
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "710:43:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "720:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "720:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "720:26:3"
											}
										]
									},
									"documentation": null,
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 625,
											"modifierName": {
												"argumentTypes": null,
												"id": 624,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 356,
												"src": "698:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "698:11:3"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:2:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:3"
									},
									"scope": 662,
									"src": "663:90:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "816:7:3",
										"statements": []
									},
									"documentation": null,
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 634,
											"modifierName": {
												"argumentTypes": null,
												"id": 633,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 356,
												"src": "804:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "804:11:3"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:2:3"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:0:3"
									},
									"scope": 662,
									"src": "759:64:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "898:34:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 642,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "915:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "915:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 641,
												"id": 644,
												"nodeType": "Return",
												"src": "908:17:3"
											}
										]
									},
									"documentation": null,
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "881:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "880:17:3"
									},
									"scope": 662,
									"src": "828:104:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1003:165:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 651,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "1013:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeable_$662",
														"typeString": "contract ContextUpgradeable"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "1013:4:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 653,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1153:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1153:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 650,
												"id": 655,
												"nodeType": "Return",
												"src": "1146:15:3"
											}
										]
									},
									"documentation": null,
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 657,
												"src": "989:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "989:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "988:14:3"
									},
									"scope": 662,
									"src": "938:230:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 661,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "1173:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 658,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1173:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 660,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 659,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1181:2:3",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1173:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 663,
							"src": "603:598:3"
						}
					],
					"src": "33:1169:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol",
					"exportedSymbols": {
						"EnumerableSetUpgradeable": [
							1154
						]
					},
					"id": 1155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "66:686:4",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 1154,
							"linearizedBaseContracts": [
								1154
							],
							"name": "EnumerableSetUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSetUpgradeable.Set",
									"id": 673,
									"members": [
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 673,
											"src": "1286:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 667,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1286:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 673,
											"src": "1437:37:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 671,
												"keyType": {
													"id": 669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1437:28:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 1154,
									"src": "1232:249:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "1720:335:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1734:22:4",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 684,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "1745:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 685,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "1750:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 683,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "1735:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1735:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "2012:37:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2033:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 682,
															"id": 710,
															"nodeType": "Return",
															"src": "2026:12:4"
														}
													]
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "1730:319:4",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "1758:248:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 693,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "1789:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 688,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "1772:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 668,
																		"src": "1772:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1772:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1772:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "ExpressionStatement",
															"src": "1772:23:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 696,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "1930:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 672,
																		"src": "1930:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 700,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 698,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "1943:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1930:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 701,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "1952:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 668,
																		"src": "1952:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1952:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1930:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "1930:40:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1991:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 682,
															"id": 707,
															"nodeType": "Return",
															"src": "1984:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "1487:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "1665:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 675,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 673,
													"src": "1665:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "1682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 677,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1664:32:4"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "1714:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1713:6:4"
									},
									"scope": 1154,
									"src": "1651:404:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "2295:1440:4",
										"statements": [
											{
												"assignments": [
													725
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 793,
														"src": "2405:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2405:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 726,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2426:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "2426:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 729,
													"indexExpression": {
														"argumentTypes": null,
														"id": 728,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2439:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2426:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2405:40:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 731,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "2460:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2474:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2460:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "3692:37:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3713:5:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 723,
															"id": 790,
															"nodeType": "Return",
															"src": "3706:12:4"
														}
													]
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "2456:1273:4",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "2477:1209:4",
													"statements": [
														{
															"assignments": [
																735
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 735,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 788,
																	"src": "2817:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 734,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2817:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 739,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 736,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "2841:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2854:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2841:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2817:38:4"
														},
														{
															"assignments": [
																741
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 741,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 788,
																	"src": "2869:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 740,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2869:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 747,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 742,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "2889:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 668,
																		"src": "2889:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2889:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2910:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2889:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2869:42:4"
														},
														{
															"assignments": [
																749
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 749,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 788,
																	"src": "3151:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 748,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3151:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 754,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 750,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "3171:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																			"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																		}
																	},
																	"id": 751,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "3171:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 753,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 752,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "3183:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3171:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3151:42:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 755,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "3285:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 668,
																		"src": "3285:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 759,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 757,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "3297:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3285:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 760,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "3314:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3285:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 762,
															"nodeType": "ExpressionStatement",
															"src": "3285:38:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 763,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "3389:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 766,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 672,
																		"src": "3389:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 767,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 765,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "3402:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3389:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 768,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "3415:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3431:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3415:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3389:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "3389:43:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 773,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "3538:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 668,
																		"src": "3538:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3538:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3538:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "3538:17:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3623:26:4",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 780,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "3630:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 672,
																		"src": "3630:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 783,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 782,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "3643:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3630:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "3623:26:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3671:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 723,
															"id": 787,
															"nodeType": "Return",
															"src": "3664:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2061:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "2240:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 716,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 673,
													"src": "2240:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "2257:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2239:32:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "2289:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2289:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2288:6:4"
									},
									"scope": 1154,
									"src": "2223:1512:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "3895:48:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 804,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "3912:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 672,
															"src": "3912:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"argumentTypes": null,
															"id": 806,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3925:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3912:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3935:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3912:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 803,
												"id": 810,
												"nodeType": "Return",
												"src": "3905:31:4"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "3741:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 812,
												"src": "3835:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 796,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 673,
													"src": "3835:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 812,
												"src": "3852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3834:32:4"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 812,
												"src": "3889:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3889:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3888:6:4"
									},
									"scope": 1154,
									"src": "3816:127:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "4089:42:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 820,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "4106:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "4106:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4106:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 819,
												"id": 823,
												"nodeType": "Return",
												"src": "4099:25:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "3949:70:4",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "4041:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 814,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 673,
													"src": "4041:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4040:17:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "4080:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4079:9:4"
									},
									"scope": 1154,
									"src": "4024:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "4539:125:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 836,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "4557:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																			"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "4557:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4557:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 839,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4578:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4557:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4585:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4549:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4549:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "4549:73:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 844,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "4639:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
																"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "4639:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 847,
													"indexExpression": {
														"argumentTypes": null,
														"id": 846,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4651:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4639:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 834,
												"id": 848,
												"nodeType": "Return",
												"src": "4632:25:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "4136:322:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "4476:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 827,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 673,
													"src": "4476:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "4493:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4475:32:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "4530:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4529:9:4"
									},
									"scope": 1154,
									"src": "4463:201:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSetUpgradeable.Bytes32Set",
									"id": 853,
									"members": [
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 853,
											"src": "4717:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 851,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 673,
												"src": "4717:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 1154,
									"src": "4689:45:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "4980:47:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 864,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "5002:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "5002:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "5014:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 863,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "4997:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4997:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 862,
												"id": 868,
												"nodeType": "Return",
												"src": "4990:30:4"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "4740:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 870,
												"src": "4917:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 855,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 853,
													"src": "4917:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 870,
												"src": "4941:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4916:39:4"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 870,
												"src": "4974:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4974:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4973:6:4"
									},
									"scope": 1154,
									"src": "4904:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "5274:50:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 881,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "5299:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "5299:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 883,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5311:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 880,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5291:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5291:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 879,
												"id": 885,
												"nodeType": "Return",
												"src": "5284:33:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "5033:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "5211:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 872,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 853,
													"src": "5211:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "5235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 874,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5210:39:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "5268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5267:6:4"
									},
									"scope": 1154,
									"src": "5195:129:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "5491:52:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 898,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "5518:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "5518:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 900,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "5530:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 897,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "5508:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5508:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 896,
												"id": 902,
												"nodeType": "Return",
												"src": "5501:35:4"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "5330:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "5423:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 889,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 853,
													"src": "5423:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "5447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 891,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5422:39:4"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "5485:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5485:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5484:6:4"
									},
									"scope": 1154,
									"src": "5405:138:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "5696:43:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 913,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "5721:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "5721:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 912,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5713:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5713:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 916,
												"nodeType": "Return",
												"src": "5706:26:4"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "5549:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "5640:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 906,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 853,
													"src": "5640:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5639:24:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "5687:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5686:9:4"
									},
									"scope": 1154,
									"src": "5624:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "6154:46:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 929,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "6175:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "6175:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 931,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "6187:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "6171:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6171:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 927,
												"id": 933,
												"nodeType": "Return",
												"src": "6164:29:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5744:322:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "6083:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 920,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 853,
													"src": "6083:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$853_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "6107:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6082:39:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "6145:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 925,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6145:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6144:9:4"
									},
									"scope": 1154,
									"src": "6071:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSetUpgradeable.AddressSet",
									"id": 938,
									"members": [
										{
											"constant": false,
											"id": 937,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 938,
											"src": "6253:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 936,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 673,
												"src": "6253:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 1154,
									"src": "6225:45:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "6516:74:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 949,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "6538:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 937,
															"src": "6538:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 957,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "6574:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6566:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 955,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6566:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6566:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6558:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 953,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6558:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6558:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6550:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 951,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6550:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 948,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "6533:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6533:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 947,
												"id": 962,
												"nodeType": "Return",
												"src": "6526:57:4"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "6276:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 964,
												"src": "6453:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 940,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 938,
													"src": "6453:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 964,
												"src": "6477:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6452:39:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 964,
												"src": "6510:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6510:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6509:6:4"
									},
									"scope": 1154,
									"src": "6440:150:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "6837:77:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 975,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "6862:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 937,
															"src": "6862:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 983,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "6898:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6890:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 981,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6890:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6890:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6882:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 979,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6882:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6882:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6874:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 977,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6874:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6874:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 974,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "6854:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6854:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 973,
												"id": 988,
												"nodeType": "Return",
												"src": "6847:60:4"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "6596:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 990,
												"src": "6774:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 966,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 938,
													"src": "6774:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 990,
												"src": "6798:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6773:39:4"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 990,
												"src": "6831:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6831:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6830:6:4"
									},
									"scope": 1154,
									"src": "6758:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "7081:79:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1001,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "7108:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 937,
															"src": "7108:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1009,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "7144:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7136:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7136:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7136:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7128:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1005,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7128:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7128:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7120:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1003,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7120:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7120:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1000,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "7098:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 999,
												"id": 1014,
												"nodeType": "Return",
												"src": "7091:62:4"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "6920:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1016,
												"src": "7013:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 992,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 938,
													"src": "7013:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1016,
												"src": "7037:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7012:39:4"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1016,
												"src": "7075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7074:6:4"
									},
									"scope": 1154,
									"src": "6995:165:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "7313:43:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1025,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "7338:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 937,
															"src": "7338:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1024,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "7330:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1028,
												"nodeType": "Return",
												"src": "7323:26:4"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "7166:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1030,
												"src": "7257:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1018,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 938,
													"src": "7257:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7256:24:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1030,
												"src": "7304:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7303:9:4"
									},
									"scope": 1154,
									"src": "7241:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "7771:73:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1047,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1033,
																						"src": "7816:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
																							"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																						}
																					},
																					"id": 1048,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 937,
																					"src": "7816:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$673_storage",
																						"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1049,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1035,
																					"src": "7828:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$673_storage",
																						"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1046,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "7812:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7812:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7804:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1044,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7804:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7804:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7796:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "7796:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7796:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7788:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1040,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7788:7:4",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7788:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1039,
												"id": 1054,
												"nodeType": "Return",
												"src": "7781:56:4"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "7361:322:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "7700:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1032,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 938,
													"src": "7700:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$938_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "7724:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7724:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7699:39:4"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "7762:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7762:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7761:9:4"
									},
									"scope": 1154,
									"src": "7688:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSetUpgradeable.UintSet",
									"id": 1059,
									"members": [
										{
											"constant": false,
											"id": 1058,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1059,
											"src": "7892:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1057,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 673,
												"src": "7892:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$673_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 1154,
									"src": "7867:42:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "8152:56:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1070,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "8174:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "8174:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1074,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "8194:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8186:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1072,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8186:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8186:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1069,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8169:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8169:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1077,
												"nodeType": "Return",
												"src": "8162:39:4"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "7915:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1079,
												"src": "8092:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1061,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1059,
													"src": "8092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1079,
												"src": "8113:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8113:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8091:36:4"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1079,
												"src": "8146:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8146:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8145:6:4"
									},
									"scope": 1154,
									"src": "8079:129:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "8452:59:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1090,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "8477:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "8477:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1094,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "8497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8489:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1092,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8489:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8489:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1089,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "8469:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8469:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1097,
												"nodeType": "Return",
												"src": "8462:42:4"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "8214:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "8392:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1081,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1059,
													"src": "8392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "8413:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8391:36:4"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "8446:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8446:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8445:6:4"
									},
									"scope": 1154,
									"src": "8376:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "8675:61:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1110,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "8702:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "8702:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "8722:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8714:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8714:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8714:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1109,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "8692:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8692:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1117,
												"nodeType": "Return",
												"src": "8685:44:4"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "8517:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "8610:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1101,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1059,
													"src": "8610:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "8631:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8609:36:4"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "8669:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8669:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8668:6:4"
									},
									"scope": 1154,
									"src": "8592:144:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "8886:43:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1128,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "8911:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "8911:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$673_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1127,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "8903:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8903:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1131,
												"nodeType": "Return",
												"src": "8896:26:4"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "8742:70:4",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "8833:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1121,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1059,
													"src": "8833:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8832:21:4"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1133,
												"src": "8877:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8877:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8876:9:4"
									},
									"scope": 1154,
									"src": "8817:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "9341:55:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1146,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "9370:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
																			"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																		}
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1058,
																	"src": "9370:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$673_storage",
																		"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1148,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "9382:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$673_storage",
																		"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1145,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "9366:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$673_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9366:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9358:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9358:7:4",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9358:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1151,
												"nodeType": "Return",
												"src": "9351:38:4"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "8934:322:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "9273:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1135,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1059,
													"src": "9273:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1059_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "9294:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9272:36:4"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "9332:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9331:9:4"
									},
									"scope": 1154,
									"src": "9261:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1155,
							"src": "753:8645:4"
						}
					],
					"src": "33:9366:4"
				},
				"id": 4
			},
			"contracts/BasicPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/BasicPriceOracle.sol",
					"exportedSymbols": {
						"BasicPriceOracle": [
							1257
						]
					},
					"id": 1258,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1156,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
							"id": 1157,
							"nodeType": "ImportDirective",
							"scope": 1258,
							"sourceUnit": 374,
							"src": "25:69:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 1158,
							"nodeType": "ImportDirective",
							"scope": 1258,
							"sourceUnit": 308,
							"src": "95:81:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceOracle.sol",
							"file": "./interfaces/IPriceOracle.sol",
							"id": 1159,
							"nodeType": "ImportDirective",
							"scope": 1258,
							"sourceUnit": 1275,
							"src": "177:39:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1160,
										"name": "IPriceOracle",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1274,
										"src": "247:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracle_$1274",
											"typeString": "contract IPriceOracle"
										}
									},
									"id": 1161,
									"nodeType": "InheritanceSpecifier",
									"src": "247:12:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1162,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 373,
										"src": "261:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$373",
											"typeString": "contract Initializable"
										}
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "261:13:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1164,
										"name": "AccessControlUpgradeable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 307,
										"src": "276:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControlUpgradeable_$307",
											"typeString": "contract AccessControlUpgradeable"
										}
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "276:24:5"
								}
							],
							"contractDependencies": [
								307,
								373,
								662,
								1274
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1257,
							"linearizedBaseContracts": [
								1257,
								307,
								662,
								373,
								1274
							],
							"name": "BasicPriceOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e1f84a36",
									"id": 1170,
									"mutability": "constant",
									"name": "PRICE_UPDATER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1257,
									"src": "307:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1166,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "307:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "50524943455f55504441544552",
												"id": 1168,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "357:15:5",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804",
													"typeString": "literal_string \"PRICE_UPDATER\""
												},
												"value": "PRICE_UPDATER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_74b366a297145849fa9687e16ecad1e3a60cf84f6c2256ae73e20a9f76669804",
													"typeString": "literal_string \"PRICE_UPDATER\""
												}
											],
											"id": 1167,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "347:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "347:26:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "priceSet",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1257,
									"src": "380:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1171,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "380:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "currentPrice_",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1257,
									"src": "407:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "484:197:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1179,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "494:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "494:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "494:22:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1183,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "538:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1184,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "558:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "558:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1182,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "527:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "527:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "527:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1189,
															"name": "PRICE_UPDATER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "592:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "607:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "607:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1188,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "581:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "581:39:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1194,
														"name": "priceSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "631:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "642:5:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "631:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "631:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1198,
														"name": "currentPrice_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "657:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "673:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "657:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "657:17:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8129fc1c",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1177,
											"modifierName": {
												"argumentTypes": null,
												"id": 1176,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 356,
												"src": "472:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "472:11:5"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:5"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:0:5"
									},
									"scope": 1257,
									"src": "443:238:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1264
									],
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "765:96:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1210,
															"name": "priceSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "783:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5072696365206d75737420626520736574206265666f726568616e64",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "793:30:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_271cdc09b99b57e310c26e2c44a1451ae8abdf6f09b401507834ed06a310a5fb",
																"typeString": "literal_string \"Price must be set beforehand\""
															},
															"value": "Price must be set beforehand"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_271cdc09b99b57e310c26e2c44a1451ae8abdf6f09b401507834ed06a310a5fb",
																"typeString": "literal_string \"Price must be set beforehand\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "775:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "775:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "775:49:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1214,
													"name": "currentPrice_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1174,
													"src": "841:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1215,
												"nodeType": "Return",
												"src": "834:20:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9d1b464a",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentPrice",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1205,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "733:8:5"
									},
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:2:5"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1217,
												"src": "756:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "755:9:5"
									},
									"scope": 1257,
									"src": "700:161:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "949:269:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1225,
																	"name": "PRICE_UPDATER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "975:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1226,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "990:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "990:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1224,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "967:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "967:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d697373696e672050524943455f5550444154455220726f6c65",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1005:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a267df445d51a851983f90239ddf98f73bb572959016b08ecf5f94f3383ff78f",
																"typeString": "literal_string \"Missing PRICE_UPDATER role\""
															},
															"value": "Missing PRICE_UPDATER role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a267df445d51a851983f90239ddf98f73bb572959016b08ecf5f94f3383ff78f",
																"typeString": "literal_string \"Missing PRICE_UPDATER role\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "959:75:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1233,
																"name": "_currentPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "1052:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1068:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1052:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5072696365206d757374206265206e6f6e2d7a65726f",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1071:24:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_768e9ddd6b357a5c1463c6f0df884479f447251dc114c022b98a98e1fd80fea1",
																"typeString": "literal_string \"Price must be non-zero\""
															},
															"value": "Price must be non-zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_768e9ddd6b357a5c1463c6f0df884479f447251dc114c022b98a98e1fd80fea1",
																"typeString": "literal_string \"Price must be non-zero\""
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1044:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1044:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "1044:52:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1239,
														"name": "priceSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "1107:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1118:4:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1107:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "1107:15:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1243,
														"name": "currentPrice_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "1132:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1244,
														"name": "_currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "1148:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1132:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "1132:29:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1248,
															"name": "_currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "1197:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "CurrentPriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1256
														],
														"referencedDeclaration": 1256,
														"src": "1177:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "EmitStatement",
												"src": "1172:39:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "18b20071",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCurrentPrice",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "940:8:5"
									},
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "_currentPrice",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1252,
												"src": "908:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "907:23:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:0:5"
									},
									"scope": 1257,
									"src": "883:335:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1256,
									"name": "CurrentPriceUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentPrice",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "1264:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1263:22:5"
									},
									"src": "1238:48:5"
								}
							],
							"scope": 1258,
							"src": "218:1070:5"
						}
					],
					"src": "0:1289:5"
				},
				"id": 5
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceOracle.sol",
					"exportedSymbols": {
						"IPriceOracle": [
							1274
						]
					},
					"id": 1275,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1259,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1274,
							"linearizedBaseContracts": [
								1274
							],
							"name": "IPriceOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9d1b464a",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "currentPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "88:2:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1264,
												"src": "114:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "113:15:6"
									},
									"scope": 1274,
									"src": "67:62:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18b20071",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCurrentPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1269,
												"src": "176:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "175:15:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "199:0:6"
									},
									"scope": 1274,
									"src": "151:49:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1273,
									"name": "CurrentPriceUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1273,
												"src": "246:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:15:6"
									},
									"src": "220:41:6"
								}
							],
							"scope": 1275,
							"src": "25:238:6"
						}
					],
					"src": "0:264:6"
				},
				"id": 6
			}
		}
	}
}